/**********************************************************************
 * Extern for Blockly
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var Blockly = {
  "ALIGN_CENTRE": {},
  "ALIGN_LEFT": {},
  "ALIGN_RIGHT": {},
  "ASTNode": {
    "DEFAULT_OFFSET_Y": {},
    "createBlockNode": function () {},
    "createConnectionNode": function () {},
    "createFieldNode": function () {},
    "createInputNode": function () {},
    "createStackNode": function () {},
    "createWorkspaceNode": function () {},
    "isConnectionType_": function () {},
    "types": {
      "BLOCK": {},
      "FIELD": {},
      "INPUT": {},
      "NEXT": {},
      "OUTPUT": {},
      "PREVIOUS": {},
      "STACK": {},
      "WORKSPACE": {}
    }
  },
  "Action": function () {},
  "BUMP_DELAY": {},
  "BUMP_RANDOMNESS": {},
  "Block": function () {},
  "BlockDragSurfaceSvg": function () {},
  "BlockDragger": {
    "initIconData_": function () {}
  },
  "BlockSvg": {
    "COLLAPSED_WARNING_ID": {},
    "INLINE": {},
    "MIN_BLOCK_Y": {},
    "SEP_SPACE_Y": {},
    "START_HAT": {},
    "TAB_WIDTH": {},
    "superClass_": {
      "allInputsFilled": function () {},
      "appendDummyInput": function () {},
      "appendInput_": function () {},
      "appendStatementInput": function () {},
      "appendValueInput": function () {},
      "bumpNeighbours": function () {},
      "colourSecondary_": {},
      "colourTertiary_": {},
      "colour_": {},
      "data": {},
      "dispose": function () {},
      "disposed": {},
      "getChildren": function () {},
      "getColour": function () {},
      "getColourBorder": function () {},
      "getColourSecondary": function () {},
      "getColourShadow": function () {},
      "getColourTertiary": function () {},
      "getCommentText": function () {},
      "getConnections_": function () {},
      "getDescendants": function () {},
      "getField": function () {},
      "getFieldValue": function () {},
      "getFirstStatementConnection": function () {},
      "getHue": function () {},
      "getInheritedDisabled": function () {},
      "getInput": function () {},
      "getInputTargetBlock": function () {},
      "getInputWithBlock": function () {},
      "getInputsInline": function () {},
      "getMatchingConnection": function () {},
      "getNextBlock": function () {},
      "getOnlyValueConnection_": function () {},
      "getParent": function () {},
      "getPreviousBlock": function () {},
      "getRelativeToSurfaceXY": function () {},
      "getRootBlock": function () {},
      "getStyleName": function () {},
      "getSurroundParent": function () {},
      "getTopStackBlock": function () {},
      "getVarModels": function () {},
      "getVars": function () {},
      "hue_": {},
      "initModel": function () {},
      "interpolate_": function () {},
      "isCollapsed": function () {},
      "isDeletable": function () {},
      "isDuplicatable": function () {},
      "isEditable": function () {},
      "isEnabled": function () {},
      "isInsertionMarker": function () {},
      "isMovable": function () {},
      "isShadow": function () {},
      "jsonInit": function () {},
      "jsonInitColour_": function () {},
      "jsonInitStyle_": function () {},
      "lastConnectionInStack": function () {},
      "makeConnection_": function () {},
      "mixin": function () {},
      "moveBy": function () {},
      "moveInputBefore": function () {},
      "moveNumberedInputBefore": function () {},
      "removeInput": function () {},
      "renameVarById": function () {},
      "setCollapsed": function () {},
      "setColour": function () {},
      "setCommentText": function () {},
      "setDeletable": function () {},
      "setDisabled": function () {},
      "setEditable": function () {},
      "setEnabled": function () {},
      "setFieldValue": function () {},
      "setHelpUrl": function () {},
      "setInputsInline": function () {},
      "setInsertionMarker": function () {},
      "setMovable": function () {},
      "setMutator": function () {},
      "setNextStatement": function () {},
      "setOnChange": function () {},
      "setOutput": function () {},
      "setParent": function () {},
      "setPreviousStatement": function () {},
      "setShadow": function () {},
      "setStyle": function () {},
      "setTooltip": function () {},
      "setWarningText": function () {},
      "styleName_": {},
      "toDevString": function () {},
      "toString": function () {},
      "unplug": function () {},
      "unplugFromRow_": function () {},
      "unplugFromStack_": function () {},
      "updateVarName": function () {}
    }
  },
  "Blocks": {},
  "Bubble": {
    "ANCHOR_RADIUS": {},
    "ARROW_ANGLE": {},
    "ARROW_BEND": {},
    "ARROW_THICKNESS": {},
    "BORDER_WIDTH": {},
    "bubbleMouseUp_": function () {},
    "onMouseMoveWrapper_": {},
    "onMouseUpWrapper_": {},
    "unbindDragEvents_": function () {}
  },
  "BubbleDragger": function () {},
  "COLLAPSE_CHARS": {},
  "CONNECTING_SNAP_RADIUS": {},
  "CURRENT_CONNECTION_PREFERENCE": {},
  "Comment": {
    "superClass_": {
      "SIZE": {},
      "bubble_": {},
      "collapseHidden": {},
      "computeIconLocation": function () {},
      "createIcon": function () {},
      "dispose": function () {},
      "getCorrectedSize": function () {},
      "getIconLocation": function () {},
      "iconClick_": function () {},
      "iconXY_": {},
      "isVisible": function () {},
      "setIconLocation": function () {},
      "updateColour": function () {},
      "updateEditable": function () {}
    }
  },
  "Component": {
    "Error": {
      "ALREADY_RENDERED": {},
      "CHILD_INDEX_OUT_OF_BOUNDS": {},
      "PARENT_UNABLE_TO_BE_SET": {}
    },
    "defaultRightToLeft": {}
  },
  "Connection": {
    "CAN_CONNECT": {},
    "REASON_CHECKS_FAILED": {},
    "REASON_DIFFERENT_WORKSPACES": {},
    "REASON_SELF_CONNECTION": {},
    "REASON_SHADOW_PARENT": {},
    "REASON_TARGET_NULL": {},
    "REASON_WRONG_TYPE": {},
    "connectReciprocally_": function () {},
    "lastConnectionInRow_": function () {},
    "singleConnection_": function () {}
  },
  "ConnectionDB": {
    "init": function () {}
  },
  "ContextMenu": {
    "blockCommentOption": function () {},
    "blockDeleteOption": function () {},
    "blockDuplicateOption": function () {},
    "blockHelpOption": function () {},
    "callbackFactory": function () {},
    "commentDeleteOption": function () {},
    "commentDuplicateOption": function () {},
    "createWidget_": function () {},
    "currentBlock": {},
    "eventWrapper_": {},
    "hide": function () {},
    "populate_": function () {},
    "position_": function () {},
    "show": function () {},
    "workspaceCommentOption": function () {}
  },
  "Css": {
    "CONTENT": {},
    "inject": function () {},
    "injected_": {},
    "register": function () {},
    "setCursor": function () {}
  },
  "Cursor": function () {},
  "CursorSvg": {
    "BLOCK_PADDING": {},
    "CURSOR_CLASS": {},
    "CURSOR_COLOR": {},
    "CURSOR_HEIGHT": {},
    "CURSOR_WIDTH": {},
    "HEIGHT_MULTIPLIER": {},
    "MARKER_CLASS": {},
    "MARKER_COLOR": {},
    "NOTCH_START_LENGTH": {},
    "STACK_PADDING": {},
    "VERTICAL_PADDING": {}
  },
  "DELETE_AREA_NONE": {},
  "DELETE_AREA_TOOLBOX": {},
  "DELETE_AREA_TRASH": {},
  "DELETE_VARIABLE_ID": {},
  "DRAG_BEGIN": {},
  "DRAG_FREE": {},
  "DRAG_NONE": {},
  "DRAG_RADIUS": {},
  "DRAG_STACK": {},
  "DRAG_STICKY": {},
  "DUMMY_INPUT": {},
  "DropDownDiv": {
    "ANIMATION_TIME": {},
    "ARROW_HORIZONTAL_PADDING": {},
    "ARROW_SIZE": {},
    "BORDER_SIZE": {},
    "DEFAULT_DROPDOWN_BORDER_COLOR": {},
    "DEFAULT_DROPDOWN_COLOR": {},
    "DIV_": {},
    "PADDING_Y": {},
    "animateOutTimer_": {},
    "boundsElement_": {},
    "clearContent": function () {},
    "createDom": function () {},
    "getBoundsInfo_": function () {},
    "getContentDiv": function () {},
    "getPositionAboveMetrics": function () {},
    "getPositionBelowMetrics": function () {},
    "getPositionMetrics": function () {},
    "getPositionTopOfPageMetrics": function () {},
    "getPositionX": function () {},
    "hide": function () {},
    "hideIfOwner": function () {},
    "hideWithoutAnimation": function () {},
    "isVisible": function () {},
    "onHide_": {},
    "owner_": {},
    "positionInternal_": function () {},
    "positionToField_": {},
    "repositionForWindowResize": function () {},
    "setBoundsElement": function () {},
    "setCategory": function () {},
    "setColour": function () {},
    "show": function () {},
    "showPositionedByBlock": function () {},
    "showPositionedByField": function () {}
  },
  "Events": {
    "Abstract": function () {},
    "BLOCK_CHANGE": {},
    "BLOCK_CREATE": {},
    "BLOCK_DELETE": {},
    "BLOCK_MOVE": {},
    "BUMP_EVENTS": {},
    "BlockBase": {
      "superClass_": {
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "BlockChange": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "fromJson": function () {},
            "getEventWorkspace_": function () {},
            "isNull": function () {},
            "run": function () {},
            "toJson": function () {}
          }
        },
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "BlockCreate": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "fromJson": function () {},
            "getEventWorkspace_": function () {},
            "isNull": function () {},
            "run": function () {},
            "toJson": function () {}
          }
        },
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "BlockDelete": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "fromJson": function () {},
            "getEventWorkspace_": function () {},
            "isNull": function () {},
            "run": function () {},
            "toJson": function () {}
          }
        },
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "BlockMove": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "fromJson": function () {},
            "getEventWorkspace_": function () {},
            "isNull": function () {},
            "run": function () {},
            "toJson": function () {}
          }
        },
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "CHANGE": {},
    "COMMENT_CHANGE": {},
    "COMMENT_CREATE": {},
    "COMMENT_DELETE": {},
    "COMMENT_MOVE": {},
    "CREATE": {},
    "Change": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "fromJson": function () {},
            "getEventWorkspace_": function () {},
            "isNull": function () {},
            "run": function () {},
            "toJson": function () {}
          }
        },
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "CommentBase": {
      "superClass_": {
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "CommentChange": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "fromJson": function () {},
            "getEventWorkspace_": function () {},
            "isNull": function () {},
            "run": function () {},
            "toJson": function () {}
          }
        },
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "CommentCreate": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "fromJson": function () {},
            "getEventWorkspace_": function () {},
            "isNull": function () {},
            "run": function () {},
            "toJson": function () {}
          }
        },
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "CommentCreateDeleteHelper": function () {},
    "CommentDelete": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "fromJson": function () {},
            "getEventWorkspace_": function () {},
            "isNull": function () {},
            "run": function () {},
            "toJson": function () {}
          }
        },
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "CommentMove": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "fromJson": function () {},
            "getEventWorkspace_": function () {},
            "isNull": function () {},
            "run": function () {},
            "toJson": function () {}
          }
        },
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "Create": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "fromJson": function () {},
            "getEventWorkspace_": function () {},
            "isNull": function () {},
            "run": function () {},
            "toJson": function () {}
          }
        },
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "DELETE": {},
    "Delete": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "fromJson": function () {},
            "getEventWorkspace_": function () {},
            "isNull": function () {},
            "run": function () {},
            "toJson": function () {}
          }
        },
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "FINISHED_LOADING": {},
    "FIRE_QUEUE_": {},
    "FinishedLoading": {
      "superClass_": {
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "MOVE": {},
    "Move": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "fromJson": function () {},
            "getEventWorkspace_": function () {},
            "isNull": function () {},
            "run": function () {},
            "toJson": function () {}
          }
        },
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "UI": {},
    "Ui": {
      "superClass_": {
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "VAR_CREATE": {},
    "VAR_DELETE": {},
    "VAR_RENAME": {},
    "VarBase": {
      "superClass_": {
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "VarCreate": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "fromJson": function () {},
            "getEventWorkspace_": function () {},
            "isNull": function () {},
            "run": function () {},
            "toJson": function () {}
          }
        },
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "VarDelete": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "fromJson": function () {},
            "getEventWorkspace_": function () {},
            "isNull": function () {},
            "run": function () {},
            "toJson": function () {}
          }
        },
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "VarRename": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "fromJson": function () {},
            "getEventWorkspace_": function () {},
            "isNull": function () {},
            "run": function () {},
            "toJson": function () {}
          }
        },
        "fromJson": function () {},
        "getEventWorkspace_": function () {},
        "isNull": function () {},
        "run": function () {},
        "toJson": function () {}
      }
    },
    "clearPendingUndo": function () {},
    "disable": function () {},
    "disableOrphans": function () {},
    "disabled_": {},
    "enable": function () {},
    "filter": function () {},
    "fire": function () {},
    "fireNow_": function () {},
    "fromJson": function () {},
    "getDescendantIds": function () {},
    "getGroup": function () {},
    "group_": {},
    "isEnabled": function () {},
    "recordUndo": {},
    "setGroup": function () {}
  },
  "Extensions": {
    "ALL_": {
      "parent_tooltip_when_inline": function () {}
    },
    "apply": function () {},
    "buildTooltipForDropdown": function () {},
    "buildTooltipWithFieldText": function () {},
    "checkBlockHasMutatorProperties_": function () {},
    "checkDropdownOptionsInTable_": function () {},
    "checkHasFunction_": function () {},
    "checkMutatorDialog_": function () {},
    "checkNoMutatorProperties_": function () {},
    "extensionParentTooltip_": function () {},
    "getMutatorProperties_": function () {},
    "mutatorPropertiesMatch_": function () {},
    "register": function () {},
    "registerMixin": function () {},
    "registerMutator": function () {},
    "unregister": function () {}
  },
  "FLYOUT_DRAG_RADIUS": {},
  "Field": {
    "BORDER_RECT_DEFAULT_HEIGHT": {},
    "DEFAULT_TEXT_OFFSET": {},
    "NBSP": {},
    "TEXT_DEFAULT_HEIGHT": {},
    "X_PADDING": {},
    "Y_PADDING": {}
  },
  "FieldAngle": {
    "CLOCKWISE": {},
    "HALF": {},
    "OFFSET": {},
    "RADIUS": {},
    "ROUND": {},
    "WRAP": {},
    "fromJson": function () {},
    "superClass_": {
      "CURSOR": {},
      "EDITABLE": {},
      "SERIALIZABLE": {},
      "bindEvents_": function () {},
      "bindInputEvents_": function () {},
      "callValidator": function () {},
      "classValidator": function () {},
      "clickTarget_": {},
      "configure_": function () {},
      "constructor": {
        "BORDERRADIUS": {},
        "FONTSIZE": {},
        "fromJson": function () {},
        "nonnegativeIntegerValidator": function () {},
        "numberValidator": function () {},
        "superClass_": {
          "EDITABLE": {},
          "SERIALIZABLE": {},
          "bindEvents_": function () {},
          "callValidator": function () {},
          "classValidator": function () {},
          "clickTarget_": {},
          "configure_": function () {},
          "createBorderRect_": function () {},
          "createTextElement_": function () {},
          "dispose": function () {},
          "disposed": {},
          "doClassValidation_": function () {},
          "doValueInvalid_": function () {},
          "doValueUpdate_": function () {},
          "forceRerender": function () {},
          "fromXml": function () {},
          "getAbsoluteXY_": function () {},
          "getClickTarget_": function () {},
          "getDisplayText_": function () {},
          "getFlipRtl": function () {},
          "getParentInput": function () {},
          "getScaledBBox_": function () {},
          "getSize": function () {},
          "getSourceBlock": function () {},
          "getSvgRoot": function () {},
          "getText": function () {},
          "getValidator": function () {},
          "getValue": function () {},
          "init": function () {},
          "initModel": function () {},
          "initView": function () {},
          "isClickable": function () {},
          "isCurrentlyEditable": function () {},
          "isDirty_": {},
          "isSerializable": function () {},
          "isTabNavigable": function () {},
          "isVisible": function () {},
          "markDirty": function () {},
          "maxDisplayLength": {},
          "name": {},
          "onBlocklyAction": function () {},
          "onMouseDown_": function () {},
          "processValidation_": function () {},
          "referencesVariables": function () {},
          "render_": function () {},
          "setCursorSvg": function () {},
          "setMarkerSvg": function () {},
          "setSourceBlock": function () {},
          "setText": function () {},
          "setTooltip": function () {},
          "setValidator": function () {},
          "setValue": function () {},
          "setVisible": function () {},
          "sourceBlock_": {},
          "toXml": function () {},
          "updateColour": function () {},
          "updateEditable": function () {},
          "updateSize_": function () {},
          "updateWidth": function () {},
          "visible_": {}
        }
      },
      "createBorderRect_": function () {},
      "createTextElement_": function () {},
      "dispose": function () {},
      "disposed": {},
      "doClassValidation_": function () {},
      "doValueInvalid_": function () {},
      "doValueUpdate_": function () {},
      "forceRerender": function () {},
      "fromXml": function () {},
      "getAbsoluteXY_": function () {},
      "getClickTarget_": function () {},
      "getDisplayText_": function () {},
      "getEditorText_": function () {},
      "getFlipRtl": function () {},
      "getParentInput": function () {},
      "getScaledBBox_": function () {},
      "getSize": function () {},
      "getSourceBlock": function () {},
      "getSvgRoot": function () {},
      "getText": function () {},
      "getText_": function () {},
      "getValidator": function () {},
      "getValue": function () {},
      "getValueFromEditorText_": function () {},
      "init": function () {},
      "initModel": function () {},
      "initView": function () {},
      "isClickable": function () {},
      "isCurrentlyEditable": function () {},
      "isDirty_": {},
      "isSerializable": function () {},
      "isTabNavigable": function () {},
      "isVisible": function () {},
      "markDirty": function () {},
      "maxDisplayLength": {},
      "name": {},
      "onBlocklyAction": function () {},
      "onHtmlInputChange_": function () {},
      "onHtmlInputKeyDown_": function () {},
      "onMouseDown_": function () {},
      "processValidation_": function () {},
      "referencesVariables": function () {},
      "render_": function () {},
      "resizeEditor_": function () {},
      "setCursorSvg": function () {},
      "setEditorValue_": function () {},
      "setMarkerSvg": function () {},
      "setSourceBlock": function () {},
      "setSpellcheck": function () {},
      "setText": function () {},
      "setTooltip": function () {},
      "setValidator": function () {},
      "setValue": function () {},
      "setVisible": function () {},
      "showEditor_": function () {},
      "showInlineEditor_": function () {},
      "showPromptEditor_": function () {},
      "sourceBlock_": {},
      "toXml": function () {},
      "unbindInputEvents_": function () {},
      "updateColour": function () {},
      "updateEditable": function () {},
      "updateSize_": function () {},
      "updateWidth": function () {},
      "visible_": {},
      "widgetCreate_": function () {},
      "widgetDispose_": function () {}
    }
  },
  "FieldCheckbox": {
    "CHECK_CHAR": {},
    "CHECK_X_OFFSET": {},
    "CHECK_Y_OFFSET": {},
    "WIDTH": {},
    "fromJson": function () {},
    "superClass_": {
      "EDITABLE": {},
      "SERIALIZABLE": {},
      "bindEvents_": function () {},
      "callValidator": function () {},
      "classValidator": function () {},
      "clickTarget_": {},
      "configure_": function () {},
      "createBorderRect_": function () {},
      "createTextElement_": function () {},
      "dispose": function () {},
      "disposed": {},
      "doClassValidation_": function () {},
      "doValueInvalid_": function () {},
      "doValueUpdate_": function () {},
      "forceRerender": function () {},
      "fromXml": function () {},
      "getAbsoluteXY_": function () {},
      "getClickTarget_": function () {},
      "getDisplayText_": function () {},
      "getFlipRtl": function () {},
      "getParentInput": function () {},
      "getScaledBBox_": function () {},
      "getSize": function () {},
      "getSourceBlock": function () {},
      "getSvgRoot": function () {},
      "getText": function () {},
      "getValidator": function () {},
      "getValue": function () {},
      "init": function () {},
      "initModel": function () {},
      "initView": function () {},
      "isClickable": function () {},
      "isCurrentlyEditable": function () {},
      "isDirty_": {},
      "isSerializable": function () {},
      "isTabNavigable": function () {},
      "isVisible": function () {},
      "markDirty": function () {},
      "maxDisplayLength": {},
      "name": {},
      "onBlocklyAction": function () {},
      "onMouseDown_": function () {},
      "processValidation_": function () {},
      "referencesVariables": function () {},
      "render_": function () {},
      "setCursorSvg": function () {},
      "setMarkerSvg": function () {},
      "setSourceBlock": function () {},
      "setText": function () {},
      "setTooltip": function () {},
      "setValidator": function () {},
      "setValue": function () {},
      "setVisible": function () {},
      "sourceBlock_": {},
      "toXml": function () {},
      "updateColour": function () {},
      "updateEditable": function () {},
      "updateSize_": function () {},
      "updateWidth": function () {},
      "visible_": {}
    }
  },
  "FieldColour": {
    "COLOURS": {},
    "COLUMNS": {},
    "DEFAULT_HEIGHT": {},
    "DEFAULT_WIDTH": {},
    "TITLES": {},
    "fromJson": function () {},
    "superClass_": {
      "EDITABLE": {},
      "SERIALIZABLE": {},
      "bindEvents_": function () {},
      "callValidator": function () {},
      "classValidator": function () {},
      "clickTarget_": {},
      "configure_": function () {},
      "createBorderRect_": function () {},
      "createTextElement_": function () {},
      "dispose": function () {},
      "disposed": {},
      "doClassValidation_": function () {},
      "doValueInvalid_": function () {},
      "doValueUpdate_": function () {},
      "forceRerender": function () {},
      "fromXml": function () {},
      "getAbsoluteXY_": function () {},
      "getClickTarget_": function () {},
      "getDisplayText_": function () {},
      "getFlipRtl": function () {},
      "getParentInput": function () {},
      "getScaledBBox_": function () {},
      "getSize": function () {},
      "getSourceBlock": function () {},
      "getSvgRoot": function () {},
      "getText": function () {},
      "getValidator": function () {},
      "getValue": function () {},
      "init": function () {},
      "initModel": function () {},
      "initView": function () {},
      "isClickable": function () {},
      "isCurrentlyEditable": function () {},
      "isDirty_": {},
      "isSerializable": function () {},
      "isTabNavigable": function () {},
      "isVisible": function () {},
      "markDirty": function () {},
      "maxDisplayLength": {},
      "name": {},
      "onBlocklyAction": function () {},
      "onMouseDown_": function () {},
      "processValidation_": function () {},
      "referencesVariables": function () {},
      "render_": function () {},
      "setCursorSvg": function () {},
      "setMarkerSvg": function () {},
      "setSourceBlock": function () {},
      "setText": function () {},
      "setTooltip": function () {},
      "setValidator": function () {},
      "setValue": function () {},
      "setVisible": function () {},
      "sourceBlock_": {},
      "toXml": function () {},
      "updateColour": function () {},
      "updateEditable": function () {},
      "updateSize_": function () {},
      "updateWidth": function () {},
      "visible_": {}
    }
  },
  "FieldDropdown": {
    "ARROW_CHAR": {},
    "CHECKMARK_OVERHANG": {},
    "IMAGE_Y_OFFSET": {},
    "IMAGE_Y_PADDING": {},
    "MAX_MENU_HEIGHT_VH": {},
    "applyTrim_": function () {},
    "fromJson": function () {},
    "superClass_": {
      "EDITABLE": {},
      "SERIALIZABLE": {},
      "bindEvents_": function () {},
      "callValidator": function () {},
      "classValidator": function () {},
      "clickTarget_": {},
      "configure_": function () {},
      "createBorderRect_": function () {},
      "createTextElement_": function () {},
      "dispose": function () {},
      "disposed": {},
      "doClassValidation_": function () {},
      "doValueInvalid_": function () {},
      "doValueUpdate_": function () {},
      "forceRerender": function () {},
      "fromXml": function () {},
      "getAbsoluteXY_": function () {},
      "getClickTarget_": function () {},
      "getDisplayText_": function () {},
      "getFlipRtl": function () {},
      "getParentInput": function () {},
      "getScaledBBox_": function () {},
      "getSize": function () {},
      "getSourceBlock": function () {},
      "getSvgRoot": function () {},
      "getText": function () {},
      "getValidator": function () {},
      "getValue": function () {},
      "init": function () {},
      "initModel": function () {},
      "initView": function () {},
      "isClickable": function () {},
      "isCurrentlyEditable": function () {},
      "isDirty_": {},
      "isSerializable": function () {},
      "isTabNavigable": function () {},
      "isVisible": function () {},
      "markDirty": function () {},
      "maxDisplayLength": {},
      "name": {},
      "onBlocklyAction": function () {},
      "onMouseDown_": function () {},
      "processValidation_": function () {},
      "referencesVariables": function () {},
      "render_": function () {},
      "setCursorSvg": function () {},
      "setMarkerSvg": function () {},
      "setSourceBlock": function () {},
      "setText": function () {},
      "setTooltip": function () {},
      "setValidator": function () {},
      "setValue": function () {},
      "setVisible": function () {},
      "sourceBlock_": {},
      "toXml": function () {},
      "updateColour": function () {},
      "updateEditable": function () {},
      "updateSize_": function () {},
      "updateWidth": function () {},
      "visible_": {}
    },
    "validateOptions_": function () {}
  },
  "FieldImage": {
    "Y_PADDING": {},
    "fromJson": function () {},
    "superClass_": {
      "EDITABLE": {},
      "SERIALIZABLE": {},
      "bindEvents_": function () {},
      "callValidator": function () {},
      "classValidator": function () {},
      "clickTarget_": {},
      "configure_": function () {},
      "createBorderRect_": function () {},
      "createTextElement_": function () {},
      "dispose": function () {},
      "disposed": {},
      "doClassValidation_": function () {},
      "doValueInvalid_": function () {},
      "doValueUpdate_": function () {},
      "forceRerender": function () {},
      "fromXml": function () {},
      "getAbsoluteXY_": function () {},
      "getClickTarget_": function () {},
      "getDisplayText_": function () {},
      "getFlipRtl": function () {},
      "getParentInput": function () {},
      "getScaledBBox_": function () {},
      "getSize": function () {},
      "getSourceBlock": function () {},
      "getSvgRoot": function () {},
      "getText": function () {},
      "getValidator": function () {},
      "getValue": function () {},
      "init": function () {},
      "initModel": function () {},
      "initView": function () {},
      "isClickable": function () {},
      "isCurrentlyEditable": function () {},
      "isDirty_": {},
      "isSerializable": function () {},
      "isTabNavigable": function () {},
      "isVisible": function () {},
      "markDirty": function () {},
      "maxDisplayLength": {},
      "name": {},
      "onBlocklyAction": function () {},
      "onMouseDown_": function () {},
      "processValidation_": function () {},
      "referencesVariables": function () {},
      "render_": function () {},
      "setCursorSvg": function () {},
      "setMarkerSvg": function () {},
      "setSourceBlock": function () {},
      "setText": function () {},
      "setTooltip": function () {},
      "setValidator": function () {},
      "setValue": function () {},
      "setVisible": function () {},
      "sourceBlock_": {},
      "toXml": function () {},
      "updateColour": function () {},
      "updateEditable": function () {},
      "updateSize_": function () {},
      "updateWidth": function () {},
      "visible_": {}
    }
  },
  "FieldLabel": {
    "fromJson": function () {},
    "superClass_": {
      "EDITABLE": {},
      "SERIALIZABLE": {},
      "bindEvents_": function () {},
      "callValidator": function () {},
      "classValidator": function () {},
      "clickTarget_": {},
      "configure_": function () {},
      "createBorderRect_": function () {},
      "createTextElement_": function () {},
      "dispose": function () {},
      "disposed": {},
      "doClassValidation_": function () {},
      "doValueInvalid_": function () {},
      "doValueUpdate_": function () {},
      "forceRerender": function () {},
      "fromXml": function () {},
      "getAbsoluteXY_": function () {},
      "getClickTarget_": function () {},
      "getDisplayText_": function () {},
      "getFlipRtl": function () {},
      "getParentInput": function () {},
      "getScaledBBox_": function () {},
      "getSize": function () {},
      "getSourceBlock": function () {},
      "getSvgRoot": function () {},
      "getText": function () {},
      "getValidator": function () {},
      "getValue": function () {},
      "init": function () {},
      "initModel": function () {},
      "initView": function () {},
      "isClickable": function () {},
      "isCurrentlyEditable": function () {},
      "isDirty_": {},
      "isSerializable": function () {},
      "isTabNavigable": function () {},
      "isVisible": function () {},
      "markDirty": function () {},
      "maxDisplayLength": {},
      "name": {},
      "onBlocklyAction": function () {},
      "onMouseDown_": function () {},
      "processValidation_": function () {},
      "referencesVariables": function () {},
      "render_": function () {},
      "setCursorSvg": function () {},
      "setMarkerSvg": function () {},
      "setSourceBlock": function () {},
      "setText": function () {},
      "setTooltip": function () {},
      "setValidator": function () {},
      "setValue": function () {},
      "setVisible": function () {},
      "sourceBlock_": {},
      "toXml": function () {},
      "updateColour": function () {},
      "updateEditable": function () {},
      "updateSize_": function () {},
      "updateWidth": function () {},
      "visible_": {}
    }
  },
  "FieldLabelSerializable": {
    "fromJson": function () {},
    "superClass_": {
      "EDITABLE": {},
      "SERIALIZABLE": {},
      "bindEvents_": function () {},
      "callValidator": function () {},
      "classValidator": function () {},
      "clickTarget_": {},
      "configure_": function () {},
      "constructor": {
        "fromJson": function () {},
        "superClass_": {
          "EDITABLE": {},
          "SERIALIZABLE": {},
          "bindEvents_": function () {},
          "callValidator": function () {},
          "classValidator": function () {},
          "clickTarget_": {},
          "configure_": function () {},
          "createBorderRect_": function () {},
          "createTextElement_": function () {},
          "dispose": function () {},
          "disposed": {},
          "doClassValidation_": function () {},
          "doValueInvalid_": function () {},
          "doValueUpdate_": function () {},
          "forceRerender": function () {},
          "fromXml": function () {},
          "getAbsoluteXY_": function () {},
          "getClickTarget_": function () {},
          "getDisplayText_": function () {},
          "getFlipRtl": function () {},
          "getParentInput": function () {},
          "getScaledBBox_": function () {},
          "getSize": function () {},
          "getSourceBlock": function () {},
          "getSvgRoot": function () {},
          "getText": function () {},
          "getValidator": function () {},
          "getValue": function () {},
          "init": function () {},
          "initModel": function () {},
          "initView": function () {},
          "isClickable": function () {},
          "isCurrentlyEditable": function () {},
          "isDirty_": {},
          "isSerializable": function () {},
          "isTabNavigable": function () {},
          "isVisible": function () {},
          "markDirty": function () {},
          "maxDisplayLength": {},
          "name": {},
          "onBlocklyAction": function () {},
          "onMouseDown_": function () {},
          "processValidation_": function () {},
          "referencesVariables": function () {},
          "render_": function () {},
          "setCursorSvg": function () {},
          "setMarkerSvg": function () {},
          "setSourceBlock": function () {},
          "setText": function () {},
          "setTooltip": function () {},
          "setValidator": function () {},
          "setValue": function () {},
          "setVisible": function () {},
          "sourceBlock_": {},
          "toXml": function () {},
          "updateColour": function () {},
          "updateEditable": function () {},
          "updateSize_": function () {},
          "updateWidth": function () {},
          "visible_": {}
        }
      },
      "createBorderRect_": function () {},
      "createTextElement_": function () {},
      "dispose": function () {},
      "disposed": {},
      "doClassValidation_": function () {},
      "doValueInvalid_": function () {},
      "doValueUpdate_": function () {},
      "forceRerender": function () {},
      "fromXml": function () {},
      "getAbsoluteXY_": function () {},
      "getClickTarget_": function () {},
      "getDisplayText_": function () {},
      "getFlipRtl": function () {},
      "getParentInput": function () {},
      "getScaledBBox_": function () {},
      "getSize": function () {},
      "getSourceBlock": function () {},
      "getSvgRoot": function () {},
      "getText": function () {},
      "getValidator": function () {},
      "getValue": function () {},
      "init": function () {},
      "initModel": function () {},
      "initView": function () {},
      "isClickable": function () {},
      "isCurrentlyEditable": function () {},
      "isDirty_": {},
      "isSerializable": function () {},
      "isTabNavigable": function () {},
      "isVisible": function () {},
      "markDirty": function () {},
      "maxDisplayLength": {},
      "name": {},
      "onBlocklyAction": function () {},
      "onMouseDown_": function () {},
      "processValidation_": function () {},
      "referencesVariables": function () {},
      "render_": function () {},
      "setClass": function () {},
      "setCursorSvg": function () {},
      "setMarkerSvg": function () {},
      "setSourceBlock": function () {},
      "setText": function () {},
      "setTooltip": function () {},
      "setValidator": function () {},
      "setValue": function () {},
      "setVisible": function () {},
      "sourceBlock_": {},
      "toXml": function () {},
      "updateColour": function () {},
      "updateEditable": function () {},
      "updateSize_": function () {},
      "updateWidth": function () {},
      "visible_": {}
    }
  },
  "FieldMultilineInput": {
    "LINE_HEIGHT": {},
    "fromJson": function () {},
    "superClass_": {
      "CURSOR": {},
      "EDITABLE": {},
      "SERIALIZABLE": {},
      "bindEvents_": function () {},
      "bindInputEvents_": function () {},
      "callValidator": function () {},
      "classValidator": function () {},
      "clickTarget_": {},
      "configure_": function () {},
      "constructor": {
        "BORDERRADIUS": {},
        "FONTSIZE": {},
        "fromJson": function () {},
        "nonnegativeIntegerValidator": function () {},
        "numberValidator": function () {},
        "superClass_": {
          "EDITABLE": {},
          "SERIALIZABLE": {},
          "bindEvents_": function () {},
          "callValidator": function () {},
          "classValidator": function () {},
          "clickTarget_": {},
          "configure_": function () {},
          "createBorderRect_": function () {},
          "createTextElement_": function () {},
          "dispose": function () {},
          "disposed": {},
          "doClassValidation_": function () {},
          "doValueInvalid_": function () {},
          "doValueUpdate_": function () {},
          "forceRerender": function () {},
          "fromXml": function () {},
          "getAbsoluteXY_": function () {},
          "getClickTarget_": function () {},
          "getDisplayText_": function () {},
          "getFlipRtl": function () {},
          "getParentInput": function () {},
          "getScaledBBox_": function () {},
          "getSize": function () {},
          "getSourceBlock": function () {},
          "getSvgRoot": function () {},
          "getText": function () {},
          "getValidator": function () {},
          "getValue": function () {},
          "init": function () {},
          "initModel": function () {},
          "initView": function () {},
          "isClickable": function () {},
          "isCurrentlyEditable": function () {},
          "isDirty_": {},
          "isSerializable": function () {},
          "isTabNavigable": function () {},
          "isVisible": function () {},
          "markDirty": function () {},
          "maxDisplayLength": {},
          "name": {},
          "onBlocklyAction": function () {},
          "onMouseDown_": function () {},
          "processValidation_": function () {},
          "referencesVariables": function () {},
          "render_": function () {},
          "setCursorSvg": function () {},
          "setMarkerSvg": function () {},
          "setSourceBlock": function () {},
          "setText": function () {},
          "setTooltip": function () {},
          "setValidator": function () {},
          "setValue": function () {},
          "setVisible": function () {},
          "sourceBlock_": {},
          "toXml": function () {},
          "updateColour": function () {},
          "updateEditable": function () {},
          "updateSize_": function () {},
          "updateWidth": function () {},
          "visible_": {}
        }
      },
      "createBorderRect_": function () {},
      "createTextElement_": function () {},
      "dispose": function () {},
      "disposed": {},
      "doClassValidation_": function () {},
      "doValueInvalid_": function () {},
      "doValueUpdate_": function () {},
      "forceRerender": function () {},
      "fromXml": function () {},
      "getAbsoluteXY_": function () {},
      "getClickTarget_": function () {},
      "getDisplayText_": function () {},
      "getEditorText_": function () {},
      "getFlipRtl": function () {},
      "getParentInput": function () {},
      "getScaledBBox_": function () {},
      "getSize": function () {},
      "getSourceBlock": function () {},
      "getSvgRoot": function () {},
      "getText": function () {},
      "getText_": function () {},
      "getValidator": function () {},
      "getValue": function () {},
      "getValueFromEditorText_": function () {},
      "init": function () {},
      "initModel": function () {},
      "initView": function () {},
      "isClickable": function () {},
      "isCurrentlyEditable": function () {},
      "isDirty_": {},
      "isSerializable": function () {},
      "isTabNavigable": function () {},
      "isVisible": function () {},
      "markDirty": function () {},
      "maxDisplayLength": {},
      "name": {},
      "onBlocklyAction": function () {},
      "onHtmlInputChange_": function () {},
      "onHtmlInputKeyDown_": function () {},
      "onMouseDown_": function () {},
      "processValidation_": function () {},
      "referencesVariables": function () {},
      "render_": function () {},
      "resizeEditor_": function () {},
      "setCursorSvg": function () {},
      "setEditorValue_": function () {},
      "setMarkerSvg": function () {},
      "setSourceBlock": function () {},
      "setSpellcheck": function () {},
      "setText": function () {},
      "setTooltip": function () {},
      "setValidator": function () {},
      "setValue": function () {},
      "setVisible": function () {},
      "showEditor_": function () {},
      "showInlineEditor_": function () {},
      "showPromptEditor_": function () {},
      "sourceBlock_": {},
      "toXml": function () {},
      "unbindInputEvents_": function () {},
      "updateColour": function () {},
      "updateEditable": function () {},
      "updateSize_": function () {},
      "updateWidth": function () {},
      "visible_": {},
      "widgetCreate_": function () {},
      "widgetDispose_": function () {}
    }
  },
  "FieldNumber": {
    "fromJson": function () {},
    "superClass_": {
      "CURSOR": {},
      "EDITABLE": {},
      "SERIALIZABLE": {},
      "bindEvents_": function () {},
      "bindInputEvents_": function () {},
      "callValidator": function () {},
      "classValidator": function () {},
      "clickTarget_": {},
      "configure_": function () {},
      "constructor": {
        "BORDERRADIUS": {},
        "FONTSIZE": {},
        "fromJson": function () {},
        "nonnegativeIntegerValidator": function () {},
        "numberValidator": function () {},
        "superClass_": {
          "EDITABLE": {},
          "SERIALIZABLE": {},
          "bindEvents_": function () {},
          "callValidator": function () {},
          "classValidator": function () {},
          "clickTarget_": {},
          "configure_": function () {},
          "createBorderRect_": function () {},
          "createTextElement_": function () {},
          "dispose": function () {},
          "disposed": {},
          "doClassValidation_": function () {},
          "doValueInvalid_": function () {},
          "doValueUpdate_": function () {},
          "forceRerender": function () {},
          "fromXml": function () {},
          "getAbsoluteXY_": function () {},
          "getClickTarget_": function () {},
          "getDisplayText_": function () {},
          "getFlipRtl": function () {},
          "getParentInput": function () {},
          "getScaledBBox_": function () {},
          "getSize": function () {},
          "getSourceBlock": function () {},
          "getSvgRoot": function () {},
          "getText": function () {},
          "getValidator": function () {},
          "getValue": function () {},
          "init": function () {},
          "initModel": function () {},
          "initView": function () {},
          "isClickable": function () {},
          "isCurrentlyEditable": function () {},
          "isDirty_": {},
          "isSerializable": function () {},
          "isTabNavigable": function () {},
          "isVisible": function () {},
          "markDirty": function () {},
          "maxDisplayLength": {},
          "name": {},
          "onBlocklyAction": function () {},
          "onMouseDown_": function () {},
          "processValidation_": function () {},
          "referencesVariables": function () {},
          "render_": function () {},
          "setCursorSvg": function () {},
          "setMarkerSvg": function () {},
          "setSourceBlock": function () {},
          "setText": function () {},
          "setTooltip": function () {},
          "setValidator": function () {},
          "setValue": function () {},
          "setVisible": function () {},
          "sourceBlock_": {},
          "toXml": function () {},
          "updateColour": function () {},
          "updateEditable": function () {},
          "updateSize_": function () {},
          "updateWidth": function () {},
          "visible_": {}
        }
      },
      "createBorderRect_": function () {},
      "createTextElement_": function () {},
      "dispose": function () {},
      "disposed": {},
      "doClassValidation_": function () {},
      "doValueInvalid_": function () {},
      "doValueUpdate_": function () {},
      "forceRerender": function () {},
      "fromXml": function () {},
      "getAbsoluteXY_": function () {},
      "getClickTarget_": function () {},
      "getDisplayText_": function () {},
      "getEditorText_": function () {},
      "getFlipRtl": function () {},
      "getParentInput": function () {},
      "getScaledBBox_": function () {},
      "getSize": function () {},
      "getSourceBlock": function () {},
      "getSvgRoot": function () {},
      "getText": function () {},
      "getText_": function () {},
      "getValidator": function () {},
      "getValue": function () {},
      "getValueFromEditorText_": function () {},
      "init": function () {},
      "initModel": function () {},
      "initView": function () {},
      "isClickable": function () {},
      "isCurrentlyEditable": function () {},
      "isDirty_": {},
      "isSerializable": function () {},
      "isTabNavigable": function () {},
      "isVisible": function () {},
      "markDirty": function () {},
      "maxDisplayLength": {},
      "name": {},
      "onBlocklyAction": function () {},
      "onHtmlInputChange_": function () {},
      "onHtmlInputKeyDown_": function () {},
      "onMouseDown_": function () {},
      "processValidation_": function () {},
      "referencesVariables": function () {},
      "render_": function () {},
      "resizeEditor_": function () {},
      "setCursorSvg": function () {},
      "setEditorValue_": function () {},
      "setMarkerSvg": function () {},
      "setSourceBlock": function () {},
      "setSpellcheck": function () {},
      "setText": function () {},
      "setTooltip": function () {},
      "setValidator": function () {},
      "setValue": function () {},
      "setVisible": function () {},
      "showEditor_": function () {},
      "showInlineEditor_": function () {},
      "showPromptEditor_": function () {},
      "sourceBlock_": {},
      "toXml": function () {},
      "unbindInputEvents_": function () {},
      "updateColour": function () {},
      "updateEditable": function () {},
      "updateSize_": function () {},
      "updateWidth": function () {},
      "visible_": {},
      "widgetCreate_": function () {},
      "widgetDispose_": function () {}
    }
  },
  "FieldTextInput": {
    "BORDERRADIUS": {},
    "FONTSIZE": {},
    "fromJson": function () {},
    "nonnegativeIntegerValidator": function () {},
    "numberValidator": function () {},
    "superClass_": {
      "EDITABLE": {},
      "SERIALIZABLE": {},
      "bindEvents_": function () {},
      "callValidator": function () {},
      "classValidator": function () {},
      "clickTarget_": {},
      "configure_": function () {},
      "createBorderRect_": function () {},
      "createTextElement_": function () {},
      "dispose": function () {},
      "disposed": {},
      "doClassValidation_": function () {},
      "doValueInvalid_": function () {},
      "doValueUpdate_": function () {},
      "forceRerender": function () {},
      "fromXml": function () {},
      "getAbsoluteXY_": function () {},
      "getClickTarget_": function () {},
      "getDisplayText_": function () {},
      "getFlipRtl": function () {},
      "getParentInput": function () {},
      "getScaledBBox_": function () {},
      "getSize": function () {},
      "getSourceBlock": function () {},
      "getSvgRoot": function () {},
      "getText": function () {},
      "getValidator": function () {},
      "getValue": function () {},
      "init": function () {},
      "initModel": function () {},
      "initView": function () {},
      "isClickable": function () {},
      "isCurrentlyEditable": function () {},
      "isDirty_": {},
      "isSerializable": function () {},
      "isTabNavigable": function () {},
      "isVisible": function () {},
      "markDirty": function () {},
      "maxDisplayLength": {},
      "name": {},
      "onBlocklyAction": function () {},
      "onMouseDown_": function () {},
      "processValidation_": function () {},
      "referencesVariables": function () {},
      "render_": function () {},
      "setCursorSvg": function () {},
      "setMarkerSvg": function () {},
      "setSourceBlock": function () {},
      "setText": function () {},
      "setTooltip": function () {},
      "setValidator": function () {},
      "setValue": function () {},
      "setVisible": function () {},
      "sourceBlock_": {},
      "toXml": function () {},
      "updateColour": function () {},
      "updateEditable": function () {},
      "updateSize_": function () {},
      "updateWidth": function () {},
      "visible_": {}
    }
  },
  "FieldVariable": {
    "dropdownCreate": function () {},
    "fromJson": function () {},
    "superClass_": {
      "CURSOR": {},
      "EDITABLE": {},
      "SERIALIZABLE": {},
      "bindEvents_": function () {},
      "callValidator": function () {},
      "classValidator": function () {},
      "clickTarget_": {},
      "configure_": function () {},
      "constructor": {
        "ARROW_CHAR": {},
        "CHECKMARK_OVERHANG": {},
        "IMAGE_Y_OFFSET": {},
        "IMAGE_Y_PADDING": {},
        "MAX_MENU_HEIGHT_VH": {},
        "applyTrim_": function () {},
        "fromJson": function () {},
        "superClass_": {
          "EDITABLE": {},
          "SERIALIZABLE": {},
          "bindEvents_": function () {},
          "callValidator": function () {},
          "classValidator": function () {},
          "clickTarget_": {},
          "configure_": function () {},
          "createBorderRect_": function () {},
          "createTextElement_": function () {},
          "dispose": function () {},
          "disposed": {},
          "doClassValidation_": function () {},
          "doValueInvalid_": function () {},
          "doValueUpdate_": function () {},
          "forceRerender": function () {},
          "fromXml": function () {},
          "getAbsoluteXY_": function () {},
          "getClickTarget_": function () {},
          "getDisplayText_": function () {},
          "getFlipRtl": function () {},
          "getParentInput": function () {},
          "getScaledBBox_": function () {},
          "getSize": function () {},
          "getSourceBlock": function () {},
          "getSvgRoot": function () {},
          "getText": function () {},
          "getValidator": function () {},
          "getValue": function () {},
          "init": function () {},
          "initModel": function () {},
          "initView": function () {},
          "isClickable": function () {},
          "isCurrentlyEditable": function () {},
          "isDirty_": {},
          "isSerializable": function () {},
          "isTabNavigable": function () {},
          "isVisible": function () {},
          "markDirty": function () {},
          "maxDisplayLength": {},
          "name": {},
          "onBlocklyAction": function () {},
          "onMouseDown_": function () {},
          "processValidation_": function () {},
          "referencesVariables": function () {},
          "render_": function () {},
          "setCursorSvg": function () {},
          "setMarkerSvg": function () {},
          "setSourceBlock": function () {},
          "setText": function () {},
          "setTooltip": function () {},
          "setValidator": function () {},
          "setValue": function () {},
          "setVisible": function () {},
          "sourceBlock_": {},
          "toXml": function () {},
          "updateColour": function () {},
          "updateEditable": function () {},
          "updateSize_": function () {},
          "updateWidth": function () {},
          "visible_": {}
        },
        "validateOptions_": function () {}
      },
      "createBorderRect_": function () {},
      "createTextElement_": function () {},
      "dispose": function () {},
      "disposed": {},
      "doClassValidation_": function () {},
      "doValueInvalid_": function () {},
      "doValueUpdate_": function () {},
      "dropdownCreate_": function () {},
      "dropdownDispose_": function () {},
      "forceRerender": function () {},
      "fromXml": function () {},
      "getAbsoluteXY_": function () {},
      "getClickTarget_": function () {},
      "getDisplayText_": function () {},
      "getFlipRtl": function () {},
      "getOptions": function () {},
      "getParentInput": function () {},
      "getScaledBBox_": function () {},
      "getSize": function () {},
      "getSourceBlock": function () {},
      "getSvgRoot": function () {},
      "getText": function () {},
      "getText_": function () {},
      "getValidator": function () {},
      "getValue": function () {},
      "handleMenuActionEvent_": function () {},
      "init": function () {},
      "initModel": function () {},
      "initView": function () {},
      "isClickable": function () {},
      "isCurrentlyEditable": function () {},
      "isDirty_": {},
      "isOptionListDynamic": function () {},
      "isSerializable": function () {},
      "isTabNavigable": function () {},
      "isVisible": function () {},
      "markDirty": function () {},
      "maxDisplayLength": {},
      "name": {},
      "onBlocklyAction": function () {},
      "onItemSelected": function () {},
      "onMouseDown_": function () {},
      "processValidation_": function () {},
      "referencesVariables": function () {},
      "renderSelectedImage_": function () {},
      "renderSelectedText_": function () {},
      "render_": function () {},
      "setCursorSvg": function () {},
      "setMarkerSvg": function () {},
      "setSourceBlock": function () {},
      "setText": function () {},
      "setTooltip": function () {},
      "setValidator": function () {},
      "setValue": function () {},
      "setVisible": function () {},
      "showEditor_": function () {},
      "sourceBlock_": {},
      "toXml": function () {},
      "trimOptions_": function () {},
      "updateColour": function () {},
      "updateEditable": function () {},
      "updateSize_": function () {},
      "updateWidth": function () {},
      "visible_": {}
    }
  },
  "Flyout": function () {},
  "FlyoutButton": {
    "MARGIN": {}
  },
  "FlyoutCursor": {
    "superClass_": {
      "getCurNode": function () {},
      "getDrawer": function () {},
      "hide": function () {},
      "in": function () {},
      "next": function () {},
      "out": function () {},
      "prev": function () {},
      "setCurNode": function () {},
      "setDrawer": function () {}
    }
  },
  "FlyoutDragger": {
    "superClass_": {
      "dispose": function () {},
      "drag": function () {},
      "endDrag": function () {},
      "startDrag": function () {}
    }
  },
  "Generator": {
    "NAME_TYPE": {}
  },
  "Gesture": {
    "inProgress": function () {}
  },
  "Grid": {
    "createDom": function () {}
  },
  "HSV_SATURATION": {},
  "HSV_VALUE": {},
  "HorizontalFlyout": {
    "superClass_": {
      "CORNER_RADIUS": {},
      "GAP_X": {},
      "GAP_Y": {},
      "MARGIN": {},
      "SCROLLBAR_PADDING": {},
      "addBlockListeners_": function () {},
      "autoClose": {},
      "blockMouseDown_": function () {},
      "clearOldBlocks_": function () {},
      "containerVisible_": {},
      "createBlock": function () {},
      "createDom": function () {},
      "createRect_": function () {},
      "dispose": function () {},
      "dragAngleRange_": {},
      "filterForCapacity_": function () {},
      "getHeight": function () {},
      "getWidth": function () {},
      "getWorkspace": function () {},
      "height_": {},
      "hide": function () {},
      "init": function () {},
      "initFlyoutButton_": function () {},
      "isBlockCreatable_": function () {},
      "isScrollable": function () {},
      "isVisible": function () {},
      "isVisible_": {},
      "moveRectToBlock_": function () {},
      "onMouseDown_": function () {},
      "placeNewBlock_": function () {},
      "positionAt_": function () {},
      "reflow": function () {},
      "setContainerVisible": function () {},
      "setVisible": function () {},
      "show": function () {},
      "updateDisplay_": function () {},
      "width_": {}
    }
  },
  "INPUT_VALUE": {},
  "INSERTION_MARKER_COLOUR": {},
  "Icon": function () {},
  "Input": function () {},
  "InsertionMarkerManager": function () {},
  "LINE_MODE_MULTIPLIER": {},
  "LONGPRESS": {},
  "MarkerCursor": {
    "superClass_": {
      "getCurNode": function () {},
      "getDrawer": function () {},
      "hide": function () {},
      "in": function () {},
      "next": function () {},
      "out": function () {},
      "prev": function () {},
      "setCurNode": function () {},
      "setDrawer": function () {}
    }
  },
  "Menu": {
    "superClass_": {
      "addChild": function () {},
      "addChildAt": function () {},
      "createDom": function () {},
      "dispose": function () {},
      "disposeInternal": function () {},
      "enterDocument": function () {},
      "exitDocument": function () {},
      "forEachChild": function () {},
      "getChild": function () {},
      "getChildAt": function () {},
      "getChildCount": function () {},
      "getContentElement": function () {},
      "getElement": function () {},
      "getId": function () {},
      "getParent": function () {},
      "hasChildren": function () {},
      "indexOfChild": function () {},
      "isInDocument": function () {},
      "isRightToLeft": function () {},
      "render": function () {},
      "renderBefore": function () {},
      "render_": function () {},
      "setElementInternal": function () {},
      "setParent": function () {},
      "setRightToLeft": function () {}
    }
  },
  "MenuItem": {
    "superClass_": {
      "addChild": function () {},
      "addChildAt": function () {},
      "createDom": function () {},
      "dispose": function () {},
      "disposeInternal": function () {},
      "enterDocument": function () {},
      "exitDocument": function () {},
      "forEachChild": function () {},
      "getChild": function () {},
      "getChildAt": function () {},
      "getChildCount": function () {},
      "getContentElement": function () {},
      "getElement": function () {},
      "getId": function () {},
      "getParent": function () {},
      "hasChildren": function () {},
      "indexOfChild": function () {},
      "isInDocument": function () {},
      "isRightToLeft": function () {},
      "render": function () {},
      "renderBefore": function () {},
      "render_": function () {},
      "setElementInternal": function () {},
      "setParent": function () {},
      "setRightToLeft": function () {}
    }
  },
  "Msg": {},
  "Mutator": {
    "findParentWs": function () {},
    "reconnect": function () {},
    "superClass_": {
      "SIZE": {},
      "bubble_": {},
      "collapseHidden": {},
      "computeIconLocation": function () {},
      "createIcon": function () {},
      "dispose": function () {},
      "getCorrectedSize": function () {},
      "getIconLocation": function () {},
      "iconClick_": function () {},
      "iconXY_": {},
      "isVisible": function () {},
      "setIconLocation": function () {},
      "updateColour": function () {},
      "updateEditable": function () {}
    }
  },
  "NEXT_STATEMENT": {},
  "Names": {
    "DEVELOPER_VARIABLE_TYPE": {},
    "equals": function () {}
  },
  "OPPOSITE_TYPE": {},
  "OUTPUT_VALUE": {},
  "Options": {
    "parseGridOptions_": function () {},
    "parseMoveOptions": function () {},
    "parseToolboxTree": function () {},
    "parseZoomOptions_": function () {}
  },
  "PAGE_MODE_MULTIPLIER": {},
  "PREVIOUS_STATEMENT": {},
  "PROCEDURE_CATEGORY_NAME": {},
  "Procedures": {
    "NAME_TYPE": {},
    "allProcedures": function () {},
    "findLegalName": function () {},
    "flyoutCategory": function () {},
    "getCallers": function () {},
    "getDefinition": function () {},
    "isLegalName_": function () {},
    "isNameUsed": function () {},
    "mutateCallers": function () {},
    "procTupleComparator_": function () {},
    "rename": function () {}
  },
  "RENAME_VARIABLE_ID": {},
  "RenderedConnection": {
    "superClass_": {
      "canConnectToPrevious_": function () {},
      "canConnectWithReason_": function () {},
      "checkConnection_": function () {},
      "checkType_": function () {},
      "check_": {},
      "connect": function () {},
      "connect_": function () {},
      "disconnect": function () {},
      "disconnectInternal_": function () {},
      "dispose": function () {},
      "disposed": {},
      "getCheck": function () {},
      "getParentInput": function () {},
      "getShadowDom": function () {},
      "getSourceBlock": function () {},
      "isConnected": function () {},
      "isConnectionAllowed": function () {},
      "isSuperior": function () {},
      "neighbours_": function () {},
      "onCheckChanged_": function () {},
      "onFailedConnect": function () {},
      "respawnShadow_": function () {},
      "setCheck": function () {},
      "setShadowDom": function () {},
      "shadowDom_": {},
      "targetBlock": function () {},
      "targetConnection": {},
      "toString": function () {},
      "x_": {},
      "y_": {}
    }
  },
  "SNAP_RADIUS": {},
  "SOUND_LIMIT": {},
  "SPRITE": {
    "height": {},
    "url": {},
    "width": {}
  },
  "Scrollbar": {
    "metricsAreEquivalent_": function () {},
    "scrollbarThickness": {}
  },
  "ScrollbarPair": function () {},
  "TOOLBOX_AT_BOTTOM": {},
  "TOOLBOX_AT_LEFT": {},
  "TOOLBOX_AT_RIGHT": {},
  "TOOLBOX_AT_TOP": {},
  "Theme": function () {},
  "ThemeManager": function () {},
  "Themes": {
    "Classic": {
      "blockStyles_": {
        "colour_blocks": {
          "colourPrimary": {}
        },
        "hat_blocks": {
          "colourPrimary": {},
          "hat": {}
        },
        "list_blocks": {
          "colourPrimary": {}
        },
        "logic_blocks": {
          "colourPrimary": {}
        },
        "loop_blocks": {
          "colourPrimary": {}
        },
        "math_blocks": {
          "colourPrimary": {}
        },
        "procedure_blocks": {
          "colourPrimary": {}
        },
        "text_blocks": {
          "colourPrimary": {}
        },
        "variable_blocks": {
          "colourPrimary": {}
        },
        "variable_dynamic_blocks": {
          "colourPrimary": {}
        }
      },
      "categoryStyles_": {
        "colour_category": {
          "colour": {}
        },
        "list_category": {
          "colour": {}
        },
        "logic_category": {
          "colour": {}
        },
        "loop_category": {
          "colour": {}
        },
        "math_category": {
          "colour": {}
        },
        "procedure_category": {
          "colour": {}
        },
        "text_category": {
          "colour": {}
        },
        "variable_category": {
          "colour": {}
        },
        "variable_dynamic_category": {
          "colour": {}
        }
      },
      "componentStyles_": {},
      "getAllBlockStyles": function () {},
      "getBlockStyle": function () {},
      "getCategoryStyle": function () {},
      "getComponentStyle": function () {},
      "setAllBlockStyles": function () {},
      "setBlockStyle": function () {},
      "setCategoryStyle": function () {},
      "setComponentStyle": function () {}
    },
    "Dark": {
      "blockStyles_": {
        "colour_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "hat_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {},
          "hat": {}
        },
        "list_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "logic_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "loop_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "math_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "procedure_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "text_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "variable_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "variable_dynamic_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        }
      },
      "categoryStyles_": {
        "colour_category": {
          "colour": {}
        },
        "list_category": {
          "colour": {}
        },
        "logic_category": {
          "colour": {}
        },
        "loop_category": {
          "colour": {}
        },
        "math_category": {
          "colour": {}
        },
        "procedure_category": {
          "colour": {}
        },
        "text_category": {
          "colour": {}
        },
        "variable_category": {
          "colour": {}
        },
        "variable_dynamic_category": {
          "colour": {}
        }
      },
      "componentStyles_": {
        "flyout": {},
        "flyoutOpacity": {},
        "flyoutText": {},
        "scrollbar": {},
        "scrollbarOpacity": {},
        "toolbox": {},
        "toolboxText": {},
        "workspace": {}
      },
      "getAllBlockStyles": function () {},
      "getBlockStyle": function () {},
      "getCategoryStyle": function () {},
      "getComponentStyle": function () {},
      "setAllBlockStyles": function () {},
      "setBlockStyle": function () {},
      "setCategoryStyle": function () {},
      "setComponentStyle": function () {}
    },
    "HighContrast": {
      "blockStyles_": {
        "colour_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "hat_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {},
          "hat": {}
        },
        "list_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "logic_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "loop_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "math_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "procedure_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "text_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "variable_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "variable_dynamic_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        }
      },
      "categoryStyles_": {
        "colour_category": {
          "colour": {}
        },
        "list_category": {
          "colour": {}
        },
        "logic_category": {
          "colour": {}
        },
        "loop_category": {
          "colour": {}
        },
        "math_category": {
          "colour": {}
        },
        "procedure_category": {
          "colour": {}
        },
        "text_category": {
          "colour": {}
        },
        "variable_category": {
          "colour": {}
        },
        "variable_dynamic_category": {
          "colour": {}
        }
      },
      "componentStyles_": {},
      "getAllBlockStyles": function () {},
      "getBlockStyle": function () {},
      "getCategoryStyle": function () {},
      "getComponentStyle": function () {},
      "setAllBlockStyles": function () {},
      "setBlockStyle": function () {},
      "setCategoryStyle": function () {},
      "setComponentStyle": function () {}
    },
    "Modern": {
      "blockStyles_": {
        "colour_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "hat_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {},
          "hat": {}
        },
        "list_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "logic_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "loop_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "math_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "procedure_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "text_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "variable_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        },
        "variable_dynamic_blocks": {
          "colourPrimary": {},
          "colourSecondary": {},
          "colourTertiary": {}
        }
      },
      "categoryStyles_": {
        "colour_category": {
          "colour": {}
        },
        "list_category": {
          "colour": {}
        },
        "logic_category": {
          "colour": {}
        },
        "loop_category": {
          "colour": {}
        },
        "math_category": {
          "colour": {}
        },
        "procedure_category": {
          "colour": {}
        },
        "text_category": {
          "colour": {}
        },
        "variable_category": {
          "colour": {}
        },
        "variable_dynamic_category": {
          "colour": {}
        }
      },
      "componentStyles_": {},
      "getAllBlockStyles": function () {},
      "getBlockStyle": function () {},
      "getCategoryStyle": function () {},
      "getComponentStyle": function () {},
      "setAllBlockStyles": function () {},
      "setBlockStyle": function () {},
      "setCategoryStyle": function () {},
      "setComponentStyle": function () {}
    }
  },
  "Toolbox": {
    "TreeSeparator": {
      "superClass_": {
        "add": function () {},
        "addChild": function () {},
        "addChildAt": function () {},
        "computeDepth_": function () {},
        "constructor": {
          "superClass_": {
            "add": function () {},
            "addChild": function () {},
            "addChildAt": function () {},
            "computeDepth_": function () {},
            "constructor": {
              "allNodes": {},
              "superClass_": {
                "addChild": function () {},
                "addChildAt": function () {},
                "createDom": function () {},
                "dispose": function () {},
                "disposeInternal": function () {},
                "enterDocument": function () {},
                "exitDocument": function () {},
                "forEachChild": function () {},
                "getChild": function () {},
                "getChildAt": function () {},
                "getChildCount": function () {},
                "getContentElement": function () {},
                "getElement": function () {},
                "getId": function () {},
                "getParent": function () {},
                "hasChildren": function () {},
                "indexOfChild": function () {},
                "isInDocument": function () {},
                "isRightToLeft": function () {},
                "render": function () {},
                "renderBefore": function () {},
                "render_": function () {},
                "setElementInternal": function () {},
                "setParent": function () {},
                "setRightToLeft": function () {}
              }
            },
            "contains": function () {},
            "createDom": function () {},
            "dispose": function () {},
            "disposeInternal": function () {},
            "doNodeCollapsed": function () {},
            "doNodeExpanded": function () {},
            "enterDocument": function () {},
            "exitDocument": function () {},
            "forEachChild": function () {},
            "getBackgroundPosition": function () {},
            "getCalculatedIconClass": function () {},
            "getChild": function () {},
            "getChildAt": function () {},
            "getChildCount": function () {},
            "getChildren": function () {},
            "getChildrenElement": function () {},
            "getConfig": function () {},
            "getContentElement": function () {},
            "getDepth": function () {},
            "getElement": function () {},
            "getExpanded": function () {},
            "getExpandedIconClass": function () {},
            "getFirstChild": function () {},
            "getIconClass": function () {},
            "getIconDom": function () {},
            "getIconElement": function () {},
            "getId": function () {},
            "getLabelDom": function () {},
            "getLabelElement": function () {},
            "getLastChild": function () {},
            "getLastShownDescendant": function () {},
            "getNextShownNode": function () {},
            "getNextSibling": function () {},
            "getParent": function () {},
            "getPixelIndent_": function () {},
            "getPreviousShownNode": function () {},
            "getPreviousSibling": function () {},
            "getRowClassName": function () {},
            "getRowDom": function () {},
            "getRowElement": function () {},
            "getText": function () {},
            "getTree": function () {},
            "hasChildren": function () {},
            "indexOfChild": function () {},
            "initAccessibility": function () {},
            "isInDocument": function () {},
            "isLastSibling": function () {},
            "isRightToLeft": function () {},
            "isSelected": function () {},
            "isUserCollapsible": function () {},
            "onClick_": function () {},
            "onKeyDown": function () {},
            "onMouseDown": function () {},
            "render": function () {},
            "renderBefore": function () {},
            "render_": function () {},
            "select": function () {},
            "selectChild": function () {},
            "selectFirst": function () {},
            "selectNext": function () {},
            "selectParent": function () {},
            "selectPrevious": function () {},
            "setDepth_": function () {},
            "setElementInternal": function () {},
            "setExpanded": function () {},
            "setExpandedInternal": function () {},
            "setParent": function () {},
            "setRightToLeft": function () {},
            "setSelectedInternal": function () {},
            "setText": function () {},
            "setTreeInternal": function () {},
            "toDom": function () {},
            "toggle": function () {},
            "updateExpandIcon": function () {},
            "updateIcon_": function () {},
            "updateRow": function () {}
          }
        },
        "contains": function () {},
        "createDom": function () {},
        "dispose": function () {},
        "disposeInternal": function () {},
        "doNodeCollapsed": function () {},
        "doNodeExpanded": function () {},
        "enterDocument": function () {},
        "exitDocument": function () {},
        "forEachChild": function () {},
        "getBackgroundPosition": function () {},
        "getCalculatedIconClass": function () {},
        "getChild": function () {},
        "getChildAt": function () {},
        "getChildCount": function () {},
        "getChildren": function () {},
        "getChildrenElement": function () {},
        "getConfig": function () {},
        "getContentElement": function () {},
        "getDepth": function () {},
        "getElement": function () {},
        "getExpanded": function () {},
        "getExpandedIconClass": function () {},
        "getFirstChild": function () {},
        "getIconClass": function () {},
        "getIconDom": function () {},
        "getIconElement": function () {},
        "getId": function () {},
        "getLabelDom": function () {},
        "getLabelElement": function () {},
        "getLastChild": function () {},
        "getLastShownDescendant": function () {},
        "getNextShownNode": function () {},
        "getNextSibling": function () {},
        "getParent": function () {},
        "getPixelIndent_": function () {},
        "getPreviousShownNode": function () {},
        "getPreviousSibling": function () {},
        "getRowClassName": function () {},
        "getRowDom": function () {},
        "getRowElement": function () {},
        "getText": function () {},
        "getTree": function () {},
        "hasChildren": function () {},
        "indexOfChild": function () {},
        "initAccessibility": function () {},
        "isInDocument": function () {},
        "isLastSibling": function () {},
        "isRightToLeft": function () {},
        "isSelected": function () {},
        "isUserCollapsible": function () {},
        "onClick_": function () {},
        "onKeyDown": function () {},
        "onMouseDown": function () {},
        "onSizeChanged": function () {},
        "render": function () {},
        "renderBefore": function () {},
        "render_": function () {},
        "resizeToolbox_": function () {},
        "select": function () {},
        "selectChild": function () {},
        "selectFirst": function () {},
        "selectNext": function () {},
        "selectParent": function () {},
        "selectPrevious": function () {},
        "setDepth_": function () {},
        "setElementInternal": function () {},
        "setExpanded": function () {},
        "setExpandedInternal": function () {},
        "setParent": function () {},
        "setRightToLeft": function () {},
        "setSelectedInternal": function () {},
        "setText": function () {},
        "setTreeInternal": function () {},
        "toDom": function () {},
        "toggle": function () {},
        "updateExpandIcon": function () {},
        "updateIcon_": function () {},
        "updateRow": function () {}
      }
    }
  },
  "Tooltip": {
    "DIV": {},
    "HOVER_MS": {},
    "LIMIT": {},
    "MARGINS": {},
    "OFFSET_X": {},
    "OFFSET_Y": {},
    "RADIUS_OK": {},
    "bindMouseEvents": function () {},
    "block": function () {},
    "blocked_": {},
    "createDom": function () {},
    "element_": {},
    "hide": function () {},
    "lastX_": {},
    "lastY_": {},
    "mouseOutPid_": {},
    "onMouseMove_": function () {},
    "onMouseOut_": function () {},
    "onMouseOver_": function () {},
    "poisonedElement_": {},
    "showPid_": {},
    "show_": function () {},
    "unblock": function () {},
    "visible": {}
  },
  "Touch": {
    "TOUCH_ENABLED": {},
    "TOUCH_MAP": {},
    "checkTouchIdentifier": function () {},
    "clearTouchIdentifier": function () {},
    "getTouchIdentifierFromEvent": function () {},
    "isMouseOrTouchEvent": function () {},
    "isTouchEvent": function () {},
    "setClientFromTouch": function () {},
    "shouldHandleEvent": function () {},
    "splitEventByTouches": function () {},
    "touchIdentifier_": {}
  },
  "TouchGesture": {
    "ZOOM_IN_MULTIPLIER": {},
    "ZOOM_OUT_MULTIPLIER": {},
    "superClass_": {
      "bindMouseEvents": function () {},
      "bringBlockToFront_": function () {},
      "cancel": function () {},
      "dispose": function () {},
      "doBlockClick_": function () {},
      "doBubbleClick_": function () {},
      "doFieldClick_": function () {},
      "doStart": function () {},
      "doWorkspaceClick_": function () {},
      "getInsertionMarkers": function () {},
      "handleBlockStart": function () {},
      "handleBubbleStart": function () {},
      "handleFlyoutStart": function () {},
      "handleMove": function () {},
      "handleRightClick": function () {},
      "handleUp": function () {},
      "handleWsStart": function () {},
      "hasStarted": function () {},
      "isBlockClick_": function () {},
      "isBubbleClick_": function () {},
      "isDragging": function () {},
      "isFieldClick_": function () {},
      "isWorkspaceClick_": function () {},
      "setStartBlock": function () {},
      "setStartBubble": function () {},
      "setStartField": function () {},
      "setStartFlyout_": function () {},
      "setStartWorkspace_": function () {},
      "setTargetBlock_": function () {},
      "startDraggingBlock_": function () {},
      "startDraggingBubble_": function () {},
      "updateDragDelta_": function () {},
      "updateFromEvent_": function () {},
      "updateIsDraggingBlock_": function () {},
      "updateIsDraggingBubble_": function () {},
      "updateIsDraggingFromFlyout_": function () {},
      "updateIsDraggingWorkspace_": function () {},
      "updateIsDragging_": function () {}
    }
  },
  "Trashcan": function () {},
  "VARIABLE_CATEGORY_NAME": {},
  "VARIABLE_DYNAMIC_CATEGORY_NAME": {},
  "VERSION": {},
  "VariableMap": function () {},
  "VariableModel": {
    "compareByName": function () {}
  },
  "Variables": {
    "ALL_DEVELOPER_VARS_WARNINGS_BY_BLOCK_TYPE_": {},
    "NAME_TYPE": {},
    "allDeveloperVariables": function () {},
    "allUsedVarModels": function () {},
    "allUsedVariables": function () {},
    "createVariable": function () {},
    "createVariableButtonHandler": function () {},
    "createVariable_": function () {},
    "flyoutCategory": function () {},
    "flyoutCategoryBlocks": function () {},
    "generateUniqueName": function () {},
    "generateVariableFieldDom": function () {},
    "getAddedVariables": function () {},
    "getOrCreateVariablePackage": function () {},
    "getVariable": function () {},
    "nameUsedWithAnyType_": function () {},
    "nameUsedWithOtherType_": function () {},
    "promptName": function () {},
    "renameVariable": function () {}
  },
  "VariablesDynamic": {
    "flyoutCategory": function () {},
    "flyoutCategoryBlocks": function () {},
    "onCreateVariableButtonClick_Colour": function () {},
    "onCreateVariableButtonClick_Number": function () {},
    "onCreateVariableButtonClick_String": function () {}
  },
  "VerticalFlyout": {
    "superClass_": {
      "CORNER_RADIUS": {},
      "GAP_X": {},
      "GAP_Y": {},
      "MARGIN": {},
      "SCROLLBAR_PADDING": {},
      "addBlockListeners_": function () {},
      "autoClose": {},
      "blockMouseDown_": function () {},
      "clearOldBlocks_": function () {},
      "containerVisible_": {},
      "createBlock": function () {},
      "createDom": function () {},
      "createRect_": function () {},
      "dispose": function () {},
      "dragAngleRange_": {},
      "filterForCapacity_": function () {},
      "getHeight": function () {},
      "getWidth": function () {},
      "getWorkspace": function () {},
      "height_": {},
      "hide": function () {},
      "init": function () {},
      "initFlyoutButton_": function () {},
      "isBlockCreatable_": function () {},
      "isScrollable": function () {},
      "isVisible": function () {},
      "isVisible_": {},
      "moveRectToBlock_": function () {},
      "onMouseDown_": function () {},
      "placeNewBlock_": function () {},
      "positionAt_": function () {},
      "reflow": function () {},
      "setContainerVisible": function () {},
      "setVisible": function () {},
      "show": function () {},
      "updateDisplay_": function () {},
      "width_": {}
    }
  },
  "Warning": {
    "superClass_": {
      "SIZE": {},
      "bubble_": {},
      "collapseHidden": {},
      "computeIconLocation": function () {},
      "createIcon": function () {},
      "dispose": function () {},
      "getCorrectedSize": function () {},
      "getIconLocation": function () {},
      "iconClick_": function () {},
      "iconXY_": {},
      "isVisible": function () {},
      "setIconLocation": function () {},
      "updateColour": function () {},
      "updateEditable": function () {}
    },
    "textToDom_": function () {}
  },
  "WidgetDiv": {
    "DIV": {},
    "calculateX_": function () {},
    "calculateY_": function () {},
    "createDom": function () {},
    "dispose_": {},
    "hide": function () {},
    "hideIfOwner": function () {},
    "isVisible": function () {},
    "owner_": {},
    "positionInternal_": function () {},
    "positionWithAnchor": function () {},
    "show": function () {}
  },
  "Workspace": {
    "SCAN_ANGLE": {},
    "WorkspaceDB_": {},
    "getAll": function () {},
    "getById": function () {}
  },
  "WorkspaceAudio": function () {},
  "WorkspaceDragSurfaceSvg": function () {},
  "WorkspaceDragger": function () {},
  "WorkspaceSvg": {
    "getContentDimensionsBounded_": function () {},
    "getContentDimensionsExact_": function () {},
    "getContentDimensions_": function () {},
    "getDimensionsPx_": function () {},
    "getTopLevelWorkspaceMetrics_": function () {},
    "setTopLevelWorkspaceMetrics_": function () {},
    "superClass_": {
      "MAX_UNDO": {},
      "addChangeListener": function () {},
      "addTopBlock": function () {},
      "addTopComment": function () {},
      "addTypedBlock": function () {},
      "allInputsFilled": function () {},
      "clear": function () {},
      "clearUndo": function () {},
      "connectionDBList": {},
      "createPotentialVariableMap": function () {},
      "createVariable": function () {},
      "deleteVariableById": function () {},
      "deleteVariableInternal_": function () {},
      "dispose": function () {},
      "fireChangeListener": function () {},
      "getAllBlocks": function () {},
      "getAllVariables": function () {},
      "getBlockById": function () {},
      "getBlocksByType": function () {},
      "getCommentById": function () {},
      "getCursor": function () {},
      "getMarker": function () {},
      "getPotentialVariableMap": function () {},
      "getTheme": function () {},
      "getThemeManager": function () {},
      "getTopBlocks": function () {},
      "getTopComments": function () {},
      "getVariable": function () {},
      "getVariableById": function () {},
      "getVariableMap": function () {},
      "getVariableTypes": function () {},
      "getVariableUsesById": function () {},
      "getVariablesOfType": function () {},
      "getWidth": function () {},
      "hasBlockLimits": function () {},
      "isCapacityAvailable": function () {},
      "isClearing": {},
      "newBlock": function () {},
      "refreshTheme": function () {},
      "remainingCapacity": function () {},
      "remainingCapacityOfType": function () {},
      "removeChangeListener": function () {},
      "removeTopBlock": function () {},
      "removeTopComment": function () {},
      "removeTypedBlock": function () {},
      "renameVariableById": function () {},
      "rendered": {},
      "setCursor": function () {},
      "setMarker": function () {},
      "setTheme": function () {},
      "sortObjects_": function () {},
      "undo": function () {},
      "updateBlockStyles_": function () {},
      "variableIndexOf": function () {}
    }
  },
  "Xml": {
    "allFieldsToDom_": function () {},
    "appendDomToWorkspace": function () {},
    "blockToDom": function () {},
    "blockToDomWithXY": function () {},
    "clearWorkspaceAndLoadFromXml": function () {},
    "cloneShadow_": function () {},
    "deleteNext": function () {},
    "domToBlock": function () {},
    "domToBlockHeadless_": function () {},
    "domToField_": function () {},
    "domToPrettyText": function () {},
    "domToText": function () {},
    "domToVariables": function () {},
    "domToWorkspace": function () {},
    "fieldToDom_": function () {},
    "textToDom": function () {},
    "variablesToDom": function () {},
    "workspaceToDom": function () {}
  },
  "ZoomControls": function () {},
  "alert": function () {},
  "bindEventWithChecks_": function () {},
  "bindEvent_": function () {},
  "blockAnimations": {
    "connectionUiEffect": function () {},
    "connectionUiStep_": function () {},
    "disconnectGroup_": {},
    "disconnectPid_": {},
    "disconnectUiEffect": function () {},
    "disconnectUiStep_": function () {},
    "disconnectUiStop": function () {},
    "disposeUiEffect": function () {},
    "disposeUiStep_": function () {}
  },
  "blockRendering": {
    "BottomRow": {
      "superClass_": {
        "endsWithElemSpacer": function () {},
        "getFirstSpacer": function () {},
        "getLastInput": function () {},
        "getLastSpacer": function () {},
        "measure": function () {},
        "startsWithElemSpacer": function () {}
      }
    },
    "Connection": {
      "superClass_": {}
    },
    "ConstantProvider": function () {},
    "Drawer": function () {},
    "ExternalValueInput": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "constructor": {
              "superClass_": {}
            }
          }
        }
      }
    },
    "Field": {
      "superClass_": {}
    },
    "Hat": {
      "superClass_": {}
    },
    "IPathObject": function () {},
    "Icon": {
      "superClass_": {}
    },
    "InRowSpacer": {
      "superClass_": {}
    },
    "InlineInput": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "constructor": {
              "superClass_": {}
            }
          }
        }
      }
    },
    "InputConnection": {
      "superClass_": {
        "constructor": {
          "superClass_": {}
        }
      }
    },
    "InputRow": {
      "superClass_": {
        "endsWithElemSpacer": function () {},
        "getFirstSpacer": function () {},
        "getLastInput": function () {},
        "getLastSpacer": function () {},
        "measure": function () {},
        "startsWithElemSpacer": function () {}
      }
    },
    "JaggedEdge": {
      "superClass_": {}
    },
    "Measurable": function () {},
    "NextConnection": {
      "superClass_": {
        "constructor": {
          "superClass_": {}
        }
      }
    },
    "OutputConnection": {
      "superClass_": {
        "constructor": {
          "superClass_": {}
        }
      }
    },
    "PathObject": function () {},
    "PreviousConnection": {
      "superClass_": {
        "constructor": {
          "superClass_": {}
        }
      }
    },
    "RenderInfo": function () {},
    "Renderer": function () {},
    "RoundCorner": {
      "superClass_": {}
    },
    "Row": function () {},
    "SpacerRow": {
      "superClass_": {
        "endsWithElemSpacer": function () {},
        "getFirstSpacer": function () {},
        "getLastInput": function () {},
        "getLastSpacer": function () {},
        "measure": function () {},
        "startsWithElemSpacer": function () {}
      }
    },
    "SquareCorner": {
      "superClass_": {}
    },
    "StatementInput": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "constructor": {
              "superClass_": {}
            }
          }
        }
      }
    },
    "TopRow": {
      "superClass_": {
        "endsWithElemSpacer": function () {},
        "getFirstSpacer": function () {},
        "getLastInput": function () {},
        "getLastSpacer": function () {},
        "measure": function () {},
        "startsWithElemSpacer": function () {}
      }
    },
    "Types": {
      "BETWEEN_ROW_SPACER": {},
      "BOTTOM_ROW": {},
      "CONNECTION": {},
      "CORNER": {},
      "EXTERNAL_VALUE_INPUT": {},
      "FIELD": {},
      "HAT": {},
      "ICON": {},
      "INLINE_INPUT": {},
      "INPUT": {},
      "INPUT_ROW": {},
      "IN_ROW_SPACER": {},
      "JAGGED_EDGE": {},
      "LEFT_CORNER": {},
      "LEFT_ROUND_CORNER": {},
      "LEFT_SQUARE_CORNER": {},
      "NEXT_CONNECTION": {},
      "NONE": {},
      "OUTPUT_CONNECTION": {},
      "PREVIOUS_CONNECTION": {},
      "RIGHT_CORNER": {},
      "RIGHT_ROUND_CORNER": {},
      "RIGHT_SQUARE_CORNER": {},
      "ROW": {},
      "SPACER": {},
      "STATEMENT_INPUT": {},
      "TOP_ROW": {},
      "getType": function () {},
      "isBetweenRowSpacer": function () {},
      "isBottomRow": function () {},
      "isCorner": function () {},
      "isExternalInput": function () {},
      "isField": function () {},
      "isHat": function () {},
      "isIcon": function () {},
      "isInRowSpacer": function () {},
      "isInlineInput": function () {},
      "isInput": function () {},
      "isInputRow": function () {},
      "isJaggedEdge": function () {},
      "isLeftRoundedCorner": function () {},
      "isLeftSquareCorner": function () {},
      "isNextConnection": function () {},
      "isPreviousConnection": function () {},
      "isPreviousOrNextConnection": function () {},
      "isRightRoundedCorner": function () {},
      "isRightSquareCorner": function () {},
      "isRow": function () {},
      "isSpacer": function () {},
      "isStatementInput": function () {},
      "isTopOrBottomRow": function () {},
      "isTopRow": function () {},
      "nextTypeValue_": {}
    },
    "init": function () {},
    "register": function () {},
    "rendererMap_": {
      "geras": {
        "superClass_": {
          "getConstants": function () {},
          "init": function () {},
          "makeConstants_": function () {},
          "makeCursorDrawer": function () {},
          "makeDebugger_": function () {},
          "makeDrawer_": function () {},
          "makeHighlightConstants_": function () {},
          "makePathObject": function () {},
          "makeRenderInfo_": function () {},
          "render": function () {}
        }
      }
    },
    "startDebugger": function () {},
    "stopDebugger": function () {},
    "unregister": function () {},
    "useDebugger": {}
  },
  "cache3dSupported_": {},
  "checkBlockColourConstant_": function () {},
  "checkBlockColourConstants": function () {},
  "clipboardSource_": {},
  "clipboardTypeCounts_": {},
  "clipboardXml_": {},
  "confirm": function () {},
  "constants": {},
  "copy_": function () {},
  "createDom_": function () {},
  "createMainWorkspace_": function () {},
  "cursor": {},
  "defineBlocksWithJsonArray": function () {},
  "draggingConnections_": {},
  "duplicate_": function () {},
  "fieldRegistry": {
    "fromJson": function () {},
    "register": function () {},
    "typeMap_": {
      "field_angle": {
        "CLOCKWISE": {},
        "HALF": {},
        "OFFSET": {},
        "RADIUS": {},
        "ROUND": {},
        "WRAP": {},
        "fromJson": function () {},
        "superClass_": {
          "CURSOR": {},
          "EDITABLE": {},
          "SERIALIZABLE": {},
          "bindEvents_": function () {},
          "bindInputEvents_": function () {},
          "callValidator": function () {},
          "classValidator": function () {},
          "clickTarget_": {},
          "configure_": function () {},
          "constructor": {
            "BORDERRADIUS": {},
            "FONTSIZE": {},
            "fromJson": function () {},
            "nonnegativeIntegerValidator": function () {},
            "numberValidator": function () {},
            "superClass_": {
              "EDITABLE": {},
              "SERIALIZABLE": {},
              "bindEvents_": function () {},
              "callValidator": function () {},
              "classValidator": function () {},
              "clickTarget_": {},
              "configure_": function () {},
              "createBorderRect_": function () {},
              "createTextElement_": function () {},
              "dispose": function () {},
              "disposed": {},
              "doClassValidation_": function () {},
              "doValueInvalid_": function () {},
              "doValueUpdate_": function () {},
              "forceRerender": function () {},
              "fromXml": function () {},
              "getAbsoluteXY_": function () {},
              "getClickTarget_": function () {},
              "getDisplayText_": function () {},
              "getFlipRtl": function () {},
              "getParentInput": function () {},
              "getScaledBBox_": function () {},
              "getSize": function () {},
              "getSourceBlock": function () {},
              "getSvgRoot": function () {},
              "getText": function () {},
              "getValidator": function () {},
              "getValue": function () {},
              "init": function () {},
              "initModel": function () {},
              "initView": function () {},
              "isClickable": function () {},
              "isCurrentlyEditable": function () {},
              "isDirty_": {},
              "isSerializable": function () {},
              "isTabNavigable": function () {},
              "isVisible": function () {},
              "markDirty": function () {},
              "maxDisplayLength": {},
              "name": {},
              "onBlocklyAction": function () {},
              "onMouseDown_": function () {},
              "processValidation_": function () {},
              "referencesVariables": function () {},
              "render_": function () {},
              "setCursorSvg": function () {},
              "setMarkerSvg": function () {},
              "setSourceBlock": function () {},
              "setText": function () {},
              "setTooltip": function () {},
              "setValidator": function () {},
              "setValue": function () {},
              "setVisible": function () {},
              "sourceBlock_": {},
              "toXml": function () {},
              "updateColour": function () {},
              "updateEditable": function () {},
              "updateSize_": function () {},
              "updateWidth": function () {},
              "visible_": {}
            }
          },
          "createBorderRect_": function () {},
          "createTextElement_": function () {},
          "dispose": function () {},
          "disposed": {},
          "doClassValidation_": function () {},
          "doValueInvalid_": function () {},
          "doValueUpdate_": function () {},
          "forceRerender": function () {},
          "fromXml": function () {},
          "getAbsoluteXY_": function () {},
          "getClickTarget_": function () {},
          "getDisplayText_": function () {},
          "getEditorText_": function () {},
          "getFlipRtl": function () {},
          "getParentInput": function () {},
          "getScaledBBox_": function () {},
          "getSize": function () {},
          "getSourceBlock": function () {},
          "getSvgRoot": function () {},
          "getText": function () {},
          "getText_": function () {},
          "getValidator": function () {},
          "getValue": function () {},
          "getValueFromEditorText_": function () {},
          "init": function () {},
          "initModel": function () {},
          "initView": function () {},
          "isClickable": function () {},
          "isCurrentlyEditable": function () {},
          "isDirty_": {},
          "isSerializable": function () {},
          "isTabNavigable": function () {},
          "isVisible": function () {},
          "markDirty": function () {},
          "maxDisplayLength": {},
          "name": {},
          "onBlocklyAction": function () {},
          "onHtmlInputChange_": function () {},
          "onHtmlInputKeyDown_": function () {},
          "onMouseDown_": function () {},
          "processValidation_": function () {},
          "referencesVariables": function () {},
          "render_": function () {},
          "resizeEditor_": function () {},
          "setCursorSvg": function () {},
          "setEditorValue_": function () {},
          "setMarkerSvg": function () {},
          "setSourceBlock": function () {},
          "setSpellcheck": function () {},
          "setText": function () {},
          "setTooltip": function () {},
          "setValidator": function () {},
          "setValue": function () {},
          "setVisible": function () {},
          "showEditor_": function () {},
          "showInlineEditor_": function () {},
          "showPromptEditor_": function () {},
          "sourceBlock_": {},
          "toXml": function () {},
          "unbindInputEvents_": function () {},
          "updateColour": function () {},
          "updateEditable": function () {},
          "updateSize_": function () {},
          "updateWidth": function () {},
          "visible_": {},
          "widgetCreate_": function () {},
          "widgetDispose_": function () {}
        }
      },
      "field_checkbox": {
        "CHECK_CHAR": {},
        "CHECK_X_OFFSET": {},
        "CHECK_Y_OFFSET": {},
        "WIDTH": {},
        "fromJson": function () {},
        "superClass_": {
          "EDITABLE": {},
          "SERIALIZABLE": {},
          "bindEvents_": function () {},
          "callValidator": function () {},
          "classValidator": function () {},
          "clickTarget_": {},
          "configure_": function () {},
          "createBorderRect_": function () {},
          "createTextElement_": function () {},
          "dispose": function () {},
          "disposed": {},
          "doClassValidation_": function () {},
          "doValueInvalid_": function () {},
          "doValueUpdate_": function () {},
          "forceRerender": function () {},
          "fromXml": function () {},
          "getAbsoluteXY_": function () {},
          "getClickTarget_": function () {},
          "getDisplayText_": function () {},
          "getFlipRtl": function () {},
          "getParentInput": function () {},
          "getScaledBBox_": function () {},
          "getSize": function () {},
          "getSourceBlock": function () {},
          "getSvgRoot": function () {},
          "getText": function () {},
          "getValidator": function () {},
          "getValue": function () {},
          "init": function () {},
          "initModel": function () {},
          "initView": function () {},
          "isClickable": function () {},
          "isCurrentlyEditable": function () {},
          "isDirty_": {},
          "isSerializable": function () {},
          "isTabNavigable": function () {},
          "isVisible": function () {},
          "markDirty": function () {},
          "maxDisplayLength": {},
          "name": {},
          "onBlocklyAction": function () {},
          "onMouseDown_": function () {},
          "processValidation_": function () {},
          "referencesVariables": function () {},
          "render_": function () {},
          "setCursorSvg": function () {},
          "setMarkerSvg": function () {},
          "setSourceBlock": function () {},
          "setText": function () {},
          "setTooltip": function () {},
          "setValidator": function () {},
          "setValue": function () {},
          "setVisible": function () {},
          "sourceBlock_": {},
          "toXml": function () {},
          "updateColour": function () {},
          "updateEditable": function () {},
          "updateSize_": function () {},
          "updateWidth": function () {},
          "visible_": {}
        }
      },
      "field_colour": {
        "COLOURS": {},
        "COLUMNS": {},
        "DEFAULT_HEIGHT": {},
        "DEFAULT_WIDTH": {},
        "TITLES": {},
        "fromJson": function () {},
        "superClass_": {
          "EDITABLE": {},
          "SERIALIZABLE": {},
          "bindEvents_": function () {},
          "callValidator": function () {},
          "classValidator": function () {},
          "clickTarget_": {},
          "configure_": function () {},
          "createBorderRect_": function () {},
          "createTextElement_": function () {},
          "dispose": function () {},
          "disposed": {},
          "doClassValidation_": function () {},
          "doValueInvalid_": function () {},
          "doValueUpdate_": function () {},
          "forceRerender": function () {},
          "fromXml": function () {},
          "getAbsoluteXY_": function () {},
          "getClickTarget_": function () {},
          "getDisplayText_": function () {},
          "getFlipRtl": function () {},
          "getParentInput": function () {},
          "getScaledBBox_": function () {},
          "getSize": function () {},
          "getSourceBlock": function () {},
          "getSvgRoot": function () {},
          "getText": function () {},
          "getValidator": function () {},
          "getValue": function () {},
          "init": function () {},
          "initModel": function () {},
          "initView": function () {},
          "isClickable": function () {},
          "isCurrentlyEditable": function () {},
          "isDirty_": {},
          "isSerializable": function () {},
          "isTabNavigable": function () {},
          "isVisible": function () {},
          "markDirty": function () {},
          "maxDisplayLength": {},
          "name": {},
          "onBlocklyAction": function () {},
          "onMouseDown_": function () {},
          "processValidation_": function () {},
          "referencesVariables": function () {},
          "render_": function () {},
          "setCursorSvg": function () {},
          "setMarkerSvg": function () {},
          "setSourceBlock": function () {},
          "setText": function () {},
          "setTooltip": function () {},
          "setValidator": function () {},
          "setValue": function () {},
          "setVisible": function () {},
          "sourceBlock_": {},
          "toXml": function () {},
          "updateColour": function () {},
          "updateEditable": function () {},
          "updateSize_": function () {},
          "updateWidth": function () {},
          "visible_": {}
        }
      },
      "field_dropdown": {
        "ARROW_CHAR": {},
        "CHECKMARK_OVERHANG": {},
        "IMAGE_Y_OFFSET": {},
        "IMAGE_Y_PADDING": {},
        "MAX_MENU_HEIGHT_VH": {},
        "applyTrim_": function () {},
        "fromJson": function () {},
        "superClass_": {
          "EDITABLE": {},
          "SERIALIZABLE": {},
          "bindEvents_": function () {},
          "callValidator": function () {},
          "classValidator": function () {},
          "clickTarget_": {},
          "configure_": function () {},
          "createBorderRect_": function () {},
          "createTextElement_": function () {},
          "dispose": function () {},
          "disposed": {},
          "doClassValidation_": function () {},
          "doValueInvalid_": function () {},
          "doValueUpdate_": function () {},
          "forceRerender": function () {},
          "fromXml": function () {},
          "getAbsoluteXY_": function () {},
          "getClickTarget_": function () {},
          "getDisplayText_": function () {},
          "getFlipRtl": function () {},
          "getParentInput": function () {},
          "getScaledBBox_": function () {},
          "getSize": function () {},
          "getSourceBlock": function () {},
          "getSvgRoot": function () {},
          "getText": function () {},
          "getValidator": function () {},
          "getValue": function () {},
          "init": function () {},
          "initModel": function () {},
          "initView": function () {},
          "isClickable": function () {},
          "isCurrentlyEditable": function () {},
          "isDirty_": {},
          "isSerializable": function () {},
          "isTabNavigable": function () {},
          "isVisible": function () {},
          "markDirty": function () {},
          "maxDisplayLength": {},
          "name": {},
          "onBlocklyAction": function () {},
          "onMouseDown_": function () {},
          "processValidation_": function () {},
          "referencesVariables": function () {},
          "render_": function () {},
          "setCursorSvg": function () {},
          "setMarkerSvg": function () {},
          "setSourceBlock": function () {},
          "setText": function () {},
          "setTooltip": function () {},
          "setValidator": function () {},
          "setValue": function () {},
          "setVisible": function () {},
          "sourceBlock_": {},
          "toXml": function () {},
          "updateColour": function () {},
          "updateEditable": function () {},
          "updateSize_": function () {},
          "updateWidth": function () {},
          "visible_": {}
        },
        "validateOptions_": function () {}
      },
      "field_image": {
        "Y_PADDING": {},
        "fromJson": function () {},
        "superClass_": {
          "EDITABLE": {},
          "SERIALIZABLE": {},
          "bindEvents_": function () {},
          "callValidator": function () {},
          "classValidator": function () {},
          "clickTarget_": {},
          "configure_": function () {},
          "createBorderRect_": function () {},
          "createTextElement_": function () {},
          "dispose": function () {},
          "disposed": {},
          "doClassValidation_": function () {},
          "doValueInvalid_": function () {},
          "doValueUpdate_": function () {},
          "forceRerender": function () {},
          "fromXml": function () {},
          "getAbsoluteXY_": function () {},
          "getClickTarget_": function () {},
          "getDisplayText_": function () {},
          "getFlipRtl": function () {},
          "getParentInput": function () {},
          "getScaledBBox_": function () {},
          "getSize": function () {},
          "getSourceBlock": function () {},
          "getSvgRoot": function () {},
          "getText": function () {},
          "getValidator": function () {},
          "getValue": function () {},
          "init": function () {},
          "initModel": function () {},
          "initView": function () {},
          "isClickable": function () {},
          "isCurrentlyEditable": function () {},
          "isDirty_": {},
          "isSerializable": function () {},
          "isTabNavigable": function () {},
          "isVisible": function () {},
          "markDirty": function () {},
          "maxDisplayLength": {},
          "name": {},
          "onBlocklyAction": function () {},
          "onMouseDown_": function () {},
          "processValidation_": function () {},
          "referencesVariables": function () {},
          "render_": function () {},
          "setCursorSvg": function () {},
          "setMarkerSvg": function () {},
          "setSourceBlock": function () {},
          "setText": function () {},
          "setTooltip": function () {},
          "setValidator": function () {},
          "setValue": function () {},
          "setVisible": function () {},
          "sourceBlock_": {},
          "toXml": function () {},
          "updateColour": function () {},
          "updateEditable": function () {},
          "updateSize_": function () {},
          "updateWidth": function () {},
          "visible_": {}
        }
      },
      "field_input": {
        "BORDERRADIUS": {},
        "FONTSIZE": {},
        "fromJson": function () {},
        "nonnegativeIntegerValidator": function () {},
        "numberValidator": function () {},
        "superClass_": {
          "EDITABLE": {},
          "SERIALIZABLE": {},
          "bindEvents_": function () {},
          "callValidator": function () {},
          "classValidator": function () {},
          "clickTarget_": {},
          "configure_": function () {},
          "createBorderRect_": function () {},
          "createTextElement_": function () {},
          "dispose": function () {},
          "disposed": {},
          "doClassValidation_": function () {},
          "doValueInvalid_": function () {},
          "doValueUpdate_": function () {},
          "forceRerender": function () {},
          "fromXml": function () {},
          "getAbsoluteXY_": function () {},
          "getClickTarget_": function () {},
          "getDisplayText_": function () {},
          "getFlipRtl": function () {},
          "getParentInput": function () {},
          "getScaledBBox_": function () {},
          "getSize": function () {},
          "getSourceBlock": function () {},
          "getSvgRoot": function () {},
          "getText": function () {},
          "getValidator": function () {},
          "getValue": function () {},
          "init": function () {},
          "initModel": function () {},
          "initView": function () {},
          "isClickable": function () {},
          "isCurrentlyEditable": function () {},
          "isDirty_": {},
          "isSerializable": function () {},
          "isTabNavigable": function () {},
          "isVisible": function () {},
          "markDirty": function () {},
          "maxDisplayLength": {},
          "name": {},
          "onBlocklyAction": function () {},
          "onMouseDown_": function () {},
          "processValidation_": function () {},
          "referencesVariables": function () {},
          "render_": function () {},
          "setCursorSvg": function () {},
          "setMarkerSvg": function () {},
          "setSourceBlock": function () {},
          "setText": function () {},
          "setTooltip": function () {},
          "setValidator": function () {},
          "setValue": function () {},
          "setVisible": function () {},
          "sourceBlock_": {},
          "toXml": function () {},
          "updateColour": function () {},
          "updateEditable": function () {},
          "updateSize_": function () {},
          "updateWidth": function () {},
          "visible_": {}
        }
      },
      "field_label": {
        "fromJson": function () {},
        "superClass_": {
          "EDITABLE": {},
          "SERIALIZABLE": {},
          "bindEvents_": function () {},
          "callValidator": function () {},
          "classValidator": function () {},
          "clickTarget_": {},
          "configure_": function () {},
          "createBorderRect_": function () {},
          "createTextElement_": function () {},
          "dispose": function () {},
          "disposed": {},
          "doClassValidation_": function () {},
          "doValueInvalid_": function () {},
          "doValueUpdate_": function () {},
          "forceRerender": function () {},
          "fromXml": function () {},
          "getAbsoluteXY_": function () {},
          "getClickTarget_": function () {},
          "getDisplayText_": function () {},
          "getFlipRtl": function () {},
          "getParentInput": function () {},
          "getScaledBBox_": function () {},
          "getSize": function () {},
          "getSourceBlock": function () {},
          "getSvgRoot": function () {},
          "getText": function () {},
          "getValidator": function () {},
          "getValue": function () {},
          "init": function () {},
          "initModel": function () {},
          "initView": function () {},
          "isClickable": function () {},
          "isCurrentlyEditable": function () {},
          "isDirty_": {},
          "isSerializable": function () {},
          "isTabNavigable": function () {},
          "isVisible": function () {},
          "markDirty": function () {},
          "maxDisplayLength": {},
          "name": {},
          "onBlocklyAction": function () {},
          "onMouseDown_": function () {},
          "processValidation_": function () {},
          "referencesVariables": function () {},
          "render_": function () {},
          "setCursorSvg": function () {},
          "setMarkerSvg": function () {},
          "setSourceBlock": function () {},
          "setText": function () {},
          "setTooltip": function () {},
          "setValidator": function () {},
          "setValue": function () {},
          "setVisible": function () {},
          "sourceBlock_": {},
          "toXml": function () {},
          "updateColour": function () {},
          "updateEditable": function () {},
          "updateSize_": function () {},
          "updateWidth": function () {},
          "visible_": {}
        }
      },
      "field_label_serializable": {
        "fromJson": function () {},
        "superClass_": {
          "EDITABLE": {},
          "SERIALIZABLE": {},
          "bindEvents_": function () {},
          "callValidator": function () {},
          "classValidator": function () {},
          "clickTarget_": {},
          "configure_": function () {},
          "constructor": {
            "fromJson": function () {},
            "superClass_": {
              "EDITABLE": {},
              "SERIALIZABLE": {},
              "bindEvents_": function () {},
              "callValidator": function () {},
              "classValidator": function () {},
              "clickTarget_": {},
              "configure_": function () {},
              "createBorderRect_": function () {},
              "createTextElement_": function () {},
              "dispose": function () {},
              "disposed": {},
              "doClassValidation_": function () {},
              "doValueInvalid_": function () {},
              "doValueUpdate_": function () {},
              "forceRerender": function () {},
              "fromXml": function () {},
              "getAbsoluteXY_": function () {},
              "getClickTarget_": function () {},
              "getDisplayText_": function () {},
              "getFlipRtl": function () {},
              "getParentInput": function () {},
              "getScaledBBox_": function () {},
              "getSize": function () {},
              "getSourceBlock": function () {},
              "getSvgRoot": function () {},
              "getText": function () {},
              "getValidator": function () {},
              "getValue": function () {},
              "init": function () {},
              "initModel": function () {},
              "initView": function () {},
              "isClickable": function () {},
              "isCurrentlyEditable": function () {},
              "isDirty_": {},
              "isSerializable": function () {},
              "isTabNavigable": function () {},
              "isVisible": function () {},
              "markDirty": function () {},
              "maxDisplayLength": {},
              "name": {},
              "onBlocklyAction": function () {},
              "onMouseDown_": function () {},
              "processValidation_": function () {},
              "referencesVariables": function () {},
              "render_": function () {},
              "setCursorSvg": function () {},
              "setMarkerSvg": function () {},
              "setSourceBlock": function () {},
              "setText": function () {},
              "setTooltip": function () {},
              "setValidator": function () {},
              "setValue": function () {},
              "setVisible": function () {},
              "sourceBlock_": {},
              "toXml": function () {},
              "updateColour": function () {},
              "updateEditable": function () {},
              "updateSize_": function () {},
              "updateWidth": function () {},
              "visible_": {}
            }
          },
          "createBorderRect_": function () {},
          "createTextElement_": function () {},
          "dispose": function () {},
          "disposed": {},
          "doClassValidation_": function () {},
          "doValueInvalid_": function () {},
          "doValueUpdate_": function () {},
          "forceRerender": function () {},
          "fromXml": function () {},
          "getAbsoluteXY_": function () {},
          "getClickTarget_": function () {},
          "getDisplayText_": function () {},
          "getFlipRtl": function () {},
          "getParentInput": function () {},
          "getScaledBBox_": function () {},
          "getSize": function () {},
          "getSourceBlock": function () {},
          "getSvgRoot": function () {},
          "getText": function () {},
          "getValidator": function () {},
          "getValue": function () {},
          "init": function () {},
          "initModel": function () {},
          "initView": function () {},
          "isClickable": function () {},
          "isCurrentlyEditable": function () {},
          "isDirty_": {},
          "isSerializable": function () {},
          "isTabNavigable": function () {},
          "isVisible": function () {},
          "markDirty": function () {},
          "maxDisplayLength": {},
          "name": {},
          "onBlocklyAction": function () {},
          "onMouseDown_": function () {},
          "processValidation_": function () {},
          "referencesVariables": function () {},
          "render_": function () {},
          "setClass": function () {},
          "setCursorSvg": function () {},
          "setMarkerSvg": function () {},
          "setSourceBlock": function () {},
          "setText": function () {},
          "setTooltip": function () {},
          "setValidator": function () {},
          "setValue": function () {},
          "setVisible": function () {},
          "sourceBlock_": {},
          "toXml": function () {},
          "updateColour": function () {},
          "updateEditable": function () {},
          "updateSize_": function () {},
          "updateWidth": function () {},
          "visible_": {}
        }
      },
      "field_multilinetext": {
        "LINE_HEIGHT": {},
        "fromJson": function () {},
        "superClass_": {
          "CURSOR": {},
          "EDITABLE": {},
          "SERIALIZABLE": {},
          "bindEvents_": function () {},
          "bindInputEvents_": function () {},
          "callValidator": function () {},
          "classValidator": function () {},
          "clickTarget_": {},
          "configure_": function () {},
          "constructor": {
            "BORDERRADIUS": {},
            "FONTSIZE": {},
            "fromJson": function () {},
            "nonnegativeIntegerValidator": function () {},
            "numberValidator": function () {},
            "superClass_": {
              "EDITABLE": {},
              "SERIALIZABLE": {},
              "bindEvents_": function () {},
              "callValidator": function () {},
              "classValidator": function () {},
              "clickTarget_": {},
              "configure_": function () {},
              "createBorderRect_": function () {},
              "createTextElement_": function () {},
              "dispose": function () {},
              "disposed": {},
              "doClassValidation_": function () {},
              "doValueInvalid_": function () {},
              "doValueUpdate_": function () {},
              "forceRerender": function () {},
              "fromXml": function () {},
              "getAbsoluteXY_": function () {},
              "getClickTarget_": function () {},
              "getDisplayText_": function () {},
              "getFlipRtl": function () {},
              "getParentInput": function () {},
              "getScaledBBox_": function () {},
              "getSize": function () {},
              "getSourceBlock": function () {},
              "getSvgRoot": function () {},
              "getText": function () {},
              "getValidator": function () {},
              "getValue": function () {},
              "init": function () {},
              "initModel": function () {},
              "initView": function () {},
              "isClickable": function () {},
              "isCurrentlyEditable": function () {},
              "isDirty_": {},
              "isSerializable": function () {},
              "isTabNavigable": function () {},
              "isVisible": function () {},
              "markDirty": function () {},
              "maxDisplayLength": {},
              "name": {},
              "onBlocklyAction": function () {},
              "onMouseDown_": function () {},
              "processValidation_": function () {},
              "referencesVariables": function () {},
              "render_": function () {},
              "setCursorSvg": function () {},
              "setMarkerSvg": function () {},
              "setSourceBlock": function () {},
              "setText": function () {},
              "setTooltip": function () {},
              "setValidator": function () {},
              "setValue": function () {},
              "setVisible": function () {},
              "sourceBlock_": {},
              "toXml": function () {},
              "updateColour": function () {},
              "updateEditable": function () {},
              "updateSize_": function () {},
              "updateWidth": function () {},
              "visible_": {}
            }
          },
          "createBorderRect_": function () {},
          "createTextElement_": function () {},
          "dispose": function () {},
          "disposed": {},
          "doClassValidation_": function () {},
          "doValueInvalid_": function () {},
          "doValueUpdate_": function () {},
          "forceRerender": function () {},
          "fromXml": function () {},
          "getAbsoluteXY_": function () {},
          "getClickTarget_": function () {},
          "getDisplayText_": function () {},
          "getEditorText_": function () {},
          "getFlipRtl": function () {},
          "getParentInput": function () {},
          "getScaledBBox_": function () {},
          "getSize": function () {},
          "getSourceBlock": function () {},
          "getSvgRoot": function () {},
          "getText": function () {},
          "getText_": function () {},
          "getValidator": function () {},
          "getValue": function () {},
          "getValueFromEditorText_": function () {},
          "init": function () {},
          "initModel": function () {},
          "initView": function () {},
          "isClickable": function () {},
          "isCurrentlyEditable": function () {},
          "isDirty_": {},
          "isSerializable": function () {},
          "isTabNavigable": function () {},
          "isVisible": function () {},
          "markDirty": function () {},
          "maxDisplayLength": {},
          "name": {},
          "onBlocklyAction": function () {},
          "onHtmlInputChange_": function () {},
          "onHtmlInputKeyDown_": function () {},
          "onMouseDown_": function () {},
          "processValidation_": function () {},
          "referencesVariables": function () {},
          "render_": function () {},
          "resizeEditor_": function () {},
          "setCursorSvg": function () {},
          "setEditorValue_": function () {},
          "setMarkerSvg": function () {},
          "setSourceBlock": function () {},
          "setSpellcheck": function () {},
          "setText": function () {},
          "setTooltip": function () {},
          "setValidator": function () {},
          "setValue": function () {},
          "setVisible": function () {},
          "showEditor_": function () {},
          "showInlineEditor_": function () {},
          "showPromptEditor_": function () {},
          "sourceBlock_": {},
          "toXml": function () {},
          "unbindInputEvents_": function () {},
          "updateColour": function () {},
          "updateEditable": function () {},
          "updateSize_": function () {},
          "updateWidth": function () {},
          "visible_": {},
          "widgetCreate_": function () {},
          "widgetDispose_": function () {}
        }
      },
      "field_number": {
        "fromJson": function () {},
        "superClass_": {
          "CURSOR": {},
          "EDITABLE": {},
          "SERIALIZABLE": {},
          "bindEvents_": function () {},
          "bindInputEvents_": function () {},
          "callValidator": function () {},
          "classValidator": function () {},
          "clickTarget_": {},
          "configure_": function () {},
          "constructor": {
            "BORDERRADIUS": {},
            "FONTSIZE": {},
            "fromJson": function () {},
            "nonnegativeIntegerValidator": function () {},
            "numberValidator": function () {},
            "superClass_": {
              "EDITABLE": {},
              "SERIALIZABLE": {},
              "bindEvents_": function () {},
              "callValidator": function () {},
              "classValidator": function () {},
              "clickTarget_": {},
              "configure_": function () {},
              "createBorderRect_": function () {},
              "createTextElement_": function () {},
              "dispose": function () {},
              "disposed": {},
              "doClassValidation_": function () {},
              "doValueInvalid_": function () {},
              "doValueUpdate_": function () {},
              "forceRerender": function () {},
              "fromXml": function () {},
              "getAbsoluteXY_": function () {},
              "getClickTarget_": function () {},
              "getDisplayText_": function () {},
              "getFlipRtl": function () {},
              "getParentInput": function () {},
              "getScaledBBox_": function () {},
              "getSize": function () {},
              "getSourceBlock": function () {},
              "getSvgRoot": function () {},
              "getText": function () {},
              "getValidator": function () {},
              "getValue": function () {},
              "init": function () {},
              "initModel": function () {},
              "initView": function () {},
              "isClickable": function () {},
              "isCurrentlyEditable": function () {},
              "isDirty_": {},
              "isSerializable": function () {},
              "isTabNavigable": function () {},
              "isVisible": function () {},
              "markDirty": function () {},
              "maxDisplayLength": {},
              "name": {},
              "onBlocklyAction": function () {},
              "onMouseDown_": function () {},
              "processValidation_": function () {},
              "referencesVariables": function () {},
              "render_": function () {},
              "setCursorSvg": function () {},
              "setMarkerSvg": function () {},
              "setSourceBlock": function () {},
              "setText": function () {},
              "setTooltip": function () {},
              "setValidator": function () {},
              "setValue": function () {},
              "setVisible": function () {},
              "sourceBlock_": {},
              "toXml": function () {},
              "updateColour": function () {},
              "updateEditable": function () {},
              "updateSize_": function () {},
              "updateWidth": function () {},
              "visible_": {}
            }
          },
          "createBorderRect_": function () {},
          "createTextElement_": function () {},
          "dispose": function () {},
          "disposed": {},
          "doClassValidation_": function () {},
          "doValueInvalid_": function () {},
          "doValueUpdate_": function () {},
          "forceRerender": function () {},
          "fromXml": function () {},
          "getAbsoluteXY_": function () {},
          "getClickTarget_": function () {},
          "getDisplayText_": function () {},
          "getEditorText_": function () {},
          "getFlipRtl": function () {},
          "getParentInput": function () {},
          "getScaledBBox_": function () {},
          "getSize": function () {},
          "getSourceBlock": function () {},
          "getSvgRoot": function () {},
          "getText": function () {},
          "getText_": function () {},
          "getValidator": function () {},
          "getValue": function () {},
          "getValueFromEditorText_": function () {},
          "init": function () {},
          "initModel": function () {},
          "initView": function () {},
          "isClickable": function () {},
          "isCurrentlyEditable": function () {},
          "isDirty_": {},
          "isSerializable": function () {},
          "isTabNavigable": function () {},
          "isVisible": function () {},
          "markDirty": function () {},
          "maxDisplayLength": {},
          "name": {},
          "onBlocklyAction": function () {},
          "onHtmlInputChange_": function () {},
          "onHtmlInputKeyDown_": function () {},
          "onMouseDown_": function () {},
          "processValidation_": function () {},
          "referencesVariables": function () {},
          "render_": function () {},
          "resizeEditor_": function () {},
          "setCursorSvg": function () {},
          "setEditorValue_": function () {},
          "setMarkerSvg": function () {},
          "setSourceBlock": function () {},
          "setSpellcheck": function () {},
          "setText": function () {},
          "setTooltip": function () {},
          "setValidator": function () {},
          "setValue": function () {},
          "setVisible": function () {},
          "showEditor_": function () {},
          "showInlineEditor_": function () {},
          "showPromptEditor_": function () {},
          "sourceBlock_": {},
          "toXml": function () {},
          "unbindInputEvents_": function () {},
          "updateColour": function () {},
          "updateEditable": function () {},
          "updateSize_": function () {},
          "updateWidth": function () {},
          "visible_": {},
          "widgetCreate_": function () {},
          "widgetDispose_": function () {}
        }
      },
      "field_variable": {
        "dropdownCreate": function () {},
        "fromJson": function () {},
        "superClass_": {
          "CURSOR": {},
          "EDITABLE": {},
          "SERIALIZABLE": {},
          "bindEvents_": function () {},
          "callValidator": function () {},
          "classValidator": function () {},
          "clickTarget_": {},
          "configure_": function () {},
          "constructor": {
            "ARROW_CHAR": {},
            "CHECKMARK_OVERHANG": {},
            "IMAGE_Y_OFFSET": {},
            "IMAGE_Y_PADDING": {},
            "MAX_MENU_HEIGHT_VH": {},
            "applyTrim_": function () {},
            "fromJson": function () {},
            "superClass_": {
              "EDITABLE": {},
              "SERIALIZABLE": {},
              "bindEvents_": function () {},
              "callValidator": function () {},
              "classValidator": function () {},
              "clickTarget_": {},
              "configure_": function () {},
              "createBorderRect_": function () {},
              "createTextElement_": function () {},
              "dispose": function () {},
              "disposed": {},
              "doClassValidation_": function () {},
              "doValueInvalid_": function () {},
              "doValueUpdate_": function () {},
              "forceRerender": function () {},
              "fromXml": function () {},
              "getAbsoluteXY_": function () {},
              "getClickTarget_": function () {},
              "getDisplayText_": function () {},
              "getFlipRtl": function () {},
              "getParentInput": function () {},
              "getScaledBBox_": function () {},
              "getSize": function () {},
              "getSourceBlock": function () {},
              "getSvgRoot": function () {},
              "getText": function () {},
              "getValidator": function () {},
              "getValue": function () {},
              "init": function () {},
              "initModel": function () {},
              "initView": function () {},
              "isClickable": function () {},
              "isCurrentlyEditable": function () {},
              "isDirty_": {},
              "isSerializable": function () {},
              "isTabNavigable": function () {},
              "isVisible": function () {},
              "markDirty": function () {},
              "maxDisplayLength": {},
              "name": {},
              "onBlocklyAction": function () {},
              "onMouseDown_": function () {},
              "processValidation_": function () {},
              "referencesVariables": function () {},
              "render_": function () {},
              "setCursorSvg": function () {},
              "setMarkerSvg": function () {},
              "setSourceBlock": function () {},
              "setText": function () {},
              "setTooltip": function () {},
              "setValidator": function () {},
              "setValue": function () {},
              "setVisible": function () {},
              "sourceBlock_": {},
              "toXml": function () {},
              "updateColour": function () {},
              "updateEditable": function () {},
              "updateSize_": function () {},
              "updateWidth": function () {},
              "visible_": {}
            },
            "validateOptions_": function () {}
          },
          "createBorderRect_": function () {},
          "createTextElement_": function () {},
          "dispose": function () {},
          "disposed": {},
          "doClassValidation_": function () {},
          "doValueInvalid_": function () {},
          "doValueUpdate_": function () {},
          "dropdownCreate_": function () {},
          "dropdownDispose_": function () {},
          "forceRerender": function () {},
          "fromXml": function () {},
          "getAbsoluteXY_": function () {},
          "getClickTarget_": function () {},
          "getDisplayText_": function () {},
          "getFlipRtl": function () {},
          "getOptions": function () {},
          "getParentInput": function () {},
          "getScaledBBox_": function () {},
          "getSize": function () {},
          "getSourceBlock": function () {},
          "getSvgRoot": function () {},
          "getText": function () {},
          "getText_": function () {},
          "getValidator": function () {},
          "getValue": function () {},
          "handleMenuActionEvent_": function () {},
          "init": function () {},
          "initModel": function () {},
          "initView": function () {},
          "isClickable": function () {},
          "isCurrentlyEditable": function () {},
          "isDirty_": {},
          "isOptionListDynamic": function () {},
          "isSerializable": function () {},
          "isTabNavigable": function () {},
          "isVisible": function () {},
          "markDirty": function () {},
          "maxDisplayLength": {},
          "name": {},
          "onBlocklyAction": function () {},
          "onItemSelected": function () {},
          "onMouseDown_": function () {},
          "processValidation_": function () {},
          "referencesVariables": function () {},
          "renderSelectedImage_": function () {},
          "renderSelectedText_": function () {},
          "render_": function () {},
          "setCursorSvg": function () {},
          "setMarkerSvg": function () {},
          "setSourceBlock": function () {},
          "setText": function () {},
          "setTooltip": function () {},
          "setValidator": function () {},
          "setValue": function () {},
          "setVisible": function () {},
          "showEditor_": function () {},
          "sourceBlock_": {},
          "toXml": function () {},
          "trimOptions_": function () {},
          "updateColour": function () {},
          "updateEditable": function () {},
          "updateSize_": function () {},
          "updateWidth": function () {},
          "visible_": {}
        }
      }
    },
    "unregister": function () {}
  },
  "geras": {
    "ConstantProvider": {
      "superClass_": {
        "init": function () {},
        "makeInsideCorners": function () {},
        "makeJaggedTeeth": function () {},
        "makeNotch": function () {},
        "makeOutsideCorners": function () {},
        "makePuzzleTab": function () {},
        "makeStartHat": function () {},
        "shapeFor": function () {}
      }
    },
    "Drawer": {
      "superClass_": {
        "draw": function () {},
        "drawBottom_": function () {},
        "drawInlineInput_": function () {},
        "drawInternals_": function () {},
        "drawJaggedEdge_": function () {},
        "drawLeft_": function () {},
        "drawOutline_": function () {},
        "drawRightSideRow_": function () {},
        "drawStatementInput_": function () {},
        "drawTop_": function () {},
        "drawValueInput_": function () {},
        "hideHiddenIcons_": function () {},
        "layoutField_": function () {},
        "positionExternalValueConnection_": function () {},
        "positionInlineInputConnection_": function () {},
        "positionNextConnection_": function () {},
        "positionOutputConnection_": function () {},
        "positionPreviousConnection_": function () {},
        "positionStatementInputConnection_": function () {},
        "recordSizeOnBlock_": function () {}
      }
    },
    "HighlightConstantProvider": function () {},
    "Highlighter": function () {},
    "InlineInput": {
      "superClass_": {
        "constructor": {
          "superClass_": {
            "constructor": {
              "superClass_": {
                "constructor": {
                  "superClass_": {
                    "closure_uid_118192521": {}
                  }
                }
              }
            }
          }
        }
      }
    },
    "PathObject": function () {},
    "RenderInfo": {
      "superClass_": {
        "addAlignmentPadding_": function () {},
        "addElemSpacing_": function () {},
        "addInput_": function () {},
        "addRowSpacing_": function () {},
        "alignRowElements_": function () {},
        "alignStatementRow_": function () {},
        "computeBounds_": function () {},
        "createRows_": function () {},
        "finalize_": function () {},
        "getElemCenterline_": function () {},
        "getInRowSpacing_": function () {},
        "getRenderer": function () {},
        "getSpacerRowHeight_": function () {},
        "getSpacerRowWidth_": function () {},
        "makeSpacerRow_": function () {},
        "measure": function () {},
        "populateBottomRow_": function () {},
        "populateTopRow_": function () {},
        "recordElemPositions_": function () {},
        "shouldStartNewRow_": function () {}
      }
    },
    "Renderer": {
      "superClass_": {
        "getConstants": function () {},
        "init": function () {},
        "makeConstants_": function () {},
        "makeCursorDrawer": function () {},
        "makeDebugger_": function () {},
        "makeDrawer_": function () {},
        "makeHighlightConstants_": function () {},
        "makePathObject": function () {},
        "makeRenderInfo_": function () {},
        "render": function () {}
      }
    },
    "StatementInput": {
      "superClass_": {
        "closure_uid_118192521": {},
        "constructor": {
          "superClass_": {
            "closure_uid_118192521": {},
            "constructor": {
              "closure_uid_118192521": {},
              "superClass_": {
                "closure_uid_118192521": {},
                "constructor": {
                  "closure_uid_118192521": {},
                  "superClass_": {
                    "closure_uid_118192521": {}
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "getMainWorkspace": function () {},
  "hideChaff": function () {},
  "hueToHex": function () {},
  "init_": function () {},
  "inject": {
    "bindDocumentEvents_": function () {},
    "loadSounds_": function () {}
  },
  "isNumber": function () {},
  "jsonInitFactory_": function () {},
  "keyboardAccessibilityMode": {},
  "longPid_": {},
  "longStart_": function () {},
  "longStop_": function () {},
  "mainWorkspace": {},
  "navigation": {
    "ACTION_DISCONNECT": {
      "desc": {},
      "name": {}
    },
    "ACTION_EXIT": {
      "desc": {},
      "name": {}
    },
    "ACTION_IN": {
      "desc": {},
      "name": {}
    },
    "ACTION_INSERT": {
      "desc": {},
      "name": {}
    },
    "ACTION_MARK": {
      "desc": {},
      "name": {}
    },
    "ACTION_NEXT": {
      "desc": {},
      "name": {}
    },
    "ACTION_OUT": {
      "desc": {},
      "name": {}
    },
    "ACTION_PREVIOUS": {
      "desc": {},
      "name": {}
    },
    "ACTION_TOGGLE_KEYBOARD_NAV": {
      "desc": {},
      "name": {}
    },
    "ACTION_TOOLBOX": {
      "desc": {},
      "name": {}
    },
    "READONLY_ACTION_LIST": {},
    "STATE_FLYOUT": {},
    "STATE_TOOLBOX": {},
    "STATE_WS": {},
    "actionNames": {
      "DISCONNECT": {},
      "EXIT": {},
      "IN": {},
      "INSERT": {},
      "MARK": {},
      "NEXT": {},
      "OUT": {},
      "PREVIOUS": {},
      "TOGGLE_KEYBOARD_NAV": {},
      "TOOLBOX": {}
    },
    "connect_": function () {},
    "currentState_": {},
    "disableKeyboardAccessibility": function () {},
    "disconnectBlocks_": function () {},
    "disconnectChild_": function () {},
    "enableKeyboardAccessibility": function () {},
    "error_": function () {},
    "flyoutOnAction_": function () {},
    "focusFlyout_": function () {},
    "focusToolbox_": function () {},
    "focusWorkspace_": function () {},
    "getFlyoutCursor_": function () {},
    "getInferiorConnection_": function () {},
    "getSourceBlock_": function () {},
    "getSuperiorConnection_": function () {},
    "getTopNode": function () {},
    "handleActions_": function () {},
    "handleEnterForWS_": function () {},
    "insertBlock": function () {},
    "insertFromFlyout": function () {},
    "log_": function () {},
    "loggingCallback": {},
    "markAtCursor_": function () {},
    "modifyWarn_": function () {},
    "modify_": function () {},
    "moveAndConnect_": function () {},
    "moveBlockToWorkspace_": function () {},
    "moveCursorOnBlockDelete": function () {},
    "moveCursorOnBlockMutation": function () {},
    "onBlocklyAction": function () {},
    "onKeyPress": function () {},
    "removeMark_": function () {},
    "resetFlyout_": function () {},
    "setState": function () {},
    "toolboxOnAction_": function () {},
    "warn_": function () {},
    "workspaceOnAction_": function () {}
  },
  "onContextMenu_": function () {},
  "onKeyDown_": function () {},
  "prompt": function () {},
  "requires": {},
  "resizeSvgContents": function () {},
  "selected": {},
  "svgResize": function () {},
  "svgSize": function () {},
  "tree": {
    "BaseNode": {
      "allNodes": {},
      "superClass_": {
        "addChild": function () {},
        "addChildAt": function () {},
        "createDom": function () {},
        "dispose": function () {},
        "disposeInternal": function () {},
        "enterDocument": function () {},
        "exitDocument": function () {},
        "forEachChild": function () {},
        "getChild": function () {},
        "getChildAt": function () {},
        "getChildCount": function () {},
        "getContentElement": function () {},
        "getElement": function () {},
        "getId": function () {},
        "getParent": function () {},
        "hasChildren": function () {},
        "indexOfChild": function () {},
        "isInDocument": function () {},
        "isRightToLeft": function () {},
        "render": function () {},
        "renderBefore": function () {},
        "render_": function () {},
        "setElementInternal": function () {},
        "setParent": function () {},
        "setRightToLeft": function () {}
      }
    },
    "TreeControl": {
      "superClass_": {
        "add": function () {},
        "addChild": function () {},
        "addChildAt": function () {},
        "computeDepth_": function () {},
        "constructor": {
          "allNodes": {},
          "superClass_": {
            "addChild": function () {},
            "addChildAt": function () {},
            "createDom": function () {},
            "dispose": function () {},
            "disposeInternal": function () {},
            "enterDocument": function () {},
            "exitDocument": function () {},
            "forEachChild": function () {},
            "getChild": function () {},
            "getChildAt": function () {},
            "getChildCount": function () {},
            "getContentElement": function () {},
            "getElement": function () {},
            "getId": function () {},
            "getParent": function () {},
            "hasChildren": function () {},
            "indexOfChild": function () {},
            "isInDocument": function () {},
            "isRightToLeft": function () {},
            "render": function () {},
            "renderBefore": function () {},
            "render_": function () {},
            "setElementInternal": function () {},
            "setParent": function () {},
            "setRightToLeft": function () {}
          }
        },
        "contains": function () {},
        "createDom": function () {},
        "dispose": function () {},
        "disposeInternal": function () {},
        "doNodeCollapsed": function () {},
        "doNodeExpanded": function () {},
        "enterDocument": function () {},
        "exitDocument": function () {},
        "forEachChild": function () {},
        "getBackgroundPosition": function () {},
        "getCalculatedIconClass": function () {},
        "getChild": function () {},
        "getChildAt": function () {},
        "getChildCount": function () {},
        "getChildren": function () {},
        "getChildrenElement": function () {},
        "getConfig": function () {},
        "getContentElement": function () {},
        "getDepth": function () {},
        "getElement": function () {},
        "getExpanded": function () {},
        "getExpandedIconClass": function () {},
        "getFirstChild": function () {},
        "getIconClass": function () {},
        "getIconDom": function () {},
        "getIconElement": function () {},
        "getId": function () {},
        "getLabelDom": function () {},
        "getLabelElement": function () {},
        "getLastChild": function () {},
        "getLastShownDescendant": function () {},
        "getNextShownNode": function () {},
        "getNextSibling": function () {},
        "getParent": function () {},
        "getPixelIndent_": function () {},
        "getPreviousShownNode": function () {},
        "getPreviousSibling": function () {},
        "getRowClassName": function () {},
        "getRowDom": function () {},
        "getRowElement": function () {},
        "getText": function () {},
        "getTree": function () {},
        "hasChildren": function () {},
        "indexOfChild": function () {},
        "initAccessibility": function () {},
        "isInDocument": function () {},
        "isLastSibling": function () {},
        "isRightToLeft": function () {},
        "isSelected": function () {},
        "isUserCollapsible": function () {},
        "onClick_": function () {},
        "onKeyDown": function () {},
        "onMouseDown": function () {},
        "render": function () {},
        "renderBefore": function () {},
        "render_": function () {},
        "select": function () {},
        "selectChild": function () {},
        "selectFirst": function () {},
        "selectNext": function () {},
        "selectParent": function () {},
        "selectPrevious": function () {},
        "setDepth_": function () {},
        "setElementInternal": function () {},
        "setExpanded": function () {},
        "setExpandedInternal": function () {},
        "setParent": function () {},
        "setRightToLeft": function () {},
        "setSelectedInternal": function () {},
        "setText": function () {},
        "setTreeInternal": function () {},
        "toDom": function () {},
        "toggle": function () {},
        "updateExpandIcon": function () {},
        "updateIcon_": function () {},
        "updateRow": function () {}
      }
    },
    "TreeNode": {
      "superClass_": {
        "add": function () {},
        "addChild": function () {},
        "addChildAt": function () {},
        "computeDepth_": function () {},
        "constructor": {
          "allNodes": {},
          "superClass_": {
            "addChild": function () {},
            "addChildAt": function () {},
            "createDom": function () {},
            "dispose": function () {},
            "disposeInternal": function () {},
            "enterDocument": function () {},
            "exitDocument": function () {},
            "forEachChild": function () {},
            "getChild": function () {},
            "getChildAt": function () {},
            "getChildCount": function () {},
            "getContentElement": function () {},
            "getElement": function () {},
            "getId": function () {},
            "getParent": function () {},
            "hasChildren": function () {},
            "indexOfChild": function () {},
            "isInDocument": function () {},
            "isRightToLeft": function () {},
            "render": function () {},
            "renderBefore": function () {},
            "render_": function () {},
            "setElementInternal": function () {},
            "setParent": function () {},
            "setRightToLeft": function () {}
          }
        },
        "contains": function () {},
        "createDom": function () {},
        "dispose": function () {},
        "disposeInternal": function () {},
        "doNodeCollapsed": function () {},
        "doNodeExpanded": function () {},
        "enterDocument": function () {},
        "exitDocument": function () {},
        "forEachChild": function () {},
        "getBackgroundPosition": function () {},
        "getCalculatedIconClass": function () {},
        "getChild": function () {},
        "getChildAt": function () {},
        "getChildCount": function () {},
        "getChildren": function () {},
        "getChildrenElement": function () {},
        "getConfig": function () {},
        "getContentElement": function () {},
        "getDepth": function () {},
        "getElement": function () {},
        "getExpanded": function () {},
        "getExpandedIconClass": function () {},
        "getFirstChild": function () {},
        "getIconClass": function () {},
        "getIconDom": function () {},
        "getIconElement": function () {},
        "getId": function () {},
        "getLabelDom": function () {},
        "getLabelElement": function () {},
        "getLastChild": function () {},
        "getLastShownDescendant": function () {},
        "getNextShownNode": function () {},
        "getNextSibling": function () {},
        "getParent": function () {},
        "getPixelIndent_": function () {},
        "getPreviousShownNode": function () {},
        "getPreviousSibling": function () {},
        "getRowClassName": function () {},
        "getRowDom": function () {},
        "getRowElement": function () {},
        "getText": function () {},
        "getTree": function () {},
        "hasChildren": function () {},
        "indexOfChild": function () {},
        "initAccessibility": function () {},
        "isInDocument": function () {},
        "isLastSibling": function () {},
        "isRightToLeft": function () {},
        "isSelected": function () {},
        "isUserCollapsible": function () {},
        "onClick_": function () {},
        "onKeyDown": function () {},
        "onMouseDown": function () {},
        "render": function () {},
        "renderBefore": function () {},
        "render_": function () {},
        "select": function () {},
        "selectChild": function () {},
        "selectFirst": function () {},
        "selectNext": function () {},
        "selectParent": function () {},
        "selectPrevious": function () {},
        "setDepth_": function () {},
        "setElementInternal": function () {},
        "setExpanded": function () {},
        "setExpandedInternal": function () {},
        "setParent": function () {},
        "setRightToLeft": function () {},
        "setSelectedInternal": function () {},
        "setText": function () {},
        "setTreeInternal": function () {},
        "toDom": function () {},
        "toggle": function () {},
        "updateExpandIcon": function () {},
        "updateIcon_": function () {},
        "updateRow": function () {}
      }
    }
  },
  "unbindEvent_": function () {},
  "user": {
    "keyMap": {
      "createDefaultKeyMap": function () {},
      "createSerializedKey": function () {},
      "getActionByKeyCode": function () {},
      "getKeyByAction": function () {},
      "getKeyMap": function () {},
      "map_": {},
      "modifierKeys": {
        "ALT": {},
        "CONTROL": {},
        "META": {},
        "SHIFT": {}
      },
      "serializeKeyEvent": function () {},
      "setActionForKey": function () {},
      "setKeyMap": function () {}
    }
  },
  "utils": {
    "Coordinate": {
      "difference": function () {},
      "distance": function () {},
      "equals": function () {},
      "magnitude": function () {},
      "sum": function () {}
    },
    "IdGenerator": {
      "getNextUniqueId": function () {},
      "nextId_": {}
    },
    "KeyCodes": {
      "A": {},
      "ALT": {},
      "APOSTROPHE": {},
      "AT_SIGN": {},
      "B": {},
      "BACKSLASH": {},
      "BACKSPACE": {},
      "C": {},
      "CAPS_LOCK": {},
      "CLOSE_SQUARE_BRACKET": {},
      "COMMA": {},
      "CONTEXT_MENU": {},
      "CTRL": {},
      "D": {},
      "DASH": {},
      "DELETE": {},
      "DOWN": {},
      "E": {},
      "EIGHT": {},
      "END": {},
      "ENTER": {},
      "EQUALS": {},
      "ESC": {},
      "F": {},
      "F1": {},
      "F10": {},
      "F11": {},
      "F12": {},
      "F2": {},
      "F3": {},
      "F4": {},
      "F5": {},
      "F6": {},
      "F7": {},
      "F8": {},
      "F9": {},
      "FF_DASH": {},
      "FF_EQUALS": {},
      "FF_HASH": {},
      "FF_SEMICOLON": {},
      "FIRST_MEDIA_KEY": {},
      "FIVE": {},
      "FOUR": {},
      "G": {},
      "H": {},
      "HOME": {},
      "I": {},
      "INSERT": {},
      "J": {},
      "K": {},
      "L": {},
      "LAST_MEDIA_KEY": {},
      "LEFT": {},
      "M": {},
      "MAC_ENTER": {},
      "MAC_FF_META": {},
      "MAC_WK_CMD_LEFT": {},
      "MAC_WK_CMD_RIGHT": {},
      "META": {},
      "N": {},
      "NINE": {},
      "NUMLOCK": {},
      "NUM_CENTER": {},
      "NUM_DIVISION": {},
      "NUM_EIGHT": {},
      "NUM_FIVE": {},
      "NUM_FOUR": {},
      "NUM_MINUS": {},
      "NUM_MULTIPLY": {},
      "NUM_NINE": {},
      "NUM_ONE": {},
      "NUM_PERIOD": {},
      "NUM_PLUS": {},
      "NUM_SEVEN": {},
      "NUM_SIX": {},
      "NUM_THREE": {},
      "NUM_TWO": {},
      "NUM_ZERO": {},
      "O": {},
      "ONE": {},
      "OPEN_SQUARE_BRACKET": {},
      "P": {},
      "PAGE_DOWN": {},
      "PAGE_UP": {},
      "PAUSE": {},
      "PERIOD": {},
      "PHANTOM": {},
      "PLUS_SIGN": {},
      "PRINT_SCREEN": {},
      "Q": {},
      "QUESTION_MARK": {},
      "R": {},
      "RIGHT": {},
      "S": {},
      "SCROLL_LOCK": {},
      "SEMICOLON": {},
      "SEVEN": {},
      "SHIFT": {},
      "SINGLE_QUOTE": {},
      "SIX": {},
      "SLASH": {},
      "SPACE": {},
      "T": {},
      "TAB": {},
      "THREE": {},
      "TILDE": {},
      "TWO": {},
      "U": {},
      "UP": {},
      "V": {},
      "VK_NONAME": {},
      "W": {},
      "WIN_IME": {},
      "WIN_KEY": {},
      "WIN_KEY_FF_LINUX": {},
      "WIN_KEY_RIGHT": {},
      "X": {},
      "Y": {},
      "Z": {},
      "ZERO": {}
    },
    "Rect": function () {},
    "Size": {
      "equals": function () {}
    },
    "aria": {
      "ARIA_PREFIX_": {},
      "ROLE_ATTRIBUTE_": {},
      "Role": {
        "ALERT": {},
        "ALERTDIALOG": {},
        "APPLICATION": {},
        "ARTICLE": {},
        "BANNER": {},
        "BUTTON": {},
        "CHECKBOX": {},
        "COLUMNHEADER": {},
        "COMBOBOX": {},
        "COMPLEMENTARY": {},
        "CONTENTINFO": {},
        "DEFINITION": {},
        "DIALOG": {},
        "DIRECTORY": {},
        "DOCUMENT": {},
        "FORM": {},
        "GRID": {},
        "GRIDCELL": {},
        "GROUP": {},
        "HEADING": {},
        "IMG": {},
        "LINK": {},
        "LIST": {},
        "LISTBOX": {},
        "LISTITEM": {},
        "LOG": {},
        "MAIN": {},
        "MARQUEE": {},
        "MATH": {},
        "MENU": {},
        "MENUBAR": {},
        "MENUITEM": {},
        "MENUITEMCHECKBOX": {},
        "MENUITEMRADIO": {},
        "NAVIGATION": {},
        "NOTE": {},
        "OPTION": {},
        "PRESENTATION": {},
        "PROGRESSBAR": {},
        "RADIO": {},
        "RADIOGROUP": {},
        "REGION": {},
        "ROW": {},
        "ROWGROUP": {},
        "ROWHEADER": {},
        "SCROLLBAR": {},
        "SEARCH": {},
        "SEPARATOR": {},
        "SLIDER": {},
        "SPINBUTTON": {},
        "STATUS": {},
        "TAB": {},
        "TABLE": {},
        "TABLIST": {},
        "TABPANEL": {},
        "TEXTBOX": {},
        "TEXTINFO": {},
        "TIMER": {},
        "TOOLBAR": {},
        "TOOLTIP": {},
        "TREE": {},
        "TREEGRID": {},
        "TREEITEM": {}
      },
      "State": {
        "ACTIVEDESCENDANT": {},
        "ATOMIC": {},
        "AUTOCOMPLETE": {},
        "BUSY": {},
        "CHECKED": {},
        "COLINDEX": {},
        "CONTROLS": {},
        "DESCRIBEDBY": {},
        "DISABLED": {},
        "DROPEFFECT": {},
        "EXPANDED": {},
        "FLOWTO": {},
        "GRABBED": {},
        "HASPOPUP": {},
        "HIDDEN": {},
        "INVALID": {},
        "LABEL": {},
        "LABELLEDBY": {},
        "LEVEL": {},
        "LIVE": {},
        "MULTILINE": {},
        "MULTISELECTABLE": {},
        "ORIENTATION": {},
        "OWNS": {},
        "POSINSET": {},
        "PRESSED": {},
        "READONLY": {},
        "RELEVANT": {},
        "REQUIRED": {},
        "ROWINDEX": {},
        "SELECTED": {},
        "SETSIZE": {},
        "SORT": {},
        "VALUEMAX": {},
        "VALUEMIN": {},
        "VALUENOW": {},
        "VALUETEXT": {}
      },
      "getAriaAttributeName_": function () {},
      "getRole": function () {},
      "removeRole": function () {},
      "setRole": function () {},
      "setState": function () {}
    },
    "arrayRemove": function () {},
    "checkMessageReferences": function () {},
    "colour": {
      "blend": function () {},
      "hexToRgb": function () {},
      "hsvToHex": function () {},
      "names": {
        "aqua": {},
        "black": {},
        "blue": {},
        "fuchsia": {},
        "gray": {},
        "green": {},
        "lime": {},
        "maroon": {},
        "navy": {},
        "olive": {},
        "purple": {},
        "red": {},
        "silver": {},
        "teal": {},
        "white": {},
        "yellow": {}
      },
      "parse": function () {},
      "rgbToHex": function () {}
    },
    "dom": {
      "HTML_NS": {},
      "Node": {
        "COMMENT_NODE": {},
        "DOCUMENT_POSITION_CONTAINED_BY": {},
        "ELEMENT_NODE": {},
        "TEXT_NODE": {}
      },
      "SVG_NS": {},
      "XLINK_NS": {},
      "addClass": function () {},
      "cacheReference_": {},
      "cacheWidths_": {},
      "containsNode": function () {},
      "createSvgElement": function () {},
      "getTextWidth": function () {},
      "hasClass": function () {},
      "insertAfter": function () {},
      "removeClass": function () {},
      "removeNode": function () {},
      "setCssTransform": function () {},
      "startTextWidthCache": function () {},
      "stopTextWidthCache": function () {}
    },
    "genUid": {
      "soup_": {}
    },
    "getBlockTypeCounts": function () {},
    "getDocumentScroll": function () {},
    "getInjectionDivXY_": function () {},
    "getRelativeXY": {
      "XY_REGEX_": {},
      "XY_STYLE_REGEX_": {}
    },
    "getScrollDeltaPixels": function () {},
    "getViewportBBox": function () {},
    "global": {
      "ArrayBuffer": function () {},
      "Blockly": {
        "ALIGN_CENTRE": {},
        "ALIGN_LEFT": {},
        "ALIGN_RIGHT": {},
        "ASTNode": {
          "DEFAULT_OFFSET_Y": {},
          "createBlockNode": function () {},
          "createConnectionNode": function () {},
          "createFieldNode": function () {},
          "createInputNode": function () {},
          "createStackNode": function () {},
          "createWorkspaceNode": function () {},
          "isConnectionType_": function () {},
          "types": {
            "BLOCK": {},
            "FIELD": {},
            "INPUT": {},
            "NEXT": {},
            "OUTPUT": {},
            "PREVIOUS": {},
            "STACK": {},
            "WORKSPACE": {}
          }
        },
        "Action": function () {},
        "BUMP_DELAY": {},
        "BUMP_RANDOMNESS": {},
        "Block": function () {},
        "BlockDragSurfaceSvg": function () {},
        "BlockDragger": {
          "initIconData_": function () {}
        },
        "BlockSvg": {
          "COLLAPSED_WARNING_ID": {},
          "INLINE": {},
          "MIN_BLOCK_Y": {},
          "SEP_SPACE_Y": {},
          "START_HAT": {},
          "TAB_WIDTH": {},
          "superClass_": {
            "allInputsFilled": function () {},
            "appendDummyInput": function () {},
            "appendInput_": function () {},
            "appendStatementInput": function () {},
            "appendValueInput": function () {},
            "bumpNeighbours": function () {},
            "colourSecondary_": {},
            "colourTertiary_": {},
            "colour_": {},
            "data": {},
            "dispose": function () {},
            "disposed": {},
            "getChildren": function () {},
            "getColour": function () {},
            "getColourBorder": function () {},
            "getColourSecondary": function () {},
            "getColourShadow": function () {},
            "getColourTertiary": function () {},
            "getCommentText": function () {},
            "getConnections_": function () {},
            "getDescendants": function () {},
            "getField": function () {},
            "getFieldValue": function () {},
            "getFirstStatementConnection": function () {},
            "getHue": function () {},
            "getInheritedDisabled": function () {},
            "getInput": function () {},
            "getInputTargetBlock": function () {},
            "getInputWithBlock": function () {},
            "getInputsInline": function () {},
            "getMatchingConnection": function () {},
            "getNextBlock": function () {},
            "getOnlyValueConnection_": function () {},
            "getParent": function () {},
            "getPreviousBlock": function () {},
            "getRelativeToSurfaceXY": function () {},
            "getRootBlock": function () {},
            "getStyleName": function () {},
            "getSurroundParent": function () {},
            "getTopStackBlock": function () {},
            "getVarModels": function () {},
            "getVars": function () {},
            "hue_": {},
            "initModel": function () {},
            "interpolate_": function () {},
            "isCollapsed": function () {},
            "isDeletable": function () {},
            "isDuplicatable": function () {},
            "isEditable": function () {},
            "isEnabled": function () {},
            "isInsertionMarker": function () {},
            "isMovable": function () {},
            "isShadow": function () {},
            "jsonInit": function () {},
            "jsonInitColour_": function () {},
            "jsonInitStyle_": function () {},
            "lastConnectionInStack": function () {},
            "makeConnection_": function () {},
            "mixin": function () {},
            "moveBy": function () {},
            "moveInputBefore": function () {},
            "moveNumberedInputBefore": function () {},
            "removeInput": function () {},
            "renameVarById": function () {},
            "setCollapsed": function () {},
            "setColour": function () {},
            "setCommentText": function () {},
            "setDeletable": function () {},
            "setDisabled": function () {},
            "setEditable": function () {},
            "setEnabled": function () {},
            "setFieldValue": function () {},
            "setHelpUrl": function () {},
            "setInputsInline": function () {},
            "setInsertionMarker": function () {},
            "setMovable": function () {},
            "setMutator": function () {},
            "setNextStatement": function () {},
            "setOnChange": function () {},
            "setOutput": function () {},
            "setParent": function () {},
            "setPreviousStatement": function () {},
            "setShadow": function () {},
            "setStyle": function () {},
            "setTooltip": function () {},
            "setWarningText": function () {},
            "styleName_": {},
            "toDevString": function () {},
            "toString": function () {},
            "unplug": function () {},
            "unplugFromRow_": function () {},
            "unplugFromStack_": function () {},
            "updateVarName": function () {}
          }
        },
        "Blocks": {},
        "Bubble": {
          "ANCHOR_RADIUS": {},
          "ARROW_ANGLE": {},
          "ARROW_BEND": {},
          "ARROW_THICKNESS": {},
          "BORDER_WIDTH": {},
          "bubbleMouseUp_": function () {},
          "onMouseMoveWrapper_": {},
          "onMouseUpWrapper_": {},
          "unbindDragEvents_": function () {}
        },
        "BubbleDragger": function () {},
        "COLLAPSE_CHARS": {},
        "CONNECTING_SNAP_RADIUS": {},
        "CURRENT_CONNECTION_PREFERENCE": {},
        "Comment": {
          "superClass_": {
            "SIZE": {},
            "bubble_": {},
            "collapseHidden": {},
            "computeIconLocation": function () {},
            "createIcon": function () {},
            "dispose": function () {},
            "getCorrectedSize": function () {},
            "getIconLocation": function () {},
            "iconClick_": function () {},
            "iconXY_": {},
            "isVisible": function () {},
            "setIconLocation": function () {},
            "updateColour": function () {},
            "updateEditable": function () {}
          }
        },
        "Component": {
          "Error": {
            "ALREADY_RENDERED": {},
            "CHILD_INDEX_OUT_OF_BOUNDS": {},
            "PARENT_UNABLE_TO_BE_SET": {}
          },
          "defaultRightToLeft": {}
        },
        "Connection": {
          "CAN_CONNECT": {},
          "REASON_CHECKS_FAILED": {},
          "REASON_DIFFERENT_WORKSPACES": {},
          "REASON_SELF_CONNECTION": {},
          "REASON_SHADOW_PARENT": {},
          "REASON_TARGET_NULL": {},
          "REASON_WRONG_TYPE": {},
          "connectReciprocally_": function () {},
          "lastConnectionInRow_": function () {},
          "singleConnection_": function () {}
        },
        "ConnectionDB": {
          "init": function () {}
        },
        "ContextMenu": {
          "blockCommentOption": function () {},
          "blockDeleteOption": function () {},
          "blockDuplicateOption": function () {},
          "blockHelpOption": function () {},
          "callbackFactory": function () {},
          "commentDeleteOption": function () {},
          "commentDuplicateOption": function () {},
          "createWidget_": function () {},
          "currentBlock": {},
          "eventWrapper_": {},
          "hide": function () {},
          "populate_": function () {},
          "position_": function () {},
          "show": function () {},
          "workspaceCommentOption": function () {}
        },
        "Css": {
          "CONTENT": {},
          "inject": function () {},
          "injected_": {},
          "register": function () {},
          "setCursor": function () {}
        },
        "Cursor": function () {},
        "CursorSvg": {
          "BLOCK_PADDING": {},
          "CURSOR_CLASS": {},
          "CURSOR_COLOR": {},
          "CURSOR_HEIGHT": {},
          "CURSOR_WIDTH": {},
          "HEIGHT_MULTIPLIER": {},
          "MARKER_CLASS": {},
          "MARKER_COLOR": {},
          "NOTCH_START_LENGTH": {},
          "STACK_PADDING": {},
          "VERTICAL_PADDING": {}
        },
        "DELETE_AREA_NONE": {},
        "DELETE_AREA_TOOLBOX": {},
        "DELETE_AREA_TRASH": {},
        "DELETE_VARIABLE_ID": {},
        "DRAG_BEGIN": {},
        "DRAG_FREE": {},
        "DRAG_NONE": {},
        "DRAG_RADIUS": {},
        "DRAG_STACK": {},
        "DRAG_STICKY": {},
        "DUMMY_INPUT": {},
        "DropDownDiv": {
          "ANIMATION_TIME": {},
          "ARROW_HORIZONTAL_PADDING": {},
          "ARROW_SIZE": {},
          "BORDER_SIZE": {},
          "DEFAULT_DROPDOWN_BORDER_COLOR": {},
          "DEFAULT_DROPDOWN_COLOR": {},
          "DIV_": {},
          "PADDING_Y": {},
          "animateOutTimer_": {},
          "boundsElement_": {},
          "clearContent": function () {},
          "createDom": function () {},
          "getBoundsInfo_": function () {},
          "getContentDiv": function () {},
          "getPositionAboveMetrics": function () {},
          "getPositionBelowMetrics": function () {},
          "getPositionMetrics": function () {},
          "getPositionTopOfPageMetrics": function () {},
          "getPositionX": function () {},
          "hide": function () {},
          "hideIfOwner": function () {},
          "hideWithoutAnimation": function () {},
          "isVisible": function () {},
          "onHide_": {},
          "owner_": {},
          "positionInternal_": function () {},
          "positionToField_": {},
          "repositionForWindowResize": function () {},
          "setBoundsElement": function () {},
          "setCategory": function () {},
          "setColour": function () {},
          "show": function () {},
          "showPositionedByBlock": function () {},
          "showPositionedByField": function () {}
        },
        "Events": {
          "Abstract": function () {},
          "BLOCK_CHANGE": {},
          "BLOCK_CREATE": {},
          "BLOCK_DELETE": {},
          "BLOCK_MOVE": {},
          "BUMP_EVENTS": {},
          "BlockBase": {
            "superClass_": {
              "fromJson": function () {},
              "getEventWorkspace_": function () {},
              "isNull": function () {},
              "run": function () {},
              "toJson": function () {}
            }
          },
          "BlockChange": {
            "superClass_": {
              "constructor": {
                "superClass_": {
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "getEventWorkspace_": {
                    "closure_uid_118192521": {}
                  },
                  "isNull": {
                    "closure_uid_118192521": {}
                  },
                  "run": {
                    "closure_uid_118192521": {}
                  },
                  "toJson": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "fromJson": function () {},
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": function () {}
            }
          },
          "BlockCreate": {
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "getEventWorkspace_": {
                    "closure_uid_118192521": {}
                  },
                  "isNull": {
                    "closure_uid_118192521": {}
                  },
                  "run": {
                    "closure_uid_118192521": {}
                  },
                  "toJson": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "fromJson": function () {},
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": function () {}
            }
          },
          "BlockDelete": {
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "getEventWorkspace_": {
                    "closure_uid_118192521": {}
                  },
                  "isNull": {
                    "closure_uid_118192521": {}
                  },
                  "run": {
                    "closure_uid_118192521": {}
                  },
                  "toJson": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "fromJson": function () {},
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": function () {}
            }
          },
          "BlockMove": {
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "getEventWorkspace_": {
                    "closure_uid_118192521": {}
                  },
                  "isNull": {
                    "closure_uid_118192521": {}
                  },
                  "run": {
                    "closure_uid_118192521": {}
                  },
                  "toJson": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "fromJson": function () {},
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": function () {}
            }
          },
          "CHANGE": {},
          "COMMENT_CHANGE": {},
          "COMMENT_CREATE": {},
          "COMMENT_DELETE": {},
          "COMMENT_MOVE": {},
          "CREATE": {},
          "Change": {
            "closure_uid_118192521": {},
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "getEventWorkspace_": {
                    "closure_uid_118192521": {}
                  },
                  "isNull": {
                    "closure_uid_118192521": {}
                  },
                  "run": {
                    "closure_uid_118192521": {}
                  },
                  "toJson": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "fromJson": function () {},
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": function () {}
            }
          },
          "CommentBase": {
            "superClass_": {
              "closure_uid_118192521": {},
              "fromJson": {
                "closure_uid_118192521": {}
              },
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": {
                "closure_uid_118192521": {}
              }
            }
          },
          "CommentChange": {
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "superClass_": {
                  "closure_uid_118192521": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "getEventWorkspace_": {
                    "closure_uid_118192521": {}
                  },
                  "isNull": {
                    "closure_uid_118192521": {}
                  },
                  "run": {
                    "closure_uid_118192521": {}
                  },
                  "toJson": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "fromJson": function () {},
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": function () {}
            }
          },
          "CommentCreate": {
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "getEventWorkspace_": {
                    "closure_uid_118192521": {}
                  },
                  "isNull": {
                    "closure_uid_118192521": {}
                  },
                  "run": {
                    "closure_uid_118192521": {}
                  },
                  "toJson": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "fromJson": function () {},
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": function () {}
            }
          },
          "CommentCreateDeleteHelper": function () {},
          "CommentDelete": {
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "getEventWorkspace_": {
                    "closure_uid_118192521": {}
                  },
                  "isNull": {
                    "closure_uid_118192521": {}
                  },
                  "run": {
                    "closure_uid_118192521": {}
                  },
                  "toJson": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "fromJson": function () {},
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": function () {}
            }
          },
          "CommentMove": {
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "getEventWorkspace_": {
                    "closure_uid_118192521": {}
                  },
                  "isNull": {
                    "closure_uid_118192521": {}
                  },
                  "run": {
                    "closure_uid_118192521": {}
                  },
                  "toJson": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "fromJson": function () {},
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": function () {}
            }
          },
          "Create": {
            "closure_uid_118192521": {},
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "getEventWorkspace_": {
                    "closure_uid_118192521": {}
                  },
                  "isNull": {
                    "closure_uid_118192521": {}
                  },
                  "run": {
                    "closure_uid_118192521": {}
                  },
                  "toJson": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "fromJson": function () {},
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": function () {}
            }
          },
          "DELETE": {},
          "Delete": {
            "closure_uid_118192521": {},
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "getEventWorkspace_": {
                    "closure_uid_118192521": {}
                  },
                  "isNull": {
                    "closure_uid_118192521": {}
                  },
                  "run": {
                    "closure_uid_118192521": {}
                  },
                  "toJson": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "fromJson": function () {},
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": function () {}
            }
          },
          "FINISHED_LOADING": {},
          "FIRE_QUEUE_": {},
          "FinishedLoading": {
            "superClass_": {
              "closure_uid_118192521": {},
              "fromJson": {
                "closure_uid_118192521": {}
              },
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": {
                "closure_uid_118192521": {}
              }
            }
          },
          "MOVE": {},
          "Move": {
            "closure_uid_118192521": {},
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "getEventWorkspace_": {
                    "closure_uid_118192521": {}
                  },
                  "isNull": {
                    "closure_uid_118192521": {}
                  },
                  "run": {
                    "closure_uid_118192521": {}
                  },
                  "toJson": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "fromJson": function () {},
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": function () {}
            }
          },
          "UI": {},
          "Ui": {
            "superClass_": {
              "closure_uid_118192521": {},
              "fromJson": {
                "closure_uid_118192521": {}
              },
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": {
                "closure_uid_118192521": {}
              }
            }
          },
          "VAR_CREATE": {},
          "VAR_DELETE": {},
          "VAR_RENAME": {},
          "VarBase": {
            "superClass_": {
              "closure_uid_118192521": {},
              "fromJson": {
                "closure_uid_118192521": {}
              },
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": {
                "closure_uid_118192521": {}
              }
            }
          },
          "VarCreate": {
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "superClass_": {
                  "closure_uid_118192521": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "getEventWorkspace_": {
                    "closure_uid_118192521": {}
                  },
                  "isNull": {
                    "closure_uid_118192521": {}
                  },
                  "run": {
                    "closure_uid_118192521": {}
                  },
                  "toJson": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "fromJson": function () {},
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": function () {}
            }
          },
          "VarDelete": {
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "getEventWorkspace_": {
                    "closure_uid_118192521": {}
                  },
                  "isNull": {
                    "closure_uid_118192521": {}
                  },
                  "run": {
                    "closure_uid_118192521": {}
                  },
                  "toJson": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "fromJson": function () {},
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": function () {}
            }
          },
          "VarRename": {
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "getEventWorkspace_": {
                    "closure_uid_118192521": {}
                  },
                  "isNull": {
                    "closure_uid_118192521": {}
                  },
                  "run": {
                    "closure_uid_118192521": {}
                  },
                  "toJson": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "fromJson": function () {},
              "getEventWorkspace_": {
                "closure_uid_118192521": {}
              },
              "isNull": {
                "closure_uid_118192521": {}
              },
              "run": {
                "closure_uid_118192521": {}
              },
              "toJson": function () {}
            }
          },
          "clearPendingUndo": function () {},
          "disable": function () {},
          "disableOrphans": function () {},
          "disabled_": {},
          "enable": function () {},
          "filter": function () {},
          "fire": function () {},
          "fireNow_": function () {},
          "fromJson": function () {},
          "getDescendantIds": function () {},
          "getGroup": function () {},
          "group_": {},
          "isEnabled": function () {},
          "recordUndo": {},
          "setGroup": function () {}
        },
        "Extensions": {
          "ALL_": {
            "parent_tooltip_when_inline": function () {}
          },
          "apply": function () {},
          "buildTooltipForDropdown": function () {},
          "buildTooltipWithFieldText": function () {},
          "checkBlockHasMutatorProperties_": function () {},
          "checkDropdownOptionsInTable_": function () {},
          "checkHasFunction_": function () {},
          "checkMutatorDialog_": function () {},
          "checkNoMutatorProperties_": function () {},
          "extensionParentTooltip_": function () {},
          "getMutatorProperties_": function () {},
          "mutatorPropertiesMatch_": function () {},
          "register": function () {},
          "registerMixin": function () {},
          "registerMutator": function () {},
          "unregister": function () {}
        },
        "FLYOUT_DRAG_RADIUS": {},
        "Field": {
          "BORDER_RECT_DEFAULT_HEIGHT": {},
          "DEFAULT_TEXT_OFFSET": {},
          "NBSP": {},
          "TEXT_DEFAULT_HEIGHT": {},
          "X_PADDING": {},
          "Y_PADDING": {}
        },
        "FieldAngle": {
          "CLOCKWISE": {},
          "HALF": {},
          "OFFSET": {},
          "RADIUS": {},
          "ROUND": {},
          "WRAP": {},
          "fromJson": function () {},
          "superClass_": {
            "CURSOR": {},
            "EDITABLE": {},
            "SERIALIZABLE": {},
            "bindEvents_": function () {},
            "bindInputEvents_": function () {},
            "callValidator": function () {},
            "classValidator": function () {},
            "clickTarget_": {},
            "configure_": function () {},
            "constructor": {
              "BORDERRADIUS": {},
              "FONTSIZE": {},
              "fromJson": function () {},
              "nonnegativeIntegerValidator": function () {},
              "numberValidator": function () {},
              "superClass_": {
                "EDITABLE": {},
                "SERIALIZABLE": {},
                "bindEvents_": function () {},
                "callValidator": function () {},
                "classValidator": function () {},
                "clickTarget_": {},
                "configure_": function () {},
                "createBorderRect_": function () {},
                "createTextElement_": function () {},
                "dispose": function () {},
                "disposed": {},
                "doClassValidation_": function () {},
                "doValueInvalid_": function () {},
                "doValueUpdate_": function () {},
                "forceRerender": function () {},
                "fromXml": function () {},
                "getAbsoluteXY_": function () {},
                "getClickTarget_": function () {},
                "getDisplayText_": function () {},
                "getFlipRtl": function () {},
                "getParentInput": function () {},
                "getScaledBBox_": function () {},
                "getSize": function () {},
                "getSourceBlock": function () {},
                "getSvgRoot": function () {},
                "getText": function () {},
                "getValidator": function () {},
                "getValue": function () {},
                "init": function () {},
                "initModel": function () {},
                "initView": function () {},
                "isClickable": function () {},
                "isCurrentlyEditable": function () {},
                "isDirty_": {},
                "isSerializable": function () {},
                "isTabNavigable": function () {},
                "isVisible": function () {},
                "markDirty": function () {},
                "maxDisplayLength": {},
                "name": {},
                "onBlocklyAction": function () {},
                "onMouseDown_": function () {},
                "processValidation_": function () {},
                "referencesVariables": function () {},
                "render_": function () {},
                "setCursorSvg": function () {},
                "setMarkerSvg": function () {},
                "setSourceBlock": function () {},
                "setText": function () {},
                "setTooltip": function () {},
                "setValidator": function () {},
                "setValue": function () {},
                "setVisible": function () {},
                "sourceBlock_": {},
                "toXml": function () {},
                "updateColour": function () {},
                "updateEditable": function () {},
                "updateSize_": function () {},
                "updateWidth": function () {},
                "visible_": {}
              }
            },
            "createBorderRect_": function () {},
            "createTextElement_": function () {},
            "dispose": function () {},
            "disposed": {},
            "doClassValidation_": function () {},
            "doValueInvalid_": function () {},
            "doValueUpdate_": function () {},
            "forceRerender": function () {},
            "fromXml": function () {},
            "getAbsoluteXY_": function () {},
            "getClickTarget_": function () {},
            "getDisplayText_": function () {},
            "getEditorText_": function () {},
            "getFlipRtl": function () {},
            "getParentInput": function () {},
            "getScaledBBox_": function () {},
            "getSize": function () {},
            "getSourceBlock": function () {},
            "getSvgRoot": function () {},
            "getText": function () {},
            "getText_": function () {},
            "getValidator": function () {},
            "getValue": function () {},
            "getValueFromEditorText_": function () {},
            "init": function () {},
            "initModel": function () {},
            "initView": function () {},
            "isClickable": function () {},
            "isCurrentlyEditable": function () {},
            "isDirty_": {},
            "isSerializable": function () {},
            "isTabNavigable": function () {},
            "isVisible": function () {},
            "markDirty": function () {},
            "maxDisplayLength": {},
            "name": {},
            "onBlocklyAction": function () {},
            "onHtmlInputChange_": function () {},
            "onHtmlInputKeyDown_": function () {},
            "onMouseDown_": function () {},
            "processValidation_": function () {},
            "referencesVariables": function () {},
            "render_": function () {},
            "resizeEditor_": function () {},
            "setCursorSvg": function () {},
            "setEditorValue_": function () {},
            "setMarkerSvg": function () {},
            "setSourceBlock": function () {},
            "setSpellcheck": function () {},
            "setText": function () {},
            "setTooltip": function () {},
            "setValidator": function () {},
            "setValue": function () {},
            "setVisible": function () {},
            "showEditor_": function () {},
            "showInlineEditor_": function () {},
            "showPromptEditor_": function () {},
            "sourceBlock_": {},
            "toXml": function () {},
            "unbindInputEvents_": function () {},
            "updateColour": function () {},
            "updateEditable": function () {},
            "updateSize_": function () {},
            "updateWidth": function () {},
            "visible_": {},
            "widgetCreate_": function () {},
            "widgetDispose_": function () {}
          }
        },
        "FieldCheckbox": {
          "CHECK_CHAR": {},
          "CHECK_X_OFFSET": {},
          "CHECK_Y_OFFSET": {},
          "WIDTH": {},
          "fromJson": function () {},
          "superClass_": {
            "EDITABLE": {},
            "SERIALIZABLE": {},
            "bindEvents_": function () {},
            "callValidator": function () {},
            "classValidator": function () {},
            "clickTarget_": {},
            "configure_": function () {},
            "createBorderRect_": function () {},
            "createTextElement_": function () {},
            "dispose": function () {},
            "disposed": {},
            "doClassValidation_": function () {},
            "doValueInvalid_": function () {},
            "doValueUpdate_": function () {},
            "forceRerender": function () {},
            "fromXml": function () {},
            "getAbsoluteXY_": function () {},
            "getClickTarget_": function () {},
            "getDisplayText_": function () {},
            "getFlipRtl": function () {},
            "getParentInput": function () {},
            "getScaledBBox_": function () {},
            "getSize": function () {},
            "getSourceBlock": function () {},
            "getSvgRoot": function () {},
            "getText": function () {},
            "getValidator": function () {},
            "getValue": function () {},
            "init": function () {},
            "initModel": function () {},
            "initView": function () {},
            "isClickable": function () {},
            "isCurrentlyEditable": function () {},
            "isDirty_": {},
            "isSerializable": function () {},
            "isTabNavigable": function () {},
            "isVisible": function () {},
            "markDirty": function () {},
            "maxDisplayLength": {},
            "name": {},
            "onBlocklyAction": function () {},
            "onMouseDown_": function () {},
            "processValidation_": function () {},
            "referencesVariables": function () {},
            "render_": function () {},
            "setCursorSvg": function () {},
            "setMarkerSvg": function () {},
            "setSourceBlock": function () {},
            "setText": function () {},
            "setTooltip": function () {},
            "setValidator": function () {},
            "setValue": function () {},
            "setVisible": function () {},
            "sourceBlock_": {},
            "toXml": function () {},
            "updateColour": function () {},
            "updateEditable": function () {},
            "updateSize_": function () {},
            "updateWidth": function () {},
            "visible_": {}
          }
        },
        "FieldColour": {
          "COLOURS": {},
          "COLUMNS": {},
          "DEFAULT_HEIGHT": {},
          "DEFAULT_WIDTH": {},
          "TITLES": {},
          "fromJson": function () {},
          "superClass_": {
            "EDITABLE": {},
            "SERIALIZABLE": {},
            "bindEvents_": function () {},
            "callValidator": function () {},
            "classValidator": function () {},
            "clickTarget_": {},
            "configure_": function () {},
            "createBorderRect_": function () {},
            "createTextElement_": function () {},
            "dispose": function () {},
            "disposed": {},
            "doClassValidation_": function () {},
            "doValueInvalid_": function () {},
            "doValueUpdate_": function () {},
            "forceRerender": function () {},
            "fromXml": function () {},
            "getAbsoluteXY_": function () {},
            "getClickTarget_": function () {},
            "getDisplayText_": function () {},
            "getFlipRtl": function () {},
            "getParentInput": function () {},
            "getScaledBBox_": function () {},
            "getSize": function () {},
            "getSourceBlock": function () {},
            "getSvgRoot": function () {},
            "getText": function () {},
            "getValidator": function () {},
            "getValue": function () {},
            "init": function () {},
            "initModel": function () {},
            "initView": function () {},
            "isClickable": function () {},
            "isCurrentlyEditable": function () {},
            "isDirty_": {},
            "isSerializable": function () {},
            "isTabNavigable": function () {},
            "isVisible": function () {},
            "markDirty": function () {},
            "maxDisplayLength": {},
            "name": {},
            "onBlocklyAction": function () {},
            "onMouseDown_": function () {},
            "processValidation_": function () {},
            "referencesVariables": function () {},
            "render_": function () {},
            "setCursorSvg": function () {},
            "setMarkerSvg": function () {},
            "setSourceBlock": function () {},
            "setText": function () {},
            "setTooltip": function () {},
            "setValidator": function () {},
            "setValue": function () {},
            "setVisible": function () {},
            "sourceBlock_": {},
            "toXml": function () {},
            "updateColour": function () {},
            "updateEditable": function () {},
            "updateSize_": function () {},
            "updateWidth": function () {},
            "visible_": {}
          }
        },
        "FieldDropdown": {
          "ARROW_CHAR": {},
          "CHECKMARK_OVERHANG": {},
          "IMAGE_Y_OFFSET": {},
          "IMAGE_Y_PADDING": {},
          "MAX_MENU_HEIGHT_VH": {},
          "applyTrim_": function () {},
          "fromJson": function () {},
          "superClass_": {
            "EDITABLE": {},
            "SERIALIZABLE": {},
            "bindEvents_": function () {},
            "callValidator": function () {},
            "classValidator": function () {},
            "clickTarget_": {},
            "configure_": function () {},
            "createBorderRect_": function () {},
            "createTextElement_": function () {},
            "dispose": function () {},
            "disposed": {},
            "doClassValidation_": function () {},
            "doValueInvalid_": function () {},
            "doValueUpdate_": function () {},
            "forceRerender": function () {},
            "fromXml": function () {},
            "getAbsoluteXY_": function () {},
            "getClickTarget_": function () {},
            "getDisplayText_": function () {},
            "getFlipRtl": function () {},
            "getParentInput": function () {},
            "getScaledBBox_": function () {},
            "getSize": function () {},
            "getSourceBlock": function () {},
            "getSvgRoot": function () {},
            "getText": function () {},
            "getValidator": function () {},
            "getValue": function () {},
            "init": function () {},
            "initModel": function () {},
            "initView": function () {},
            "isClickable": function () {},
            "isCurrentlyEditable": function () {},
            "isDirty_": {},
            "isSerializable": function () {},
            "isTabNavigable": function () {},
            "isVisible": function () {},
            "markDirty": function () {},
            "maxDisplayLength": {},
            "name": {},
            "onBlocklyAction": function () {},
            "onMouseDown_": function () {},
            "processValidation_": function () {},
            "referencesVariables": function () {},
            "render_": function () {},
            "setCursorSvg": function () {},
            "setMarkerSvg": function () {},
            "setSourceBlock": function () {},
            "setText": function () {},
            "setTooltip": function () {},
            "setValidator": function () {},
            "setValue": function () {},
            "setVisible": function () {},
            "sourceBlock_": {},
            "toXml": function () {},
            "updateColour": function () {},
            "updateEditable": function () {},
            "updateSize_": function () {},
            "updateWidth": function () {},
            "visible_": {}
          },
          "validateOptions_": function () {}
        },
        "FieldImage": {
          "Y_PADDING": {},
          "fromJson": function () {},
          "superClass_": {
            "EDITABLE": {},
            "SERIALIZABLE": {},
            "bindEvents_": function () {},
            "callValidator": function () {},
            "classValidator": function () {},
            "clickTarget_": {},
            "configure_": function () {},
            "createBorderRect_": function () {},
            "createTextElement_": function () {},
            "dispose": function () {},
            "disposed": {},
            "doClassValidation_": function () {},
            "doValueInvalid_": function () {},
            "doValueUpdate_": function () {},
            "forceRerender": function () {},
            "fromXml": function () {},
            "getAbsoluteXY_": function () {},
            "getClickTarget_": function () {},
            "getDisplayText_": function () {},
            "getFlipRtl": function () {},
            "getParentInput": function () {},
            "getScaledBBox_": function () {},
            "getSize": function () {},
            "getSourceBlock": function () {},
            "getSvgRoot": function () {},
            "getText": function () {},
            "getValidator": function () {},
            "getValue": function () {},
            "init": function () {},
            "initModel": function () {},
            "initView": function () {},
            "isClickable": function () {},
            "isCurrentlyEditable": function () {},
            "isDirty_": {},
            "isSerializable": function () {},
            "isTabNavigable": function () {},
            "isVisible": function () {},
            "markDirty": function () {},
            "maxDisplayLength": {},
            "name": {},
            "onBlocklyAction": function () {},
            "onMouseDown_": function () {},
            "processValidation_": function () {},
            "referencesVariables": function () {},
            "render_": function () {},
            "setCursorSvg": function () {},
            "setMarkerSvg": function () {},
            "setSourceBlock": function () {},
            "setText": function () {},
            "setTooltip": function () {},
            "setValidator": function () {},
            "setValue": function () {},
            "setVisible": function () {},
            "sourceBlock_": {},
            "toXml": function () {},
            "updateColour": function () {},
            "updateEditable": function () {},
            "updateSize_": function () {},
            "updateWidth": function () {},
            "visible_": {}
          }
        },
        "FieldLabel": {
          "fromJson": function () {},
          "superClass_": {
            "EDITABLE": {},
            "SERIALIZABLE": {},
            "bindEvents_": function () {},
            "callValidator": function () {},
            "classValidator": function () {},
            "clickTarget_": {},
            "configure_": function () {},
            "createBorderRect_": function () {},
            "createTextElement_": function () {},
            "dispose": function () {},
            "disposed": {},
            "doClassValidation_": function () {},
            "doValueInvalid_": function () {},
            "doValueUpdate_": function () {},
            "forceRerender": function () {},
            "fromXml": function () {},
            "getAbsoluteXY_": function () {},
            "getClickTarget_": function () {},
            "getDisplayText_": function () {},
            "getFlipRtl": function () {},
            "getParentInput": function () {},
            "getScaledBBox_": function () {},
            "getSize": function () {},
            "getSourceBlock": function () {},
            "getSvgRoot": function () {},
            "getText": function () {},
            "getValidator": function () {},
            "getValue": function () {},
            "init": function () {},
            "initModel": function () {},
            "initView": function () {},
            "isClickable": function () {},
            "isCurrentlyEditable": function () {},
            "isDirty_": {},
            "isSerializable": function () {},
            "isTabNavigable": function () {},
            "isVisible": function () {},
            "markDirty": function () {},
            "maxDisplayLength": {},
            "name": {},
            "onBlocklyAction": function () {},
            "onMouseDown_": function () {},
            "processValidation_": function () {},
            "referencesVariables": function () {},
            "render_": function () {},
            "setCursorSvg": function () {},
            "setMarkerSvg": function () {},
            "setSourceBlock": function () {},
            "setText": function () {},
            "setTooltip": function () {},
            "setValidator": function () {},
            "setValue": function () {},
            "setVisible": function () {},
            "sourceBlock_": {},
            "toXml": function () {},
            "updateColour": function () {},
            "updateEditable": function () {},
            "updateSize_": function () {},
            "updateWidth": function () {},
            "visible_": {}
          }
        },
        "FieldLabelSerializable": {
          "fromJson": function () {},
          "superClass_": {
            "EDITABLE": {},
            "SERIALIZABLE": {},
            "bindEvents_": function () {},
            "callValidator": function () {},
            "classValidator": function () {},
            "clickTarget_": {},
            "configure_": function () {},
            "constructor": {
              "fromJson": function () {},
              "superClass_": {
                "EDITABLE": {},
                "SERIALIZABLE": {},
                "bindEvents_": function () {},
                "callValidator": function () {},
                "classValidator": function () {},
                "clickTarget_": {},
                "configure_": function () {},
                "createBorderRect_": function () {},
                "createTextElement_": function () {},
                "dispose": function () {},
                "disposed": {},
                "doClassValidation_": function () {},
                "doValueInvalid_": function () {},
                "doValueUpdate_": function () {},
                "forceRerender": function () {},
                "fromXml": function () {},
                "getAbsoluteXY_": function () {},
                "getClickTarget_": function () {},
                "getDisplayText_": function () {},
                "getFlipRtl": function () {},
                "getParentInput": function () {},
                "getScaledBBox_": function () {},
                "getSize": function () {},
                "getSourceBlock": function () {},
                "getSvgRoot": function () {},
                "getText": function () {},
                "getValidator": function () {},
                "getValue": function () {},
                "init": function () {},
                "initModel": function () {},
                "initView": function () {},
                "isClickable": function () {},
                "isCurrentlyEditable": function () {},
                "isDirty_": {},
                "isSerializable": function () {},
                "isTabNavigable": function () {},
                "isVisible": function () {},
                "markDirty": function () {},
                "maxDisplayLength": {},
                "name": {},
                "onBlocklyAction": function () {},
                "onMouseDown_": function () {},
                "processValidation_": function () {},
                "referencesVariables": function () {},
                "render_": function () {},
                "setCursorSvg": function () {},
                "setMarkerSvg": function () {},
                "setSourceBlock": function () {},
                "setText": function () {},
                "setTooltip": function () {},
                "setValidator": function () {},
                "setValue": function () {},
                "setVisible": function () {},
                "sourceBlock_": {},
                "toXml": function () {},
                "updateColour": function () {},
                "updateEditable": function () {},
                "updateSize_": function () {},
                "updateWidth": function () {},
                "visible_": {}
              }
            },
            "createBorderRect_": function () {},
            "createTextElement_": function () {},
            "dispose": function () {},
            "disposed": {},
            "doClassValidation_": function () {},
            "doValueInvalid_": function () {},
            "doValueUpdate_": function () {},
            "forceRerender": function () {},
            "fromXml": function () {},
            "getAbsoluteXY_": function () {},
            "getClickTarget_": function () {},
            "getDisplayText_": function () {},
            "getFlipRtl": function () {},
            "getParentInput": function () {},
            "getScaledBBox_": function () {},
            "getSize": function () {},
            "getSourceBlock": function () {},
            "getSvgRoot": function () {},
            "getText": function () {},
            "getValidator": function () {},
            "getValue": function () {},
            "init": function () {},
            "initModel": function () {},
            "initView": function () {},
            "isClickable": function () {},
            "isCurrentlyEditable": function () {},
            "isDirty_": {},
            "isSerializable": function () {},
            "isTabNavigable": function () {},
            "isVisible": function () {},
            "markDirty": function () {},
            "maxDisplayLength": {},
            "name": {},
            "onBlocklyAction": function () {},
            "onMouseDown_": function () {},
            "processValidation_": function () {},
            "referencesVariables": function () {},
            "render_": function () {},
            "setClass": function () {},
            "setCursorSvg": function () {},
            "setMarkerSvg": function () {},
            "setSourceBlock": function () {},
            "setText": function () {},
            "setTooltip": function () {},
            "setValidator": function () {},
            "setValue": function () {},
            "setVisible": function () {},
            "sourceBlock_": {},
            "toXml": function () {},
            "updateColour": function () {},
            "updateEditable": function () {},
            "updateSize_": function () {},
            "updateWidth": function () {},
            "visible_": {}
          }
        },
        "FieldMultilineInput": {
          "LINE_HEIGHT": {},
          "fromJson": function () {},
          "superClass_": {
            "CURSOR": {},
            "EDITABLE": {},
            "SERIALIZABLE": {},
            "bindEvents_": function () {},
            "bindInputEvents_": function () {},
            "callValidator": function () {},
            "classValidator": function () {},
            "clickTarget_": {},
            "configure_": function () {},
            "constructor": {
              "BORDERRADIUS": {},
              "FONTSIZE": {},
              "fromJson": function () {},
              "nonnegativeIntegerValidator": function () {},
              "numberValidator": function () {},
              "superClass_": {
                "EDITABLE": {},
                "SERIALIZABLE": {},
                "bindEvents_": function () {},
                "callValidator": function () {},
                "classValidator": function () {},
                "clickTarget_": {},
                "configure_": function () {},
                "createBorderRect_": function () {},
                "createTextElement_": function () {},
                "dispose": function () {},
                "disposed": {},
                "doClassValidation_": function () {},
                "doValueInvalid_": function () {},
                "doValueUpdate_": function () {},
                "forceRerender": function () {},
                "fromXml": function () {},
                "getAbsoluteXY_": function () {},
                "getClickTarget_": function () {},
                "getDisplayText_": function () {},
                "getFlipRtl": function () {},
                "getParentInput": function () {},
                "getScaledBBox_": function () {},
                "getSize": function () {},
                "getSourceBlock": function () {},
                "getSvgRoot": function () {},
                "getText": function () {},
                "getValidator": function () {},
                "getValue": function () {},
                "init": function () {},
                "initModel": function () {},
                "initView": function () {},
                "isClickable": function () {},
                "isCurrentlyEditable": function () {},
                "isDirty_": {},
                "isSerializable": function () {},
                "isTabNavigable": function () {},
                "isVisible": function () {},
                "markDirty": function () {},
                "maxDisplayLength": {},
                "name": {},
                "onBlocklyAction": function () {},
                "onMouseDown_": function () {},
                "processValidation_": function () {},
                "referencesVariables": function () {},
                "render_": function () {},
                "setCursorSvg": function () {},
                "setMarkerSvg": function () {},
                "setSourceBlock": function () {},
                "setText": function () {},
                "setTooltip": function () {},
                "setValidator": function () {},
                "setValue": function () {},
                "setVisible": function () {},
                "sourceBlock_": {},
                "toXml": function () {},
                "updateColour": function () {},
                "updateEditable": function () {},
                "updateSize_": function () {},
                "updateWidth": function () {},
                "visible_": {}
              }
            },
            "createBorderRect_": function () {},
            "createTextElement_": function () {},
            "dispose": function () {},
            "disposed": {},
            "doClassValidation_": function () {},
            "doValueInvalid_": function () {},
            "doValueUpdate_": function () {},
            "forceRerender": function () {},
            "fromXml": function () {},
            "getAbsoluteXY_": function () {},
            "getClickTarget_": function () {},
            "getDisplayText_": function () {},
            "getEditorText_": function () {},
            "getFlipRtl": function () {},
            "getParentInput": function () {},
            "getScaledBBox_": function () {},
            "getSize": function () {},
            "getSourceBlock": function () {},
            "getSvgRoot": function () {},
            "getText": function () {},
            "getText_": function () {},
            "getValidator": function () {},
            "getValue": function () {},
            "getValueFromEditorText_": function () {},
            "init": function () {},
            "initModel": function () {},
            "initView": function () {},
            "isClickable": function () {},
            "isCurrentlyEditable": function () {},
            "isDirty_": {},
            "isSerializable": function () {},
            "isTabNavigable": function () {},
            "isVisible": function () {},
            "markDirty": function () {},
            "maxDisplayLength": {},
            "name": {},
            "onBlocklyAction": function () {},
            "onHtmlInputChange_": function () {},
            "onHtmlInputKeyDown_": function () {},
            "onMouseDown_": function () {},
            "processValidation_": function () {},
            "referencesVariables": function () {},
            "render_": function () {},
            "resizeEditor_": function () {},
            "setCursorSvg": function () {},
            "setEditorValue_": function () {},
            "setMarkerSvg": function () {},
            "setSourceBlock": function () {},
            "setSpellcheck": function () {},
            "setText": function () {},
            "setTooltip": function () {},
            "setValidator": function () {},
            "setValue": function () {},
            "setVisible": function () {},
            "showEditor_": function () {},
            "showInlineEditor_": function () {},
            "showPromptEditor_": function () {},
            "sourceBlock_": {},
            "toXml": function () {},
            "unbindInputEvents_": function () {},
            "updateColour": function () {},
            "updateEditable": function () {},
            "updateSize_": function () {},
            "updateWidth": function () {},
            "visible_": {},
            "widgetCreate_": function () {},
            "widgetDispose_": function () {}
          }
        },
        "FieldNumber": {
          "fromJson": function () {},
          "superClass_": {
            "CURSOR": {},
            "EDITABLE": {},
            "SERIALIZABLE": {},
            "bindEvents_": function () {},
            "bindInputEvents_": function () {},
            "callValidator": function () {},
            "classValidator": function () {},
            "clickTarget_": {},
            "configure_": function () {},
            "constructor": {
              "BORDERRADIUS": {},
              "FONTSIZE": {},
              "fromJson": function () {},
              "nonnegativeIntegerValidator": function () {},
              "numberValidator": function () {},
              "superClass_": {
                "EDITABLE": {},
                "SERIALIZABLE": {},
                "bindEvents_": function () {},
                "callValidator": function () {},
                "classValidator": function () {},
                "clickTarget_": {},
                "configure_": function () {},
                "createBorderRect_": function () {},
                "createTextElement_": function () {},
                "dispose": function () {},
                "disposed": {},
                "doClassValidation_": function () {},
                "doValueInvalid_": function () {},
                "doValueUpdate_": function () {},
                "forceRerender": function () {},
                "fromXml": function () {},
                "getAbsoluteXY_": function () {},
                "getClickTarget_": function () {},
                "getDisplayText_": function () {},
                "getFlipRtl": function () {},
                "getParentInput": function () {},
                "getScaledBBox_": function () {},
                "getSize": function () {},
                "getSourceBlock": function () {},
                "getSvgRoot": function () {},
                "getText": function () {},
                "getValidator": function () {},
                "getValue": function () {},
                "init": function () {},
                "initModel": function () {},
                "initView": function () {},
                "isClickable": function () {},
                "isCurrentlyEditable": function () {},
                "isDirty_": {},
                "isSerializable": function () {},
                "isTabNavigable": function () {},
                "isVisible": function () {},
                "markDirty": function () {},
                "maxDisplayLength": {},
                "name": {},
                "onBlocklyAction": function () {},
                "onMouseDown_": function () {},
                "processValidation_": function () {},
                "referencesVariables": function () {},
                "render_": function () {},
                "setCursorSvg": function () {},
                "setMarkerSvg": function () {},
                "setSourceBlock": function () {},
                "setText": function () {},
                "setTooltip": function () {},
                "setValidator": function () {},
                "setValue": function () {},
                "setVisible": function () {},
                "sourceBlock_": {},
                "toXml": function () {},
                "updateColour": function () {},
                "updateEditable": function () {},
                "updateSize_": function () {},
                "updateWidth": function () {},
                "visible_": {}
              }
            },
            "createBorderRect_": function () {},
            "createTextElement_": function () {},
            "dispose": function () {},
            "disposed": {},
            "doClassValidation_": function () {},
            "doValueInvalid_": function () {},
            "doValueUpdate_": function () {},
            "forceRerender": function () {},
            "fromXml": function () {},
            "getAbsoluteXY_": function () {},
            "getClickTarget_": function () {},
            "getDisplayText_": function () {},
            "getEditorText_": function () {},
            "getFlipRtl": function () {},
            "getParentInput": function () {},
            "getScaledBBox_": function () {},
            "getSize": function () {},
            "getSourceBlock": function () {},
            "getSvgRoot": function () {},
            "getText": function () {},
            "getText_": function () {},
            "getValidator": function () {},
            "getValue": function () {},
            "getValueFromEditorText_": function () {},
            "init": function () {},
            "initModel": function () {},
            "initView": function () {},
            "isClickable": function () {},
            "isCurrentlyEditable": function () {},
            "isDirty_": {},
            "isSerializable": function () {},
            "isTabNavigable": function () {},
            "isVisible": function () {},
            "markDirty": function () {},
            "maxDisplayLength": {},
            "name": {},
            "onBlocklyAction": function () {},
            "onHtmlInputChange_": function () {},
            "onHtmlInputKeyDown_": function () {},
            "onMouseDown_": function () {},
            "processValidation_": function () {},
            "referencesVariables": function () {},
            "render_": function () {},
            "resizeEditor_": function () {},
            "setCursorSvg": function () {},
            "setEditorValue_": function () {},
            "setMarkerSvg": function () {},
            "setSourceBlock": function () {},
            "setSpellcheck": function () {},
            "setText": function () {},
            "setTooltip": function () {},
            "setValidator": function () {},
            "setValue": function () {},
            "setVisible": function () {},
            "showEditor_": function () {},
            "showInlineEditor_": function () {},
            "showPromptEditor_": function () {},
            "sourceBlock_": {},
            "toXml": function () {},
            "unbindInputEvents_": function () {},
            "updateColour": function () {},
            "updateEditable": function () {},
            "updateSize_": function () {},
            "updateWidth": function () {},
            "visible_": {},
            "widgetCreate_": function () {},
            "widgetDispose_": function () {}
          }
        },
        "FieldTextInput": {
          "BORDERRADIUS": {},
          "FONTSIZE": {},
          "fromJson": function () {},
          "nonnegativeIntegerValidator": function () {},
          "numberValidator": function () {},
          "superClass_": {
            "EDITABLE": {},
            "SERIALIZABLE": {},
            "bindEvents_": function () {},
            "callValidator": function () {},
            "classValidator": function () {},
            "clickTarget_": {},
            "configure_": function () {},
            "createBorderRect_": function () {},
            "createTextElement_": function () {},
            "dispose": function () {},
            "disposed": {},
            "doClassValidation_": function () {},
            "doValueInvalid_": function () {},
            "doValueUpdate_": function () {},
            "forceRerender": function () {},
            "fromXml": function () {},
            "getAbsoluteXY_": function () {},
            "getClickTarget_": function () {},
            "getDisplayText_": function () {},
            "getFlipRtl": function () {},
            "getParentInput": function () {},
            "getScaledBBox_": function () {},
            "getSize": function () {},
            "getSourceBlock": function () {},
            "getSvgRoot": function () {},
            "getText": function () {},
            "getValidator": function () {},
            "getValue": function () {},
            "init": function () {},
            "initModel": function () {},
            "initView": function () {},
            "isClickable": function () {},
            "isCurrentlyEditable": function () {},
            "isDirty_": {},
            "isSerializable": function () {},
            "isTabNavigable": function () {},
            "isVisible": function () {},
            "markDirty": function () {},
            "maxDisplayLength": {},
            "name": {},
            "onBlocklyAction": function () {},
            "onMouseDown_": function () {},
            "processValidation_": function () {},
            "referencesVariables": function () {},
            "render_": function () {},
            "setCursorSvg": function () {},
            "setMarkerSvg": function () {},
            "setSourceBlock": function () {},
            "setText": function () {},
            "setTooltip": function () {},
            "setValidator": function () {},
            "setValue": function () {},
            "setVisible": function () {},
            "sourceBlock_": {},
            "toXml": function () {},
            "updateColour": function () {},
            "updateEditable": function () {},
            "updateSize_": function () {},
            "updateWidth": function () {},
            "visible_": {}
          }
        },
        "FieldVariable": {
          "dropdownCreate": function () {},
          "fromJson": function () {},
          "superClass_": {
            "CURSOR": {},
            "EDITABLE": {},
            "SERIALIZABLE": {},
            "bindEvents_": function () {},
            "callValidator": function () {},
            "classValidator": function () {},
            "clickTarget_": {},
            "configure_": function () {},
            "constructor": {
              "ARROW_CHAR": {},
              "CHECKMARK_OVERHANG": {},
              "IMAGE_Y_OFFSET": {},
              "IMAGE_Y_PADDING": {},
              "MAX_MENU_HEIGHT_VH": {},
              "applyTrim_": function () {},
              "fromJson": function () {},
              "superClass_": {
                "EDITABLE": {},
                "SERIALIZABLE": {},
                "bindEvents_": function () {},
                "callValidator": function () {},
                "classValidator": function () {},
                "clickTarget_": {},
                "configure_": function () {},
                "createBorderRect_": function () {},
                "createTextElement_": function () {},
                "dispose": function () {},
                "disposed": {},
                "doClassValidation_": function () {},
                "doValueInvalid_": function () {},
                "doValueUpdate_": function () {},
                "forceRerender": function () {},
                "fromXml": function () {},
                "getAbsoluteXY_": function () {},
                "getClickTarget_": function () {},
                "getDisplayText_": function () {},
                "getFlipRtl": function () {},
                "getParentInput": function () {},
                "getScaledBBox_": function () {},
                "getSize": function () {},
                "getSourceBlock": function () {},
                "getSvgRoot": function () {},
                "getText": function () {},
                "getValidator": function () {},
                "getValue": function () {},
                "init": function () {},
                "initModel": function () {},
                "initView": function () {},
                "isClickable": function () {},
                "isCurrentlyEditable": function () {},
                "isDirty_": {},
                "isSerializable": function () {},
                "isTabNavigable": function () {},
                "isVisible": function () {},
                "markDirty": function () {},
                "maxDisplayLength": {},
                "name": {},
                "onBlocklyAction": function () {},
                "onMouseDown_": function () {},
                "processValidation_": function () {},
                "referencesVariables": function () {},
                "render_": function () {},
                "setCursorSvg": function () {},
                "setMarkerSvg": function () {},
                "setSourceBlock": function () {},
                "setText": function () {},
                "setTooltip": function () {},
                "setValidator": function () {},
                "setValue": function () {},
                "setVisible": function () {},
                "sourceBlock_": {},
                "toXml": function () {},
                "updateColour": function () {},
                "updateEditable": function () {},
                "updateSize_": function () {},
                "updateWidth": function () {},
                "visible_": {}
              },
              "validateOptions_": function () {}
            },
            "createBorderRect_": function () {},
            "createTextElement_": function () {},
            "dispose": function () {},
            "disposed": {},
            "doClassValidation_": function () {},
            "doValueInvalid_": function () {},
            "doValueUpdate_": function () {},
            "dropdownCreate_": function () {},
            "dropdownDispose_": function () {},
            "forceRerender": function () {},
            "fromXml": function () {},
            "getAbsoluteXY_": function () {},
            "getClickTarget_": function () {},
            "getDisplayText_": function () {},
            "getFlipRtl": function () {},
            "getOptions": function () {},
            "getParentInput": function () {},
            "getScaledBBox_": function () {},
            "getSize": function () {},
            "getSourceBlock": function () {},
            "getSvgRoot": function () {},
            "getText": function () {},
            "getText_": function () {},
            "getValidator": function () {},
            "getValue": function () {},
            "handleMenuActionEvent_": function () {},
            "init": function () {},
            "initModel": function () {},
            "initView": function () {},
            "isClickable": function () {},
            "isCurrentlyEditable": function () {},
            "isDirty_": {},
            "isOptionListDynamic": function () {},
            "isSerializable": function () {},
            "isTabNavigable": function () {},
            "isVisible": function () {},
            "markDirty": function () {},
            "maxDisplayLength": {},
            "name": {},
            "onBlocklyAction": function () {},
            "onItemSelected": function () {},
            "onMouseDown_": function () {},
            "processValidation_": function () {},
            "referencesVariables": function () {},
            "renderSelectedImage_": function () {},
            "renderSelectedText_": function () {},
            "render_": function () {},
            "setCursorSvg": function () {},
            "setMarkerSvg": function () {},
            "setSourceBlock": function () {},
            "setText": function () {},
            "setTooltip": function () {},
            "setValidator": function () {},
            "setValue": function () {},
            "setVisible": function () {},
            "showEditor_": function () {},
            "sourceBlock_": {},
            "toXml": function () {},
            "trimOptions_": function () {},
            "updateColour": function () {},
            "updateEditable": function () {},
            "updateSize_": function () {},
            "updateWidth": function () {},
            "visible_": {}
          }
        },
        "Flyout": function () {},
        "FlyoutButton": {
          "MARGIN": {}
        },
        "FlyoutCursor": {
          "superClass_": {
            "getCurNode": function () {},
            "getDrawer": function () {},
            "hide": function () {},
            "in": function () {},
            "next": function () {},
            "out": function () {},
            "prev": function () {},
            "setCurNode": function () {},
            "setDrawer": function () {}
          }
        },
        "FlyoutDragger": {
          "superClass_": {
            "dispose": function () {},
            "drag": function () {},
            "endDrag": function () {},
            "startDrag": function () {}
          }
        },
        "Generator": {
          "NAME_TYPE": {}
        },
        "Gesture": {
          "inProgress": function () {}
        },
        "Grid": {
          "createDom": function () {}
        },
        "HSV_SATURATION": {},
        "HSV_VALUE": {},
        "HorizontalFlyout": {
          "superClass_": {
            "CORNER_RADIUS": {},
            "GAP_X": {},
            "GAP_Y": {},
            "MARGIN": {},
            "SCROLLBAR_PADDING": {},
            "addBlockListeners_": function () {},
            "autoClose": {},
            "blockMouseDown_": function () {},
            "clearOldBlocks_": function () {},
            "containerVisible_": {},
            "createBlock": function () {},
            "createDom": function () {},
            "createRect_": function () {},
            "dispose": function () {},
            "dragAngleRange_": {},
            "filterForCapacity_": function () {},
            "getHeight": function () {},
            "getWidth": function () {},
            "getWorkspace": function () {},
            "height_": {},
            "hide": function () {},
            "init": function () {},
            "initFlyoutButton_": function () {},
            "isBlockCreatable_": function () {},
            "isScrollable": function () {},
            "isVisible": function () {},
            "isVisible_": {},
            "moveRectToBlock_": function () {},
            "onMouseDown_": function () {},
            "placeNewBlock_": function () {},
            "positionAt_": function () {},
            "reflow": function () {},
            "setContainerVisible": function () {},
            "setVisible": function () {},
            "show": function () {},
            "updateDisplay_": function () {},
            "width_": {}
          }
        },
        "INPUT_VALUE": {},
        "INSERTION_MARKER_COLOUR": {},
        "Icon": function () {},
        "Input": function () {},
        "InsertionMarkerManager": function () {},
        "LINE_MODE_MULTIPLIER": {},
        "LONGPRESS": {},
        "MarkerCursor": {
          "superClass_": {
            "getCurNode": function () {},
            "getDrawer": function () {},
            "hide": function () {},
            "in": function () {},
            "next": function () {},
            "out": function () {},
            "prev": function () {},
            "setCurNode": function () {},
            "setDrawer": function () {}
          }
        },
        "Menu": {
          "superClass_": {
            "addChild": function () {},
            "addChildAt": function () {},
            "createDom": function () {},
            "dispose": function () {},
            "disposeInternal": function () {},
            "enterDocument": function () {},
            "exitDocument": function () {},
            "forEachChild": function () {},
            "getChild": function () {},
            "getChildAt": function () {},
            "getChildCount": function () {},
            "getContentElement": function () {},
            "getElement": function () {},
            "getId": function () {},
            "getParent": function () {},
            "hasChildren": function () {},
            "indexOfChild": function () {},
            "isInDocument": function () {},
            "isRightToLeft": function () {},
            "render": function () {},
            "renderBefore": function () {},
            "render_": function () {},
            "setElementInternal": function () {},
            "setParent": function () {},
            "setRightToLeft": function () {}
          }
        },
        "MenuItem": {
          "superClass_": {
            "addChild": function () {},
            "addChildAt": function () {},
            "createDom": function () {},
            "dispose": function () {},
            "disposeInternal": function () {},
            "enterDocument": function () {},
            "exitDocument": function () {},
            "forEachChild": function () {},
            "getChild": function () {},
            "getChildAt": function () {},
            "getChildCount": function () {},
            "getContentElement": function () {},
            "getElement": function () {},
            "getId": function () {},
            "getParent": function () {},
            "hasChildren": function () {},
            "indexOfChild": function () {},
            "isInDocument": function () {},
            "isRightToLeft": function () {},
            "render": function () {},
            "renderBefore": function () {},
            "render_": function () {},
            "setElementInternal": function () {},
            "setParent": function () {},
            "setRightToLeft": function () {}
          }
        },
        "Msg": {},
        "Mutator": {
          "findParentWs": function () {},
          "reconnect": function () {},
          "superClass_": {
            "SIZE": {},
            "bubble_": {},
            "collapseHidden": {},
            "computeIconLocation": function () {},
            "createIcon": function () {},
            "dispose": function () {},
            "getCorrectedSize": function () {},
            "getIconLocation": function () {},
            "iconClick_": function () {},
            "iconXY_": {},
            "isVisible": function () {},
            "setIconLocation": function () {},
            "updateColour": function () {},
            "updateEditable": function () {}
          }
        },
        "NEXT_STATEMENT": {},
        "Names": {
          "DEVELOPER_VARIABLE_TYPE": {},
          "equals": function () {}
        },
        "OPPOSITE_TYPE": {},
        "OUTPUT_VALUE": {},
        "Options": {
          "parseGridOptions_": function () {},
          "parseMoveOptions": function () {},
          "parseToolboxTree": function () {},
          "parseZoomOptions_": function () {}
        },
        "PAGE_MODE_MULTIPLIER": {},
        "PREVIOUS_STATEMENT": {},
        "PROCEDURE_CATEGORY_NAME": {},
        "Procedures": {
          "NAME_TYPE": {},
          "allProcedures": function () {},
          "findLegalName": function () {},
          "flyoutCategory": function () {},
          "getCallers": function () {},
          "getDefinition": function () {},
          "isLegalName_": function () {},
          "isNameUsed": function () {},
          "mutateCallers": function () {},
          "procTupleComparator_": function () {},
          "rename": function () {}
        },
        "RENAME_VARIABLE_ID": {},
        "RenderedConnection": {
          "superClass_": {
            "canConnectToPrevious_": function () {},
            "canConnectWithReason_": function () {},
            "checkConnection_": function () {},
            "checkType_": function () {},
            "check_": {},
            "connect": function () {},
            "connect_": function () {},
            "disconnect": function () {},
            "disconnectInternal_": function () {},
            "dispose": function () {},
            "disposed": {},
            "getCheck": function () {},
            "getParentInput": function () {},
            "getShadowDom": function () {},
            "getSourceBlock": function () {},
            "isConnected": function () {},
            "isConnectionAllowed": function () {},
            "isSuperior": function () {},
            "neighbours_": function () {},
            "onCheckChanged_": function () {},
            "onFailedConnect": function () {},
            "respawnShadow_": function () {},
            "setCheck": function () {},
            "setShadowDom": function () {},
            "shadowDom_": {},
            "targetBlock": function () {},
            "targetConnection": {},
            "toString": function () {},
            "x_": {},
            "y_": {}
          }
        },
        "SNAP_RADIUS": {},
        "SOUND_LIMIT": {},
        "SPRITE": {
          "height": {},
          "url": {},
          "width": {}
        },
        "Scrollbar": {
          "metricsAreEquivalent_": function () {},
          "scrollbarThickness": {}
        },
        "ScrollbarPair": function () {},
        "TOOLBOX_AT_BOTTOM": {},
        "TOOLBOX_AT_LEFT": {},
        "TOOLBOX_AT_RIGHT": {},
        "TOOLBOX_AT_TOP": {},
        "Theme": function () {},
        "ThemeManager": function () {},
        "Themes": {
          "Classic": {
            "blockStyles_": {
              "colour_blocks": {
                "colourPrimary": {}
              },
              "hat_blocks": {
                "colourPrimary": {},
                "hat": {}
              },
              "list_blocks": {
                "colourPrimary": {}
              },
              "logic_blocks": {
                "colourPrimary": {}
              },
              "loop_blocks": {
                "colourPrimary": {}
              },
              "math_blocks": {
                "colourPrimary": {}
              },
              "procedure_blocks": {
                "colourPrimary": {}
              },
              "text_blocks": {
                "colourPrimary": {}
              },
              "variable_blocks": {
                "colourPrimary": {}
              },
              "variable_dynamic_blocks": {
                "colourPrimary": {}
              }
            },
            "categoryStyles_": {
              "colour_category": {
                "colour": {}
              },
              "list_category": {
                "colour": {}
              },
              "logic_category": {
                "colour": {}
              },
              "loop_category": {
                "colour": {}
              },
              "math_category": {
                "colour": {}
              },
              "procedure_category": {
                "colour": {}
              },
              "text_category": {
                "colour": {}
              },
              "variable_category": {
                "colour": {}
              },
              "variable_dynamic_category": {
                "colour": {}
              }
            },
            "componentStyles_": {},
            "getAllBlockStyles": function () {},
            "getBlockStyle": function () {},
            "getCategoryStyle": function () {},
            "getComponentStyle": function () {},
            "setAllBlockStyles": function () {},
            "setBlockStyle": function () {},
            "setCategoryStyle": function () {},
            "setComponentStyle": function () {}
          },
          "Dark": {
            "blockStyles_": {
              "colour_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "hat_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {},
                "hat": {}
              },
              "list_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "logic_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "loop_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "math_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "procedure_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "text_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "variable_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "variable_dynamic_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              }
            },
            "categoryStyles_": {
              "colour_category": {
                "colour": {}
              },
              "list_category": {
                "colour": {}
              },
              "logic_category": {
                "colour": {}
              },
              "loop_category": {
                "colour": {}
              },
              "math_category": {
                "colour": {}
              },
              "procedure_category": {
                "colour": {}
              },
              "text_category": {
                "colour": {}
              },
              "variable_category": {
                "colour": {}
              },
              "variable_dynamic_category": {
                "colour": {}
              }
            },
            "componentStyles_": {
              "flyout": {},
              "flyoutOpacity": {},
              "flyoutText": {},
              "scrollbar": {},
              "scrollbarOpacity": {},
              "toolbox": {},
              "toolboxText": {},
              "workspace": {}
            },
            "getAllBlockStyles": function () {},
            "getBlockStyle": function () {},
            "getCategoryStyle": function () {},
            "getComponentStyle": function () {},
            "setAllBlockStyles": function () {},
            "setBlockStyle": function () {},
            "setCategoryStyle": function () {},
            "setComponentStyle": function () {}
          },
          "HighContrast": {
            "blockStyles_": {
              "colour_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "hat_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {},
                "hat": {}
              },
              "list_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "logic_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "loop_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "math_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "procedure_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "text_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "variable_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "variable_dynamic_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              }
            },
            "categoryStyles_": {
              "colour_category": {
                "colour": {}
              },
              "list_category": {
                "colour": {}
              },
              "logic_category": {
                "colour": {}
              },
              "loop_category": {
                "colour": {}
              },
              "math_category": {
                "colour": {}
              },
              "procedure_category": {
                "colour": {}
              },
              "text_category": {
                "colour": {}
              },
              "variable_category": {
                "colour": {}
              },
              "variable_dynamic_category": {
                "colour": {}
              }
            },
            "componentStyles_": {},
            "getAllBlockStyles": function () {},
            "getBlockStyle": function () {},
            "getCategoryStyle": function () {},
            "getComponentStyle": function () {},
            "setAllBlockStyles": function () {},
            "setBlockStyle": function () {},
            "setCategoryStyle": function () {},
            "setComponentStyle": function () {}
          },
          "Modern": {
            "blockStyles_": {
              "colour_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "hat_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {},
                "hat": {}
              },
              "list_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "logic_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "loop_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "math_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "procedure_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "text_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "variable_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              },
              "variable_dynamic_blocks": {
                "colourPrimary": {},
                "colourSecondary": {},
                "colourTertiary": {}
              }
            },
            "categoryStyles_": {
              "colour_category": {
                "colour": {}
              },
              "list_category": {
                "colour": {}
              },
              "logic_category": {
                "colour": {}
              },
              "loop_category": {
                "colour": {}
              },
              "math_category": {
                "colour": {}
              },
              "procedure_category": {
                "colour": {}
              },
              "text_category": {
                "colour": {}
              },
              "variable_category": {
                "colour": {}
              },
              "variable_dynamic_category": {
                "colour": {}
              }
            },
            "componentStyles_": {},
            "getAllBlockStyles": function () {},
            "getBlockStyle": function () {},
            "getCategoryStyle": function () {},
            "getComponentStyle": function () {},
            "setAllBlockStyles": function () {},
            "setBlockStyle": function () {},
            "setCategoryStyle": function () {},
            "setComponentStyle": function () {}
          }
        },
        "Toolbox": {
          "TreeSeparator": {
            "superClass_": {
              "add": function () {},
              "addChild": function () {},
              "addChildAt": function () {},
              "computeDepth_": function () {},
              "constructor": {
                "superClass_": {
                  "add": {
                    "closure_uid_118192521": {}
                  },
                  "addChild": {
                    "closure_uid_118192521": {}
                  },
                  "addChildAt": {
                    "closure_uid_118192521": {}
                  },
                  "computeDepth_": {
                    "closure_uid_118192521": {}
                  },
                  "constructor": {
                    "allNodes": {
                      "closure_uid_118192521": {}
                    },
                    "closure_uid_118192521": {},
                    "superClass_": {
                      "addChild": {
                        "closure_uid_118192521": {}
                      },
                      "addChildAt": {
                        "closure_uid_118192521": {}
                      },
                      "closure_uid_118192521": {},
                      "createDom": {
                        "closure_uid_118192521": {}
                      },
                      "dispose": {
                        "closure_uid_118192521": {}
                      },
                      "disposeInternal": {
                        "closure_uid_118192521": {}
                      },
                      "enterDocument": {
                        "closure_uid_118192521": {}
                      },
                      "exitDocument": {
                        "closure_uid_118192521": {}
                      },
                      "forEachChild": {
                        "closure_uid_118192521": {}
                      },
                      "getChild": {
                        "closure_uid_118192521": {}
                      },
                      "getChildAt": {
                        "closure_uid_118192521": {}
                      },
                      "getChildCount": {
                        "closure_uid_118192521": {}
                      },
                      "getContentElement": {
                        "closure_uid_118192521": {}
                      },
                      "getElement": {
                        "closure_uid_118192521": {}
                      },
                      "getId": {
                        "closure_uid_118192521": {}
                      },
                      "getParent": {
                        "closure_uid_118192521": {}
                      },
                      "hasChildren": {
                        "closure_uid_118192521": {}
                      },
                      "indexOfChild": {
                        "closure_uid_118192521": {}
                      },
                      "isInDocument": {
                        "closure_uid_118192521": {}
                      },
                      "isRightToLeft": {
                        "closure_uid_118192521": {}
                      },
                      "render": {
                        "closure_uid_118192521": {}
                      },
                      "renderBefore": {
                        "closure_uid_118192521": {}
                      },
                      "render_": {
                        "closure_uid_118192521": {}
                      },
                      "setElementInternal": {
                        "closure_uid_118192521": {}
                      },
                      "setParent": {
                        "closure_uid_118192521": {}
                      },
                      "setRightToLeft": {
                        "closure_uid_118192521": {}
                      }
                    }
                  },
                  "contains": {
                    "closure_uid_118192521": {}
                  },
                  "createDom": {
                    "closure_uid_118192521": {}
                  },
                  "dispose": {
                    "closure_uid_118192521": {}
                  },
                  "disposeInternal": {
                    "closure_uid_118192521": {}
                  },
                  "doNodeCollapsed": {
                    "closure_uid_118192521": {}
                  },
                  "doNodeExpanded": {
                    "closure_uid_118192521": {}
                  },
                  "enterDocument": {
                    "closure_uid_118192521": {}
                  },
                  "exitDocument": {
                    "closure_uid_118192521": {}
                  },
                  "forEachChild": {
                    "closure_uid_118192521": {}
                  },
                  "getBackgroundPosition": {
                    "closure_uid_118192521": {}
                  },
                  "getCalculatedIconClass": {
                    "closure_uid_118192521": {}
                  },
                  "getChild": {
                    "closure_uid_118192521": {}
                  },
                  "getChildAt": {
                    "closure_uid_118192521": {}
                  },
                  "getChildCount": {
                    "closure_uid_118192521": {}
                  },
                  "getChildren": {
                    "closure_uid_118192521": {}
                  },
                  "getChildrenElement": {
                    "closure_uid_118192521": {}
                  },
                  "getConfig": {
                    "closure_uid_118192521": {}
                  },
                  "getContentElement": {
                    "closure_uid_118192521": {}
                  },
                  "getDepth": {
                    "closure_uid_118192521": {}
                  },
                  "getElement": {
                    "closure_uid_118192521": {}
                  },
                  "getExpanded": {
                    "closure_uid_118192521": {}
                  },
                  "getExpandedIconClass": {
                    "closure_uid_118192521": {}
                  },
                  "getFirstChild": {
                    "closure_uid_118192521": {}
                  },
                  "getIconClass": {
                    "closure_uid_118192521": {}
                  },
                  "getIconDom": {
                    "closure_uid_118192521": {}
                  },
                  "getIconElement": {
                    "closure_uid_118192521": {}
                  },
                  "getId": {
                    "closure_uid_118192521": {}
                  },
                  "getLabelDom": {
                    "closure_uid_118192521": {}
                  },
                  "getLabelElement": {
                    "closure_uid_118192521": {}
                  },
                  "getLastChild": {
                    "closure_uid_118192521": {}
                  },
                  "getLastShownDescendant": {
                    "closure_uid_118192521": {}
                  },
                  "getNextShownNode": {
                    "closure_uid_118192521": {}
                  },
                  "getNextSibling": {
                    "closure_uid_118192521": {}
                  },
                  "getParent": {
                    "closure_uid_118192521": {}
                  },
                  "getPixelIndent_": {
                    "closure_uid_118192521": {}
                  },
                  "getPreviousShownNode": {
                    "closure_uid_118192521": {}
                  },
                  "getPreviousSibling": {
                    "closure_uid_118192521": {}
                  },
                  "getRowClassName": {
                    "closure_uid_118192521": {}
                  },
                  "getRowDom": {
                    "closure_uid_118192521": {}
                  },
                  "getRowElement": {
                    "closure_uid_118192521": {}
                  },
                  "getText": {
                    "closure_uid_118192521": {}
                  },
                  "getTree": {
                    "closure_uid_118192521": {}
                  },
                  "hasChildren": {
                    "closure_uid_118192521": {}
                  },
                  "indexOfChild": {
                    "closure_uid_118192521": {}
                  },
                  "initAccessibility": {
                    "closure_uid_118192521": {}
                  },
                  "isInDocument": {
                    "closure_uid_118192521": {}
                  },
                  "isLastSibling": {
                    "closure_uid_118192521": {}
                  },
                  "isRightToLeft": {
                    "closure_uid_118192521": {}
                  },
                  "isSelected": {
                    "closure_uid_118192521": {}
                  },
                  "isUserCollapsible": {
                    "closure_uid_118192521": {}
                  },
                  "onClick_": {
                    "closure_uid_118192521": {}
                  },
                  "onKeyDown": {
                    "closure_uid_118192521": {}
                  },
                  "onMouseDown": {
                    "closure_uid_118192521": {}
                  },
                  "render": {
                    "closure_uid_118192521": {}
                  },
                  "renderBefore": {
                    "closure_uid_118192521": {}
                  },
                  "render_": {
                    "closure_uid_118192521": {}
                  },
                  "select": {
                    "closure_uid_118192521": {}
                  },
                  "selectChild": {
                    "closure_uid_118192521": {}
                  },
                  "selectFirst": {
                    "closure_uid_118192521": {}
                  },
                  "selectNext": {
                    "closure_uid_118192521": {}
                  },
                  "selectParent": {
                    "closure_uid_118192521": {}
                  },
                  "selectPrevious": {
                    "closure_uid_118192521": {}
                  },
                  "setDepth_": {
                    "closure_uid_118192521": {}
                  },
                  "setElementInternal": {
                    "closure_uid_118192521": {}
                  },
                  "setExpanded": {
                    "closure_uid_118192521": {}
                  },
                  "setExpandedInternal": {
                    "closure_uid_118192521": {}
                  },
                  "setParent": {
                    "closure_uid_118192521": {}
                  },
                  "setRightToLeft": {
                    "closure_uid_118192521": {}
                  },
                  "setSelectedInternal": {
                    "closure_uid_118192521": {}
                  },
                  "setText": {
                    "closure_uid_118192521": {}
                  },
                  "setTreeInternal": {
                    "closure_uid_118192521": {}
                  },
                  "toDom": {
                    "closure_uid_118192521": {}
                  },
                  "toggle": {
                    "closure_uid_118192521": {}
                  },
                  "updateExpandIcon": {
                    "closure_uid_118192521": {}
                  },
                  "updateIcon_": {
                    "closure_uid_118192521": {}
                  },
                  "updateRow": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "contains": {
                "closure_uid_118192521": {}
              },
              "createDom": {
                "closure_uid_118192521": {}
              },
              "dispose": {
                "closure_uid_118192521": {}
              },
              "disposeInternal": {
                "closure_uid_118192521": {}
              },
              "doNodeCollapsed": function () {},
              "doNodeExpanded": function () {},
              "enterDocument": {
                "closure_uid_118192521": {}
              },
              "exitDocument": {
                "closure_uid_118192521": {}
              },
              "forEachChild": {
                "closure_uid_118192521": {}
              },
              "getBackgroundPosition": {
                "closure_uid_118192521": {}
              },
              "getCalculatedIconClass": function () {},
              "getChild": {
                "closure_uid_118192521": {}
              },
              "getChildAt": {
                "closure_uid_118192521": {}
              },
              "getChildCount": {
                "closure_uid_118192521": {}
              },
              "getChildren": {
                "closure_uid_118192521": {}
              },
              "getChildrenElement": {
                "closure_uid_118192521": {}
              },
              "getConfig": {
                "closure_uid_118192521": {}
              },
              "getContentElement": {
                "closure_uid_118192521": {}
              },
              "getDepth": {
                "closure_uid_118192521": {}
              },
              "getElement": {
                "closure_uid_118192521": {}
              },
              "getExpanded": {
                "closure_uid_118192521": {}
              },
              "getExpandedIconClass": {
                "closure_uid_118192521": {}
              },
              "getFirstChild": {
                "closure_uid_118192521": {}
              },
              "getIconClass": {
                "closure_uid_118192521": {}
              },
              "getIconDom": {
                "closure_uid_118192521": {}
              },
              "getIconElement": {
                "closure_uid_118192521": {}
              },
              "getId": {
                "closure_uid_118192521": {}
              },
              "getLabelDom": {
                "closure_uid_118192521": {}
              },
              "getLabelElement": {
                "closure_uid_118192521": {}
              },
              "getLastChild": {
                "closure_uid_118192521": {}
              },
              "getLastShownDescendant": {
                "closure_uid_118192521": {}
              },
              "getNextShownNode": {
                "closure_uid_118192521": {}
              },
              "getNextSibling": {
                "closure_uid_118192521": {}
              },
              "getParent": {
                "closure_uid_118192521": {}
              },
              "getPixelIndent_": {
                "closure_uid_118192521": {}
              },
              "getPreviousShownNode": {
                "closure_uid_118192521": {}
              },
              "getPreviousSibling": {
                "closure_uid_118192521": {}
              },
              "getRowClassName": {
                "closure_uid_118192521": {}
              },
              "getRowDom": {
                "closure_uid_118192521": {}
              },
              "getRowElement": {
                "closure_uid_118192521": {}
              },
              "getText": {
                "closure_uid_118192521": {}
              },
              "getTree": function () {},
              "hasChildren": {
                "closure_uid_118192521": {}
              },
              "indexOfChild": {
                "closure_uid_118192521": {}
              },
              "initAccessibility": {
                "closure_uid_118192521": {}
              },
              "isInDocument": {
                "closure_uid_118192521": {}
              },
              "isLastSibling": {
                "closure_uid_118192521": {}
              },
              "isRightToLeft": {
                "closure_uid_118192521": {}
              },
              "isSelected": {
                "closure_uid_118192521": {}
              },
              "isUserCollapsible": {
                "closure_uid_118192521": {}
              },
              "onClick_": function () {},
              "onKeyDown": function () {},
              "onMouseDown": function () {},
              "onSizeChanged": function () {},
              "render": {
                "closure_uid_118192521": {}
              },
              "renderBefore": {
                "closure_uid_118192521": {}
              },
              "render_": {
                "closure_uid_118192521": {}
              },
              "resizeToolbox_": function () {},
              "select": {
                "closure_uid_118192521": {}
              },
              "selectChild": {
                "closure_uid_118192521": {}
              },
              "selectFirst": {
                "closure_uid_118192521": {}
              },
              "selectNext": {
                "closure_uid_118192521": {}
              },
              "selectParent": {
                "closure_uid_118192521": {}
              },
              "selectPrevious": {
                "closure_uid_118192521": {}
              },
              "setDepth_": {
                "closure_uid_118192521": {}
              },
              "setElementInternal": {
                "closure_uid_118192521": {}
              },
              "setExpanded": {
                "closure_uid_118192521": {}
              },
              "setExpandedInternal": {
                "closure_uid_118192521": {}
              },
              "setParent": {
                "closure_uid_118192521": {}
              },
              "setRightToLeft": {
                "closure_uid_118192521": {}
              },
              "setSelectedInternal": {
                "closure_uid_118192521": {}
              },
              "setText": {
                "closure_uid_118192521": {}
              },
              "setTreeInternal": {
                "closure_uid_118192521": {}
              },
              "toDom": {
                "closure_uid_118192521": {}
              },
              "toggle": {
                "closure_uid_118192521": {}
              },
              "updateExpandIcon": {
                "closure_uid_118192521": {}
              },
              "updateIcon_": {
                "closure_uid_118192521": {}
              },
              "updateRow": {
                "closure_uid_118192521": {}
              }
            }
          }
        },
        "Tooltip": {
          "DIV": {},
          "HOVER_MS": {},
          "LIMIT": {},
          "MARGINS": {},
          "OFFSET_X": {},
          "OFFSET_Y": {},
          "RADIUS_OK": {},
          "bindMouseEvents": function () {},
          "block": function () {},
          "blocked_": {},
          "createDom": function () {},
          "element_": {},
          "hide": function () {},
          "lastX_": {},
          "lastY_": {},
          "mouseOutPid_": {},
          "onMouseMove_": function () {},
          "onMouseOut_": function () {},
          "onMouseOver_": function () {},
          "poisonedElement_": {},
          "showPid_": {},
          "show_": function () {},
          "unblock": function () {},
          "visible": {}
        },
        "Touch": {
          "TOUCH_ENABLED": {},
          "TOUCH_MAP": {},
          "checkTouchIdentifier": function () {},
          "clearTouchIdentifier": function () {},
          "getTouchIdentifierFromEvent": function () {},
          "isMouseOrTouchEvent": function () {},
          "isTouchEvent": function () {},
          "setClientFromTouch": function () {},
          "shouldHandleEvent": function () {},
          "splitEventByTouches": function () {},
          "touchIdentifier_": {}
        },
        "TouchGesture": {
          "ZOOM_IN_MULTIPLIER": {},
          "ZOOM_OUT_MULTIPLIER": {},
          "superClass_": {
            "bindMouseEvents": function () {},
            "bringBlockToFront_": function () {},
            "cancel": function () {},
            "dispose": function () {},
            "doBlockClick_": function () {},
            "doBubbleClick_": function () {},
            "doFieldClick_": function () {},
            "doStart": function () {},
            "doWorkspaceClick_": function () {},
            "getInsertionMarkers": function () {},
            "handleBlockStart": function () {},
            "handleBubbleStart": function () {},
            "handleFlyoutStart": function () {},
            "handleMove": function () {},
            "handleRightClick": function () {},
            "handleUp": function () {},
            "handleWsStart": function () {},
            "hasStarted": function () {},
            "isBlockClick_": function () {},
            "isBubbleClick_": function () {},
            "isDragging": function () {},
            "isFieldClick_": function () {},
            "isWorkspaceClick_": function () {},
            "setStartBlock": function () {},
            "setStartBubble": function () {},
            "setStartField": function () {},
            "setStartFlyout_": function () {},
            "setStartWorkspace_": function () {},
            "setTargetBlock_": function () {},
            "startDraggingBlock_": function () {},
            "startDraggingBubble_": function () {},
            "updateDragDelta_": function () {},
            "updateFromEvent_": function () {},
            "updateIsDraggingBlock_": function () {},
            "updateIsDraggingBubble_": function () {},
            "updateIsDraggingFromFlyout_": function () {},
            "updateIsDraggingWorkspace_": function () {},
            "updateIsDragging_": function () {}
          }
        },
        "Trashcan": function () {},
        "VARIABLE_CATEGORY_NAME": {},
        "VARIABLE_DYNAMIC_CATEGORY_NAME": {},
        "VERSION": {},
        "VariableMap": function () {},
        "VariableModel": {
          "compareByName": function () {}
        },
        "Variables": {
          "ALL_DEVELOPER_VARS_WARNINGS_BY_BLOCK_TYPE_": {},
          "NAME_TYPE": {},
          "allDeveloperVariables": function () {},
          "allUsedVarModels": function () {},
          "allUsedVariables": function () {},
          "createVariable": function () {},
          "createVariableButtonHandler": function () {},
          "createVariable_": function () {},
          "flyoutCategory": function () {},
          "flyoutCategoryBlocks": function () {},
          "generateUniqueName": function () {},
          "generateVariableFieldDom": function () {},
          "getAddedVariables": function () {},
          "getOrCreateVariablePackage": function () {},
          "getVariable": function () {},
          "nameUsedWithAnyType_": function () {},
          "nameUsedWithOtherType_": function () {},
          "promptName": function () {},
          "renameVariable": function () {}
        },
        "VariablesDynamic": {
          "flyoutCategory": function () {},
          "flyoutCategoryBlocks": function () {},
          "onCreateVariableButtonClick_Colour": function () {},
          "onCreateVariableButtonClick_Number": function () {},
          "onCreateVariableButtonClick_String": function () {}
        },
        "VerticalFlyout": {
          "superClass_": {
            "CORNER_RADIUS": {},
            "GAP_X": {},
            "GAP_Y": {},
            "MARGIN": {},
            "SCROLLBAR_PADDING": {},
            "addBlockListeners_": function () {},
            "autoClose": {},
            "blockMouseDown_": function () {},
            "clearOldBlocks_": function () {},
            "containerVisible_": {},
            "createBlock": function () {},
            "createDom": function () {},
            "createRect_": function () {},
            "dispose": function () {},
            "dragAngleRange_": {},
            "filterForCapacity_": function () {},
            "getHeight": function () {},
            "getWidth": function () {},
            "getWorkspace": function () {},
            "height_": {},
            "hide": function () {},
            "init": function () {},
            "initFlyoutButton_": function () {},
            "isBlockCreatable_": function () {},
            "isScrollable": function () {},
            "isVisible": function () {},
            "isVisible_": {},
            "moveRectToBlock_": function () {},
            "onMouseDown_": function () {},
            "placeNewBlock_": function () {},
            "positionAt_": function () {},
            "reflow": function () {},
            "setContainerVisible": function () {},
            "setVisible": function () {},
            "show": function () {},
            "updateDisplay_": function () {},
            "width_": {}
          }
        },
        "Warning": {
          "superClass_": {
            "SIZE": {},
            "bubble_": {},
            "collapseHidden": {},
            "computeIconLocation": function () {},
            "createIcon": function () {},
            "dispose": function () {},
            "getCorrectedSize": function () {},
            "getIconLocation": function () {},
            "iconClick_": function () {},
            "iconXY_": {},
            "isVisible": function () {},
            "setIconLocation": function () {},
            "updateColour": function () {},
            "updateEditable": function () {}
          },
          "textToDom_": function () {}
        },
        "WidgetDiv": {
          "DIV": {},
          "calculateX_": function () {},
          "calculateY_": function () {},
          "createDom": function () {},
          "dispose_": {},
          "hide": function () {},
          "hideIfOwner": function () {},
          "isVisible": function () {},
          "owner_": {},
          "positionInternal_": function () {},
          "positionWithAnchor": function () {},
          "show": function () {}
        },
        "Workspace": {
          "SCAN_ANGLE": {},
          "WorkspaceDB_": {},
          "getAll": function () {},
          "getById": function () {}
        },
        "WorkspaceAudio": function () {},
        "WorkspaceDragSurfaceSvg": function () {},
        "WorkspaceDragger": function () {},
        "WorkspaceSvg": {
          "getContentDimensionsBounded_": function () {},
          "getContentDimensionsExact_": function () {},
          "getContentDimensions_": function () {},
          "getDimensionsPx_": function () {},
          "getTopLevelWorkspaceMetrics_": function () {},
          "setTopLevelWorkspaceMetrics_": function () {},
          "superClass_": {
            "MAX_UNDO": {},
            "addChangeListener": function () {},
            "addTopBlock": function () {},
            "addTopComment": function () {},
            "addTypedBlock": function () {},
            "allInputsFilled": function () {},
            "clear": function () {},
            "clearUndo": function () {},
            "connectionDBList": {},
            "createPotentialVariableMap": function () {},
            "createVariable": function () {},
            "deleteVariableById": function () {},
            "deleteVariableInternal_": function () {},
            "dispose": function () {},
            "fireChangeListener": function () {},
            "getAllBlocks": function () {},
            "getAllVariables": function () {},
            "getBlockById": function () {},
            "getBlocksByType": function () {},
            "getCommentById": function () {},
            "getCursor": function () {},
            "getMarker": function () {},
            "getPotentialVariableMap": function () {},
            "getTheme": function () {},
            "getThemeManager": function () {},
            "getTopBlocks": function () {},
            "getTopComments": function () {},
            "getVariable": function () {},
            "getVariableById": function () {},
            "getVariableMap": function () {},
            "getVariableTypes": function () {},
            "getVariableUsesById": function () {},
            "getVariablesOfType": function () {},
            "getWidth": function () {},
            "hasBlockLimits": function () {},
            "isCapacityAvailable": function () {},
            "isClearing": {},
            "newBlock": function () {},
            "refreshTheme": function () {},
            "remainingCapacity": function () {},
            "remainingCapacityOfType": function () {},
            "removeChangeListener": function () {},
            "removeTopBlock": function () {},
            "removeTopComment": function () {},
            "removeTypedBlock": function () {},
            "renameVariableById": function () {},
            "rendered": {},
            "setCursor": function () {},
            "setMarker": function () {},
            "setTheme": function () {},
            "sortObjects_": function () {},
            "undo": function () {},
            "updateBlockStyles_": function () {},
            "variableIndexOf": function () {}
          }
        },
        "Xml": {
          "allFieldsToDom_": function () {},
          "appendDomToWorkspace": function () {},
          "blockToDom": function () {},
          "blockToDomWithXY": function () {},
          "clearWorkspaceAndLoadFromXml": function () {},
          "cloneShadow_": function () {},
          "deleteNext": function () {},
          "domToBlock": function () {},
          "domToBlockHeadless_": function () {},
          "domToField_": function () {},
          "domToPrettyText": function () {},
          "domToText": function () {},
          "domToVariables": function () {},
          "domToWorkspace": function () {},
          "fieldToDom_": function () {},
          "textToDom": function () {},
          "variablesToDom": function () {},
          "workspaceToDom": function () {}
        },
        "ZoomControls": function () {},
        "alert": function () {},
        "bindEventWithChecks_": function () {},
        "bindEvent_": function () {},
        "blockAnimations": {
          "connectionUiEffect": function () {},
          "connectionUiStep_": function () {},
          "disconnectGroup_": {},
          "disconnectPid_": {},
          "disconnectUiEffect": function () {},
          "disconnectUiStep_": function () {},
          "disconnectUiStop": function () {},
          "disposeUiEffect": function () {},
          "disposeUiStep_": function () {}
        },
        "blockRendering": {
          "BottomRow": {
            "superClass_": {
              "endsWithElemSpacer": function () {},
              "getFirstSpacer": function () {},
              "getLastInput": function () {},
              "getLastSpacer": function () {},
              "measure": function () {},
              "startsWithElemSpacer": function () {}
            }
          },
          "Connection": {
            "closure_uid_118192521": {},
            "superClass_": {
              "closure_uid_118192521": {}
            }
          },
          "ConstantProvider": function () {},
          "Drawer": function () {},
          "ExternalValueInput": {
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "constructor": {
                    "closure_uid_118192521": {},
                    "superClass_": {
                      "closure_uid_118192521": {}
                    }
                  }
                }
              }
            }
          },
          "Field": {
            "superClass_": {
              "closure_uid_118192521": {}
            }
          },
          "Hat": {
            "superClass_": {
              "closure_uid_118192521": {}
            }
          },
          "IPathObject": function () {},
          "Icon": {
            "superClass_": {
              "closure_uid_118192521": {}
            }
          },
          "InRowSpacer": {
            "superClass_": {
              "closure_uid_118192521": {}
            }
          },
          "InlineInput": {
            "closure_uid_118192521": {},
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "constructor": {
                    "closure_uid_118192521": {},
                    "superClass_": {
                      "closure_uid_118192521": {}
                    }
                  }
                }
              }
            }
          },
          "InputConnection": {
            "closure_uid_118192521": {},
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {}
                }
              }
            }
          },
          "InputRow": {
            "superClass_": {
              "endsWithElemSpacer": function () {},
              "getFirstSpacer": function () {},
              "getLastInput": function () {},
              "getLastSpacer": function () {},
              "measure": function () {},
              "startsWithElemSpacer": function () {}
            }
          },
          "JaggedEdge": {
            "superClass_": {
              "closure_uid_118192521": {}
            }
          },
          "Measurable": function () {},
          "NextConnection": {
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {}
                }
              }
            }
          },
          "OutputConnection": {
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {}
                }
              }
            }
          },
          "PathObject": function () {},
          "PreviousConnection": {
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {}
                }
              }
            }
          },
          "RenderInfo": function () {},
          "Renderer": function () {},
          "RoundCorner": {
            "superClass_": {
              "closure_uid_118192521": {}
            }
          },
          "Row": function () {},
          "SpacerRow": {
            "superClass_": {
              "endsWithElemSpacer": function () {},
              "getFirstSpacer": function () {},
              "getLastInput": function () {},
              "getLastSpacer": function () {},
              "measure": function () {},
              "startsWithElemSpacer": function () {}
            }
          },
          "SquareCorner": {
            "superClass_": {
              "closure_uid_118192521": {}
            }
          },
          "StatementInput": {
            "closure_uid_118192521": {},
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "constructor": {
                    "closure_uid_118192521": {},
                    "superClass_": {
                      "closure_uid_118192521": {}
                    }
                  }
                }
              }
            }
          },
          "TopRow": {
            "superClass_": {
              "endsWithElemSpacer": function () {},
              "getFirstSpacer": function () {},
              "getLastInput": function () {},
              "getLastSpacer": function () {},
              "measure": function () {},
              "startsWithElemSpacer": function () {}
            }
          },
          "Types": {
            "BETWEEN_ROW_SPACER": {},
            "BOTTOM_ROW": {},
            "CONNECTION": {},
            "CORNER": {},
            "EXTERNAL_VALUE_INPUT": {},
            "FIELD": {},
            "HAT": {},
            "ICON": {},
            "INLINE_INPUT": {},
            "INPUT": {},
            "INPUT_ROW": {},
            "IN_ROW_SPACER": {},
            "JAGGED_EDGE": {},
            "LEFT_CORNER": {},
            "LEFT_ROUND_CORNER": {},
            "LEFT_SQUARE_CORNER": {},
            "NEXT_CONNECTION": {},
            "NONE": {},
            "OUTPUT_CONNECTION": {},
            "PREVIOUS_CONNECTION": {},
            "RIGHT_CORNER": {},
            "RIGHT_ROUND_CORNER": {},
            "RIGHT_SQUARE_CORNER": {},
            "ROW": {},
            "SPACER": {},
            "STATEMENT_INPUT": {},
            "TOP_ROW": {},
            "getType": function () {},
            "isBetweenRowSpacer": function () {},
            "isBottomRow": function () {},
            "isCorner": function () {},
            "isExternalInput": function () {},
            "isField": function () {},
            "isHat": function () {},
            "isIcon": function () {},
            "isInRowSpacer": function () {},
            "isInlineInput": function () {},
            "isInput": function () {},
            "isInputRow": function () {},
            "isJaggedEdge": function () {},
            "isLeftRoundedCorner": function () {},
            "isLeftSquareCorner": function () {},
            "isNextConnection": function () {},
            "isPreviousConnection": function () {},
            "isPreviousOrNextConnection": function () {},
            "isRightRoundedCorner": function () {},
            "isRightSquareCorner": function () {},
            "isRow": function () {},
            "isSpacer": function () {},
            "isStatementInput": function () {},
            "isTopOrBottomRow": function () {},
            "isTopRow": function () {},
            "nextTypeValue_": {}
          },
          "init": function () {},
          "register": function () {},
          "rendererMap_": {
            "geras": {
              "superClass_": {
                "getConstants": function () {},
                "init": function () {},
                "makeConstants_": function () {},
                "makeCursorDrawer": function () {},
                "makeDebugger_": function () {},
                "makeDrawer_": function () {},
                "makeHighlightConstants_": function () {},
                "makePathObject": function () {},
                "makeRenderInfo_": function () {},
                "render": function () {}
              }
            }
          },
          "startDebugger": function () {},
          "stopDebugger": function () {},
          "unregister": function () {},
          "useDebugger": {}
        },
        "cache3dSupported_": {},
        "checkBlockColourConstant_": function () {},
        "checkBlockColourConstants": function () {},
        "clipboardSource_": {},
        "clipboardTypeCounts_": {},
        "clipboardXml_": {},
        "confirm": function () {},
        "constants": {},
        "copy_": function () {},
        "createDom_": function () {},
        "createMainWorkspace_": function () {},
        "cursor": {},
        "defineBlocksWithJsonArray": function () {},
        "draggingConnections_": {},
        "duplicate_": function () {},
        "fieldRegistry": {
          "fromJson": function () {},
          "register": function () {},
          "typeMap_": {
            "field_angle": {
              "CLOCKWISE": {},
              "HALF": {},
              "OFFSET": {},
              "RADIUS": {},
              "ROUND": {},
              "WRAP": {},
              "fromJson": function () {},
              "superClass_": {
                "CURSOR": {},
                "EDITABLE": {},
                "SERIALIZABLE": {},
                "bindEvents_": function () {},
                "bindInputEvents_": function () {},
                "callValidator": function () {},
                "classValidator": function () {},
                "clickTarget_": {},
                "configure_": function () {},
                "constructor": {
                  "BORDERRADIUS": {},
                  "FONTSIZE": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "nonnegativeIntegerValidator": {
                    "closure_uid_118192521": {}
                  },
                  "numberValidator": {
                    "closure_uid_118192521": {}
                  },
                  "superClass_": {
                    "EDITABLE": {},
                    "SERIALIZABLE": {},
                    "bindEvents_": {
                      "closure_uid_118192521": {}
                    },
                    "callValidator": {
                      "closure_uid_118192521": {}
                    },
                    "classValidator": {
                      "closure_uid_118192521": {}
                    },
                    "clickTarget_": {},
                    "closure_uid_118192521": {},
                    "configure_": {
                      "closure_uid_118192521": {}
                    },
                    "createBorderRect_": {
                      "closure_uid_118192521": {}
                    },
                    "createTextElement_": {
                      "closure_uid_118192521": {}
                    },
                    "dispose": {
                      "closure_uid_118192521": {}
                    },
                    "disposed": {},
                    "doClassValidation_": {
                      "closure_uid_118192521": {}
                    },
                    "doValueInvalid_": {
                      "closure_uid_118192521": {}
                    },
                    "doValueUpdate_": {
                      "closure_uid_118192521": {}
                    },
                    "forceRerender": {
                      "closure_uid_118192521": {}
                    },
                    "fromXml": {
                      "closure_uid_118192521": {}
                    },
                    "getAbsoluteXY_": {
                      "closure_uid_118192521": {}
                    },
                    "getClickTarget_": {
                      "closure_uid_118192521": {}
                    },
                    "getDisplayText_": {
                      "closure_uid_118192521": {}
                    },
                    "getFlipRtl": {
                      "closure_uid_118192521": {}
                    },
                    "getParentInput": {
                      "closure_uid_118192521": {}
                    },
                    "getScaledBBox_": {
                      "closure_uid_118192521": {}
                    },
                    "getSize": {
                      "closure_uid_118192521": {}
                    },
                    "getSourceBlock": {
                      "closure_uid_118192521": {}
                    },
                    "getSvgRoot": {
                      "closure_uid_118192521": {}
                    },
                    "getText": {
                      "closure_uid_118192521": {}
                    },
                    "getValidator": {
                      "closure_uid_118192521": {}
                    },
                    "getValue": {
                      "closure_uid_118192521": {}
                    },
                    "init": {
                      "closure_uid_118192521": {}
                    },
                    "initModel": {
                      "closure_uid_118192521": {}
                    },
                    "initView": {
                      "closure_uid_118192521": {}
                    },
                    "isClickable": {
                      "closure_uid_118192521": {}
                    },
                    "isCurrentlyEditable": {
                      "closure_uid_118192521": {}
                    },
                    "isDirty_": {},
                    "isSerializable": {
                      "closure_uid_118192521": {}
                    },
                    "isTabNavigable": {
                      "closure_uid_118192521": {}
                    },
                    "isVisible": {
                      "closure_uid_118192521": {}
                    },
                    "markDirty": {
                      "closure_uid_118192521": {}
                    },
                    "maxDisplayLength": {},
                    "name": {},
                    "onBlocklyAction": {
                      "closure_uid_118192521": {}
                    },
                    "onMouseDown_": {
                      "closure_uid_118192521": {}
                    },
                    "processValidation_": {
                      "closure_uid_118192521": {}
                    },
                    "referencesVariables": {
                      "closure_uid_118192521": {}
                    },
                    "render_": {
                      "closure_uid_118192521": {}
                    },
                    "setCursorSvg": {
                      "closure_uid_118192521": {}
                    },
                    "setMarkerSvg": {
                      "closure_uid_118192521": {}
                    },
                    "setSourceBlock": {
                      "closure_uid_118192521": {}
                    },
                    "setText": {
                      "closure_uid_118192521": {}
                    },
                    "setTooltip": {
                      "closure_uid_118192521": {}
                    },
                    "setValidator": {
                      "closure_uid_118192521": {}
                    },
                    "setValue": {
                      "closure_uid_118192521": {}
                    },
                    "setVisible": {
                      "closure_uid_118192521": {}
                    },
                    "sourceBlock_": {},
                    "toXml": {
                      "closure_uid_118192521": {}
                    },
                    "updateColour": {
                      "closure_uid_118192521": {}
                    },
                    "updateEditable": {
                      "closure_uid_118192521": {}
                    },
                    "updateSize_": {
                      "closure_uid_118192521": {}
                    },
                    "updateWidth": {
                      "closure_uid_118192521": {}
                    },
                    "visible_": {}
                  }
                },
                "createBorderRect_": {
                  "closure_uid_118192521": {}
                },
                "createTextElement_": {
                  "closure_uid_118192521": {}
                },
                "dispose": {
                  "closure_uid_118192521": {}
                },
                "disposed": {},
                "doClassValidation_": function () {},
                "doValueInvalid_": function () {},
                "doValueUpdate_": function () {},
                "forceRerender": {
                  "closure_uid_118192521": {}
                },
                "fromXml": {
                  "closure_uid_118192521": {}
                },
                "getAbsoluteXY_": {
                  "closure_uid_118192521": {}
                },
                "getClickTarget_": {
                  "closure_uid_118192521": {}
                },
                "getDisplayText_": {
                  "closure_uid_118192521": {}
                },
                "getEditorText_": function () {},
                "getFlipRtl": {
                  "closure_uid_118192521": {}
                },
                "getParentInput": {
                  "closure_uid_118192521": {}
                },
                "getScaledBBox_": {
                  "closure_uid_118192521": {}
                },
                "getSize": {
                  "closure_uid_118192521": {}
                },
                "getSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "getSvgRoot": {
                  "closure_uid_118192521": {}
                },
                "getText": {
                  "closure_uid_118192521": {}
                },
                "getText_": function () {},
                "getValidator": {
                  "closure_uid_118192521": {}
                },
                "getValue": {
                  "closure_uid_118192521": {}
                },
                "getValueFromEditorText_": function () {},
                "init": {
                  "closure_uid_118192521": {}
                },
                "initModel": {
                  "closure_uid_118192521": {}
                },
                "initView": {
                  "closure_uid_118192521": {}
                },
                "isClickable": {
                  "closure_uid_118192521": {}
                },
                "isCurrentlyEditable": {
                  "closure_uid_118192521": {}
                },
                "isDirty_": {},
                "isSerializable": {
                  "closure_uid_118192521": {}
                },
                "isTabNavigable": function () {},
                "isVisible": {
                  "closure_uid_118192521": {}
                },
                "markDirty": {
                  "closure_uid_118192521": {}
                },
                "maxDisplayLength": {},
                "name": {},
                "onBlocklyAction": {
                  "closure_uid_118192521": {}
                },
                "onHtmlInputChange_": function () {},
                "onHtmlInputKeyDown_": function () {},
                "onMouseDown_": {
                  "closure_uid_118192521": {}
                },
                "processValidation_": {
                  "closure_uid_118192521": {}
                },
                "referencesVariables": {
                  "closure_uid_118192521": {}
                },
                "render_": function () {},
                "resizeEditor_": function () {},
                "setCursorSvg": {
                  "closure_uid_118192521": {}
                },
                "setEditorValue_": function () {},
                "setMarkerSvg": {
                  "closure_uid_118192521": {}
                },
                "setSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "setSpellcheck": function () {},
                "setText": {
                  "closure_uid_118192521": {}
                },
                "setTooltip": {
                  "closure_uid_118192521": {}
                },
                "setValidator": {
                  "closure_uid_118192521": {}
                },
                "setValue": {
                  "closure_uid_118192521": {}
                },
                "setVisible": {
                  "closure_uid_118192521": {}
                },
                "showEditor_": function () {},
                "showInlineEditor_": function () {},
                "showPromptEditor_": function () {},
                "sourceBlock_": {},
                "toXml": {
                  "closure_uid_118192521": {}
                },
                "unbindInputEvents_": function () {},
                "updateColour": {
                  "closure_uid_118192521": {}
                },
                "updateEditable": {
                  "closure_uid_118192521": {}
                },
                "updateSize_": {
                  "closure_uid_118192521": {}
                },
                "updateWidth": {
                  "closure_uid_118192521": {}
                },
                "visible_": {},
                "widgetCreate_": function () {},
                "widgetDispose_": function () {}
              }
            },
            "field_checkbox": {
              "CHECK_CHAR": {},
              "CHECK_X_OFFSET": {},
              "CHECK_Y_OFFSET": {},
              "WIDTH": {},
              "fromJson": function () {},
              "superClass_": {
                "EDITABLE": {},
                "SERIALIZABLE": {},
                "bindEvents_": {
                  "closure_uid_118192521": {}
                },
                "callValidator": {
                  "closure_uid_118192521": {}
                },
                "classValidator": {
                  "closure_uid_118192521": {}
                },
                "clickTarget_": {},
                "closure_uid_118192521": {},
                "configure_": {
                  "closure_uid_118192521": {}
                },
                "createBorderRect_": {
                  "closure_uid_118192521": {}
                },
                "createTextElement_": {
                  "closure_uid_118192521": {}
                },
                "dispose": {
                  "closure_uid_118192521": {}
                },
                "disposed": {},
                "doClassValidation_": {
                  "closure_uid_118192521": {}
                },
                "doValueInvalid_": {
                  "closure_uid_118192521": {}
                },
                "doValueUpdate_": {
                  "closure_uid_118192521": {}
                },
                "forceRerender": {
                  "closure_uid_118192521": {}
                },
                "fromXml": {
                  "closure_uid_118192521": {}
                },
                "getAbsoluteXY_": {
                  "closure_uid_118192521": {}
                },
                "getClickTarget_": {
                  "closure_uid_118192521": {}
                },
                "getDisplayText_": {
                  "closure_uid_118192521": {}
                },
                "getFlipRtl": {
                  "closure_uid_118192521": {}
                },
                "getParentInput": {
                  "closure_uid_118192521": {}
                },
                "getScaledBBox_": {
                  "closure_uid_118192521": {}
                },
                "getSize": {
                  "closure_uid_118192521": {}
                },
                "getSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "getSvgRoot": {
                  "closure_uid_118192521": {}
                },
                "getText": {
                  "closure_uid_118192521": {}
                },
                "getValidator": {
                  "closure_uid_118192521": {}
                },
                "getValue": {
                  "closure_uid_118192521": {}
                },
                "init": {
                  "closure_uid_118192521": {}
                },
                "initModel": {
                  "closure_uid_118192521": {}
                },
                "initView": {
                  "closure_uid_118192521": {}
                },
                "isClickable": {
                  "closure_uid_118192521": {}
                },
                "isCurrentlyEditable": {
                  "closure_uid_118192521": {}
                },
                "isDirty_": {},
                "isSerializable": {
                  "closure_uid_118192521": {}
                },
                "isTabNavigable": {
                  "closure_uid_118192521": {}
                },
                "isVisible": {
                  "closure_uid_118192521": {}
                },
                "markDirty": {
                  "closure_uid_118192521": {}
                },
                "maxDisplayLength": {},
                "name": {},
                "onBlocklyAction": {
                  "closure_uid_118192521": {}
                },
                "onMouseDown_": {
                  "closure_uid_118192521": {}
                },
                "processValidation_": {
                  "closure_uid_118192521": {}
                },
                "referencesVariables": {
                  "closure_uid_118192521": {}
                },
                "render_": {
                  "closure_uid_118192521": {}
                },
                "setCursorSvg": {
                  "closure_uid_118192521": {}
                },
                "setMarkerSvg": {
                  "closure_uid_118192521": {}
                },
                "setSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "setText": {
                  "closure_uid_118192521": {}
                },
                "setTooltip": {
                  "closure_uid_118192521": {}
                },
                "setValidator": {
                  "closure_uid_118192521": {}
                },
                "setValue": {
                  "closure_uid_118192521": {}
                },
                "setVisible": {
                  "closure_uid_118192521": {}
                },
                "sourceBlock_": {},
                "toXml": {
                  "closure_uid_118192521": {}
                },
                "updateColour": {
                  "closure_uid_118192521": {}
                },
                "updateEditable": {
                  "closure_uid_118192521": {}
                },
                "updateSize_": {
                  "closure_uid_118192521": {}
                },
                "updateWidth": {
                  "closure_uid_118192521": {}
                },
                "visible_": {}
              }
            },
            "field_colour": {
              "COLOURS": {},
              "COLUMNS": {},
              "DEFAULT_HEIGHT": {},
              "DEFAULT_WIDTH": {},
              "TITLES": {},
              "fromJson": function () {},
              "superClass_": {
                "EDITABLE": {},
                "SERIALIZABLE": {},
                "bindEvents_": {
                  "closure_uid_118192521": {}
                },
                "callValidator": {
                  "closure_uid_118192521": {}
                },
                "classValidator": {
                  "closure_uid_118192521": {}
                },
                "clickTarget_": {},
                "closure_uid_118192521": {},
                "configure_": {
                  "closure_uid_118192521": {}
                },
                "createBorderRect_": {
                  "closure_uid_118192521": {}
                },
                "createTextElement_": {
                  "closure_uid_118192521": {}
                },
                "dispose": {
                  "closure_uid_118192521": {}
                },
                "disposed": {},
                "doClassValidation_": {
                  "closure_uid_118192521": {}
                },
                "doValueInvalid_": {
                  "closure_uid_118192521": {}
                },
                "doValueUpdate_": {
                  "closure_uid_118192521": {}
                },
                "forceRerender": {
                  "closure_uid_118192521": {}
                },
                "fromXml": {
                  "closure_uid_118192521": {}
                },
                "getAbsoluteXY_": {
                  "closure_uid_118192521": {}
                },
                "getClickTarget_": {
                  "closure_uid_118192521": {}
                },
                "getDisplayText_": {
                  "closure_uid_118192521": {}
                },
                "getFlipRtl": {
                  "closure_uid_118192521": {}
                },
                "getParentInput": {
                  "closure_uid_118192521": {}
                },
                "getScaledBBox_": {
                  "closure_uid_118192521": {}
                },
                "getSize": {
                  "closure_uid_118192521": {}
                },
                "getSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "getSvgRoot": {
                  "closure_uid_118192521": {}
                },
                "getText": {
                  "closure_uid_118192521": {}
                },
                "getValidator": {
                  "closure_uid_118192521": {}
                },
                "getValue": {
                  "closure_uid_118192521": {}
                },
                "init": {
                  "closure_uid_118192521": {}
                },
                "initModel": {
                  "closure_uid_118192521": {}
                },
                "initView": {
                  "closure_uid_118192521": {}
                },
                "isClickable": {
                  "closure_uid_118192521": {}
                },
                "isCurrentlyEditable": {
                  "closure_uid_118192521": {}
                },
                "isDirty_": {},
                "isSerializable": {
                  "closure_uid_118192521": {}
                },
                "isTabNavigable": {
                  "closure_uid_118192521": {}
                },
                "isVisible": {
                  "closure_uid_118192521": {}
                },
                "markDirty": {
                  "closure_uid_118192521": {}
                },
                "maxDisplayLength": {},
                "name": {},
                "onBlocklyAction": {
                  "closure_uid_118192521": {}
                },
                "onMouseDown_": {
                  "closure_uid_118192521": {}
                },
                "processValidation_": {
                  "closure_uid_118192521": {}
                },
                "referencesVariables": {
                  "closure_uid_118192521": {}
                },
                "render_": {
                  "closure_uid_118192521": {}
                },
                "setCursorSvg": {
                  "closure_uid_118192521": {}
                },
                "setMarkerSvg": {
                  "closure_uid_118192521": {}
                },
                "setSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "setText": {
                  "closure_uid_118192521": {}
                },
                "setTooltip": {
                  "closure_uid_118192521": {}
                },
                "setValidator": {
                  "closure_uid_118192521": {}
                },
                "setValue": {
                  "closure_uid_118192521": {}
                },
                "setVisible": {
                  "closure_uid_118192521": {}
                },
                "sourceBlock_": {},
                "toXml": {
                  "closure_uid_118192521": {}
                },
                "updateColour": {
                  "closure_uid_118192521": {}
                },
                "updateEditable": {
                  "closure_uid_118192521": {}
                },
                "updateSize_": {
                  "closure_uid_118192521": {}
                },
                "updateWidth": {
                  "closure_uid_118192521": {}
                },
                "visible_": {}
              }
            },
            "field_dropdown": {
              "ARROW_CHAR": {},
              "CHECKMARK_OVERHANG": {},
              "IMAGE_Y_OFFSET": {},
              "IMAGE_Y_PADDING": {},
              "MAX_MENU_HEIGHT_VH": {},
              "applyTrim_": function () {},
              "fromJson": function () {},
              "superClass_": {
                "EDITABLE": {},
                "SERIALIZABLE": {},
                "bindEvents_": {
                  "closure_uid_118192521": {}
                },
                "callValidator": {
                  "closure_uid_118192521": {}
                },
                "classValidator": {
                  "closure_uid_118192521": {}
                },
                "clickTarget_": {},
                "closure_uid_118192521": {},
                "configure_": {
                  "closure_uid_118192521": {}
                },
                "createBorderRect_": {
                  "closure_uid_118192521": {}
                },
                "createTextElement_": {
                  "closure_uid_118192521": {}
                },
                "dispose": {
                  "closure_uid_118192521": {}
                },
                "disposed": {},
                "doClassValidation_": {
                  "closure_uid_118192521": {}
                },
                "doValueInvalid_": {
                  "closure_uid_118192521": {}
                },
                "doValueUpdate_": {
                  "closure_uid_118192521": {}
                },
                "forceRerender": {
                  "closure_uid_118192521": {}
                },
                "fromXml": {
                  "closure_uid_118192521": {}
                },
                "getAbsoluteXY_": {
                  "closure_uid_118192521": {}
                },
                "getClickTarget_": {
                  "closure_uid_118192521": {}
                },
                "getDisplayText_": {
                  "closure_uid_118192521": {}
                },
                "getFlipRtl": {
                  "closure_uid_118192521": {}
                },
                "getParentInput": {
                  "closure_uid_118192521": {}
                },
                "getScaledBBox_": {
                  "closure_uid_118192521": {}
                },
                "getSize": {
                  "closure_uid_118192521": {}
                },
                "getSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "getSvgRoot": {
                  "closure_uid_118192521": {}
                },
                "getText": {
                  "closure_uid_118192521": {}
                },
                "getValidator": {
                  "closure_uid_118192521": {}
                },
                "getValue": {
                  "closure_uid_118192521": {}
                },
                "init": {
                  "closure_uid_118192521": {}
                },
                "initModel": {
                  "closure_uid_118192521": {}
                },
                "initView": {
                  "closure_uid_118192521": {}
                },
                "isClickable": {
                  "closure_uid_118192521": {}
                },
                "isCurrentlyEditable": {
                  "closure_uid_118192521": {}
                },
                "isDirty_": {},
                "isSerializable": {
                  "closure_uid_118192521": {}
                },
                "isTabNavigable": {
                  "closure_uid_118192521": {}
                },
                "isVisible": {
                  "closure_uid_118192521": {}
                },
                "markDirty": {
                  "closure_uid_118192521": {}
                },
                "maxDisplayLength": {},
                "name": {},
                "onBlocklyAction": {
                  "closure_uid_118192521": {}
                },
                "onMouseDown_": {
                  "closure_uid_118192521": {}
                },
                "processValidation_": {
                  "closure_uid_118192521": {}
                },
                "referencesVariables": {
                  "closure_uid_118192521": {}
                },
                "render_": {
                  "closure_uid_118192521": {}
                },
                "setCursorSvg": {
                  "closure_uid_118192521": {}
                },
                "setMarkerSvg": {
                  "closure_uid_118192521": {}
                },
                "setSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "setText": {
                  "closure_uid_118192521": {}
                },
                "setTooltip": {
                  "closure_uid_118192521": {}
                },
                "setValidator": {
                  "closure_uid_118192521": {}
                },
                "setValue": {
                  "closure_uid_118192521": {}
                },
                "setVisible": {
                  "closure_uid_118192521": {}
                },
                "sourceBlock_": {},
                "toXml": {
                  "closure_uid_118192521": {}
                },
                "updateColour": {
                  "closure_uid_118192521": {}
                },
                "updateEditable": {
                  "closure_uid_118192521": {}
                },
                "updateSize_": {
                  "closure_uid_118192521": {}
                },
                "updateWidth": {
                  "closure_uid_118192521": {}
                },
                "visible_": {}
              },
              "validateOptions_": function () {}
            },
            "field_image": {
              "Y_PADDING": {},
              "fromJson": function () {},
              "superClass_": {
                "EDITABLE": {},
                "SERIALIZABLE": {},
                "bindEvents_": {
                  "closure_uid_118192521": {}
                },
                "callValidator": {
                  "closure_uid_118192521": {}
                },
                "classValidator": {
                  "closure_uid_118192521": {}
                },
                "clickTarget_": {},
                "closure_uid_118192521": {},
                "configure_": {
                  "closure_uid_118192521": {}
                },
                "createBorderRect_": {
                  "closure_uid_118192521": {}
                },
                "createTextElement_": {
                  "closure_uid_118192521": {}
                },
                "dispose": {
                  "closure_uid_118192521": {}
                },
                "disposed": {},
                "doClassValidation_": {
                  "closure_uid_118192521": {}
                },
                "doValueInvalid_": {
                  "closure_uid_118192521": {}
                },
                "doValueUpdate_": {
                  "closure_uid_118192521": {}
                },
                "forceRerender": {
                  "closure_uid_118192521": {}
                },
                "fromXml": {
                  "closure_uid_118192521": {}
                },
                "getAbsoluteXY_": {
                  "closure_uid_118192521": {}
                },
                "getClickTarget_": {
                  "closure_uid_118192521": {}
                },
                "getDisplayText_": {
                  "closure_uid_118192521": {}
                },
                "getFlipRtl": {
                  "closure_uid_118192521": {}
                },
                "getParentInput": {
                  "closure_uid_118192521": {}
                },
                "getScaledBBox_": {
                  "closure_uid_118192521": {}
                },
                "getSize": {
                  "closure_uid_118192521": {}
                },
                "getSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "getSvgRoot": {
                  "closure_uid_118192521": {}
                },
                "getText": {
                  "closure_uid_118192521": {}
                },
                "getValidator": {
                  "closure_uid_118192521": {}
                },
                "getValue": {
                  "closure_uid_118192521": {}
                },
                "init": {
                  "closure_uid_118192521": {}
                },
                "initModel": {
                  "closure_uid_118192521": {}
                },
                "initView": {
                  "closure_uid_118192521": {}
                },
                "isClickable": {
                  "closure_uid_118192521": {}
                },
                "isCurrentlyEditable": {
                  "closure_uid_118192521": {}
                },
                "isDirty_": {},
                "isSerializable": {
                  "closure_uid_118192521": {}
                },
                "isTabNavigable": {
                  "closure_uid_118192521": {}
                },
                "isVisible": {
                  "closure_uid_118192521": {}
                },
                "markDirty": {
                  "closure_uid_118192521": {}
                },
                "maxDisplayLength": {},
                "name": {},
                "onBlocklyAction": {
                  "closure_uid_118192521": {}
                },
                "onMouseDown_": {
                  "closure_uid_118192521": {}
                },
                "processValidation_": {
                  "closure_uid_118192521": {}
                },
                "referencesVariables": {
                  "closure_uid_118192521": {}
                },
                "render_": {
                  "closure_uid_118192521": {}
                },
                "setCursorSvg": {
                  "closure_uid_118192521": {}
                },
                "setMarkerSvg": {
                  "closure_uid_118192521": {}
                },
                "setSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "setText": {
                  "closure_uid_118192521": {}
                },
                "setTooltip": {
                  "closure_uid_118192521": {}
                },
                "setValidator": {
                  "closure_uid_118192521": {}
                },
                "setValue": {
                  "closure_uid_118192521": {}
                },
                "setVisible": {
                  "closure_uid_118192521": {}
                },
                "sourceBlock_": {},
                "toXml": {
                  "closure_uid_118192521": {}
                },
                "updateColour": {
                  "closure_uid_118192521": {}
                },
                "updateEditable": {
                  "closure_uid_118192521": {}
                },
                "updateSize_": {
                  "closure_uid_118192521": {}
                },
                "updateWidth": {
                  "closure_uid_118192521": {}
                },
                "visible_": {}
              }
            },
            "field_input": {
              "BORDERRADIUS": {},
              "FONTSIZE": {},
              "closure_uid_118192521": {},
              "fromJson": {
                "closure_uid_118192521": {}
              },
              "nonnegativeIntegerValidator": {
                "closure_uid_118192521": {}
              },
              "numberValidator": {
                "closure_uid_118192521": {}
              },
              "superClass_": {
                "EDITABLE": {},
                "SERIALIZABLE": {},
                "bindEvents_": {
                  "closure_uid_118192521": {}
                },
                "callValidator": {
                  "closure_uid_118192521": {}
                },
                "classValidator": {
                  "closure_uid_118192521": {}
                },
                "clickTarget_": {},
                "closure_uid_118192521": {},
                "configure_": {
                  "closure_uid_118192521": {}
                },
                "createBorderRect_": {
                  "closure_uid_118192521": {}
                },
                "createTextElement_": {
                  "closure_uid_118192521": {}
                },
                "dispose": {
                  "closure_uid_118192521": {}
                },
                "disposed": {},
                "doClassValidation_": {
                  "closure_uid_118192521": {}
                },
                "doValueInvalid_": {
                  "closure_uid_118192521": {}
                },
                "doValueUpdate_": {
                  "closure_uid_118192521": {}
                },
                "forceRerender": {
                  "closure_uid_118192521": {}
                },
                "fromXml": {
                  "closure_uid_118192521": {}
                },
                "getAbsoluteXY_": {
                  "closure_uid_118192521": {}
                },
                "getClickTarget_": {
                  "closure_uid_118192521": {}
                },
                "getDisplayText_": {
                  "closure_uid_118192521": {}
                },
                "getFlipRtl": {
                  "closure_uid_118192521": {}
                },
                "getParentInput": {
                  "closure_uid_118192521": {}
                },
                "getScaledBBox_": {
                  "closure_uid_118192521": {}
                },
                "getSize": {
                  "closure_uid_118192521": {}
                },
                "getSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "getSvgRoot": {
                  "closure_uid_118192521": {}
                },
                "getText": {
                  "closure_uid_118192521": {}
                },
                "getValidator": {
                  "closure_uid_118192521": {}
                },
                "getValue": {
                  "closure_uid_118192521": {}
                },
                "init": {
                  "closure_uid_118192521": {}
                },
                "initModel": {
                  "closure_uid_118192521": {}
                },
                "initView": {
                  "closure_uid_118192521": {}
                },
                "isClickable": {
                  "closure_uid_118192521": {}
                },
                "isCurrentlyEditable": {
                  "closure_uid_118192521": {}
                },
                "isDirty_": {},
                "isSerializable": {
                  "closure_uid_118192521": {}
                },
                "isTabNavigable": {
                  "closure_uid_118192521": {}
                },
                "isVisible": {
                  "closure_uid_118192521": {}
                },
                "markDirty": {
                  "closure_uid_118192521": {}
                },
                "maxDisplayLength": {},
                "name": {},
                "onBlocklyAction": {
                  "closure_uid_118192521": {}
                },
                "onMouseDown_": {
                  "closure_uid_118192521": {}
                },
                "processValidation_": {
                  "closure_uid_118192521": {}
                },
                "referencesVariables": {
                  "closure_uid_118192521": {}
                },
                "render_": {
                  "closure_uid_118192521": {}
                },
                "setCursorSvg": {
                  "closure_uid_118192521": {}
                },
                "setMarkerSvg": {
                  "closure_uid_118192521": {}
                },
                "setSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "setText": {
                  "closure_uid_118192521": {}
                },
                "setTooltip": {
                  "closure_uid_118192521": {}
                },
                "setValidator": {
                  "closure_uid_118192521": {}
                },
                "setValue": {
                  "closure_uid_118192521": {}
                },
                "setVisible": {
                  "closure_uid_118192521": {}
                },
                "sourceBlock_": {},
                "toXml": {
                  "closure_uid_118192521": {}
                },
                "updateColour": {
                  "closure_uid_118192521": {}
                },
                "updateEditable": {
                  "closure_uid_118192521": {}
                },
                "updateSize_": {
                  "closure_uid_118192521": {}
                },
                "updateWidth": {
                  "closure_uid_118192521": {}
                },
                "visible_": {}
              }
            },
            "field_label": {
              "fromJson": function () {},
              "superClass_": {
                "EDITABLE": {},
                "SERIALIZABLE": {},
                "bindEvents_": {
                  "closure_uid_118192521": {}
                },
                "callValidator": {
                  "closure_uid_118192521": {}
                },
                "classValidator": {
                  "closure_uid_118192521": {}
                },
                "clickTarget_": {},
                "closure_uid_118192521": {},
                "configure_": {
                  "closure_uid_118192521": {}
                },
                "createBorderRect_": {
                  "closure_uid_118192521": {}
                },
                "createTextElement_": {
                  "closure_uid_118192521": {}
                },
                "dispose": {
                  "closure_uid_118192521": {}
                },
                "disposed": {},
                "doClassValidation_": {
                  "closure_uid_118192521": {}
                },
                "doValueInvalid_": {
                  "closure_uid_118192521": {}
                },
                "doValueUpdate_": {
                  "closure_uid_118192521": {}
                },
                "forceRerender": {
                  "closure_uid_118192521": {}
                },
                "fromXml": {
                  "closure_uid_118192521": {}
                },
                "getAbsoluteXY_": {
                  "closure_uid_118192521": {}
                },
                "getClickTarget_": {
                  "closure_uid_118192521": {}
                },
                "getDisplayText_": {
                  "closure_uid_118192521": {}
                },
                "getFlipRtl": {
                  "closure_uid_118192521": {}
                },
                "getParentInput": {
                  "closure_uid_118192521": {}
                },
                "getScaledBBox_": {
                  "closure_uid_118192521": {}
                },
                "getSize": {
                  "closure_uid_118192521": {}
                },
                "getSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "getSvgRoot": {
                  "closure_uid_118192521": {}
                },
                "getText": {
                  "closure_uid_118192521": {}
                },
                "getValidator": {
                  "closure_uid_118192521": {}
                },
                "getValue": {
                  "closure_uid_118192521": {}
                },
                "init": {
                  "closure_uid_118192521": {}
                },
                "initModel": {
                  "closure_uid_118192521": {}
                },
                "initView": {
                  "closure_uid_118192521": {}
                },
                "isClickable": {
                  "closure_uid_118192521": {}
                },
                "isCurrentlyEditable": {
                  "closure_uid_118192521": {}
                },
                "isDirty_": {},
                "isSerializable": {
                  "closure_uid_118192521": {}
                },
                "isTabNavigable": {
                  "closure_uid_118192521": {}
                },
                "isVisible": {
                  "closure_uid_118192521": {}
                },
                "markDirty": {
                  "closure_uid_118192521": {}
                },
                "maxDisplayLength": {},
                "name": {},
                "onBlocklyAction": {
                  "closure_uid_118192521": {}
                },
                "onMouseDown_": {
                  "closure_uid_118192521": {}
                },
                "processValidation_": {
                  "closure_uid_118192521": {}
                },
                "referencesVariables": {
                  "closure_uid_118192521": {}
                },
                "render_": {
                  "closure_uid_118192521": {}
                },
                "setCursorSvg": {
                  "closure_uid_118192521": {}
                },
                "setMarkerSvg": {
                  "closure_uid_118192521": {}
                },
                "setSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "setText": {
                  "closure_uid_118192521": {}
                },
                "setTooltip": {
                  "closure_uid_118192521": {}
                },
                "setValidator": {
                  "closure_uid_118192521": {}
                },
                "setValue": {
                  "closure_uid_118192521": {}
                },
                "setVisible": {
                  "closure_uid_118192521": {}
                },
                "sourceBlock_": {},
                "toXml": {
                  "closure_uid_118192521": {}
                },
                "updateColour": {
                  "closure_uid_118192521": {}
                },
                "updateEditable": {
                  "closure_uid_118192521": {}
                },
                "updateSize_": {
                  "closure_uid_118192521": {}
                },
                "updateWidth": {
                  "closure_uid_118192521": {}
                },
                "visible_": {}
              }
            },
            "field_label_serializable": {
              "fromJson": function () {},
              "superClass_": {
                "EDITABLE": {},
                "SERIALIZABLE": {},
                "bindEvents_": {
                  "closure_uid_118192521": {}
                },
                "callValidator": {
                  "closure_uid_118192521": {}
                },
                "classValidator": {
                  "closure_uid_118192521": {}
                },
                "clickTarget_": {},
                "closure_uid_118192521": {},
                "configure_": function () {},
                "constructor": {
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "superClass_": {
                    "EDITABLE": {},
                    "SERIALIZABLE": {},
                    "bindEvents_": {
                      "closure_uid_118192521": {}
                    },
                    "callValidator": {
                      "closure_uid_118192521": {}
                    },
                    "classValidator": {
                      "closure_uid_118192521": {}
                    },
                    "clickTarget_": {},
                    "closure_uid_118192521": {},
                    "configure_": {
                      "closure_uid_118192521": {}
                    },
                    "createBorderRect_": {
                      "closure_uid_118192521": {}
                    },
                    "createTextElement_": {
                      "closure_uid_118192521": {}
                    },
                    "dispose": {
                      "closure_uid_118192521": {}
                    },
                    "disposed": {},
                    "doClassValidation_": {
                      "closure_uid_118192521": {}
                    },
                    "doValueInvalid_": {
                      "closure_uid_118192521": {}
                    },
                    "doValueUpdate_": {
                      "closure_uid_118192521": {}
                    },
                    "forceRerender": {
                      "closure_uid_118192521": {}
                    },
                    "fromXml": {
                      "closure_uid_118192521": {}
                    },
                    "getAbsoluteXY_": {
                      "closure_uid_118192521": {}
                    },
                    "getClickTarget_": {
                      "closure_uid_118192521": {}
                    },
                    "getDisplayText_": {
                      "closure_uid_118192521": {}
                    },
                    "getFlipRtl": {
                      "closure_uid_118192521": {}
                    },
                    "getParentInput": {
                      "closure_uid_118192521": {}
                    },
                    "getScaledBBox_": {
                      "closure_uid_118192521": {}
                    },
                    "getSize": {
                      "closure_uid_118192521": {}
                    },
                    "getSourceBlock": {
                      "closure_uid_118192521": {}
                    },
                    "getSvgRoot": {
                      "closure_uid_118192521": {}
                    },
                    "getText": {
                      "closure_uid_118192521": {}
                    },
                    "getValidator": {
                      "closure_uid_118192521": {}
                    },
                    "getValue": {
                      "closure_uid_118192521": {}
                    },
                    "init": {
                      "closure_uid_118192521": {}
                    },
                    "initModel": {
                      "closure_uid_118192521": {}
                    },
                    "initView": {
                      "closure_uid_118192521": {}
                    },
                    "isClickable": {
                      "closure_uid_118192521": {}
                    },
                    "isCurrentlyEditable": {
                      "closure_uid_118192521": {}
                    },
                    "isDirty_": {},
                    "isSerializable": {
                      "closure_uid_118192521": {}
                    },
                    "isTabNavigable": {
                      "closure_uid_118192521": {}
                    },
                    "isVisible": {
                      "closure_uid_118192521": {}
                    },
                    "markDirty": {
                      "closure_uid_118192521": {}
                    },
                    "maxDisplayLength": {},
                    "name": {},
                    "onBlocklyAction": {
                      "closure_uid_118192521": {}
                    },
                    "onMouseDown_": {
                      "closure_uid_118192521": {}
                    },
                    "processValidation_": {
                      "closure_uid_118192521": {}
                    },
                    "referencesVariables": {
                      "closure_uid_118192521": {}
                    },
                    "render_": {
                      "closure_uid_118192521": {}
                    },
                    "setCursorSvg": {
                      "closure_uid_118192521": {}
                    },
                    "setMarkerSvg": {
                      "closure_uid_118192521": {}
                    },
                    "setSourceBlock": {
                      "closure_uid_118192521": {}
                    },
                    "setText": {
                      "closure_uid_118192521": {}
                    },
                    "setTooltip": {
                      "closure_uid_118192521": {}
                    },
                    "setValidator": {
                      "closure_uid_118192521": {}
                    },
                    "setValue": {
                      "closure_uid_118192521": {}
                    },
                    "setVisible": {
                      "closure_uid_118192521": {}
                    },
                    "sourceBlock_": {},
                    "toXml": {
                      "closure_uid_118192521": {}
                    },
                    "updateColour": {
                      "closure_uid_118192521": {}
                    },
                    "updateEditable": {
                      "closure_uid_118192521": {}
                    },
                    "updateSize_": {
                      "closure_uid_118192521": {}
                    },
                    "updateWidth": {
                      "closure_uid_118192521": {}
                    },
                    "visible_": {}
                  }
                },
                "createBorderRect_": {
                  "closure_uid_118192521": {}
                },
                "createTextElement_": {
                  "closure_uid_118192521": {}
                },
                "dispose": {
                  "closure_uid_118192521": {}
                },
                "disposed": {},
                "doClassValidation_": function () {},
                "doValueInvalid_": {
                  "closure_uid_118192521": {}
                },
                "doValueUpdate_": {
                  "closure_uid_118192521": {}
                },
                "forceRerender": {
                  "closure_uid_118192521": {}
                },
                "fromXml": {
                  "closure_uid_118192521": {}
                },
                "getAbsoluteXY_": {
                  "closure_uid_118192521": {}
                },
                "getClickTarget_": {
                  "closure_uid_118192521": {}
                },
                "getDisplayText_": {
                  "closure_uid_118192521": {}
                },
                "getFlipRtl": {
                  "closure_uid_118192521": {}
                },
                "getParentInput": {
                  "closure_uid_118192521": {}
                },
                "getScaledBBox_": {
                  "closure_uid_118192521": {}
                },
                "getSize": {
                  "closure_uid_118192521": {}
                },
                "getSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "getSvgRoot": {
                  "closure_uid_118192521": {}
                },
                "getText": {
                  "closure_uid_118192521": {}
                },
                "getValidator": {
                  "closure_uid_118192521": {}
                },
                "getValue": {
                  "closure_uid_118192521": {}
                },
                "init": {
                  "closure_uid_118192521": {}
                },
                "initModel": {
                  "closure_uid_118192521": {}
                },
                "initView": function () {},
                "isClickable": {
                  "closure_uid_118192521": {}
                },
                "isCurrentlyEditable": {
                  "closure_uid_118192521": {}
                },
                "isDirty_": {},
                "isSerializable": {
                  "closure_uid_118192521": {}
                },
                "isTabNavigable": {
                  "closure_uid_118192521": {}
                },
                "isVisible": {
                  "closure_uid_118192521": {}
                },
                "markDirty": {
                  "closure_uid_118192521": {}
                },
                "maxDisplayLength": {},
                "name": {},
                "onBlocklyAction": {
                  "closure_uid_118192521": {}
                },
                "onMouseDown_": {
                  "closure_uid_118192521": {}
                },
                "processValidation_": {
                  "closure_uid_118192521": {}
                },
                "referencesVariables": {
                  "closure_uid_118192521": {}
                },
                "render_": {
                  "closure_uid_118192521": {}
                },
                "setClass": function () {},
                "setCursorSvg": {
                  "closure_uid_118192521": {}
                },
                "setMarkerSvg": {
                  "closure_uid_118192521": {}
                },
                "setSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "setText": {
                  "closure_uid_118192521": {}
                },
                "setTooltip": {
                  "closure_uid_118192521": {}
                },
                "setValidator": {
                  "closure_uid_118192521": {}
                },
                "setValue": {
                  "closure_uid_118192521": {}
                },
                "setVisible": {
                  "closure_uid_118192521": {}
                },
                "sourceBlock_": {},
                "toXml": {
                  "closure_uid_118192521": {}
                },
                "updateColour": {
                  "closure_uid_118192521": {}
                },
                "updateEditable": {
                  "closure_uid_118192521": {}
                },
                "updateSize_": {
                  "closure_uid_118192521": {}
                },
                "updateWidth": {
                  "closure_uid_118192521": {}
                },
                "visible_": {}
              }
            },
            "field_multilinetext": {
              "LINE_HEIGHT": {},
              "fromJson": function () {},
              "superClass_": {
                "CURSOR": {},
                "EDITABLE": {},
                "SERIALIZABLE": {},
                "bindEvents_": {
                  "closure_uid_118192521": {}
                },
                "bindInputEvents_": function () {},
                "callValidator": {
                  "closure_uid_118192521": {}
                },
                "classValidator": {
                  "closure_uid_118192521": {}
                },
                "clickTarget_": {},
                "closure_uid_118192521": {},
                "configure_": function () {},
                "constructor": {
                  "BORDERRADIUS": {},
                  "FONTSIZE": {},
                  "closure_uid_118192521": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "nonnegativeIntegerValidator": {
                    "closure_uid_118192521": {}
                  },
                  "numberValidator": {
                    "closure_uid_118192521": {}
                  },
                  "superClass_": {
                    "EDITABLE": {},
                    "SERIALIZABLE": {},
                    "bindEvents_": {
                      "closure_uid_118192521": {}
                    },
                    "callValidator": {
                      "closure_uid_118192521": {}
                    },
                    "classValidator": {
                      "closure_uid_118192521": {}
                    },
                    "clickTarget_": {},
                    "closure_uid_118192521": {},
                    "configure_": {
                      "closure_uid_118192521": {}
                    },
                    "createBorderRect_": {
                      "closure_uid_118192521": {}
                    },
                    "createTextElement_": {
                      "closure_uid_118192521": {}
                    },
                    "dispose": {
                      "closure_uid_118192521": {}
                    },
                    "disposed": {},
                    "doClassValidation_": {
                      "closure_uid_118192521": {}
                    },
                    "doValueInvalid_": {
                      "closure_uid_118192521": {}
                    },
                    "doValueUpdate_": {
                      "closure_uid_118192521": {}
                    },
                    "forceRerender": {
                      "closure_uid_118192521": {}
                    },
                    "fromXml": {
                      "closure_uid_118192521": {}
                    },
                    "getAbsoluteXY_": {
                      "closure_uid_118192521": {}
                    },
                    "getClickTarget_": {
                      "closure_uid_118192521": {}
                    },
                    "getDisplayText_": {
                      "closure_uid_118192521": {}
                    },
                    "getFlipRtl": {
                      "closure_uid_118192521": {}
                    },
                    "getParentInput": {
                      "closure_uid_118192521": {}
                    },
                    "getScaledBBox_": {
                      "closure_uid_118192521": {}
                    },
                    "getSize": {
                      "closure_uid_118192521": {}
                    },
                    "getSourceBlock": {
                      "closure_uid_118192521": {}
                    },
                    "getSvgRoot": {
                      "closure_uid_118192521": {}
                    },
                    "getText": {
                      "closure_uid_118192521": {}
                    },
                    "getValidator": {
                      "closure_uid_118192521": {}
                    },
                    "getValue": {
                      "closure_uid_118192521": {}
                    },
                    "init": {
                      "closure_uid_118192521": {}
                    },
                    "initModel": {
                      "closure_uid_118192521": {}
                    },
                    "initView": {
                      "closure_uid_118192521": {}
                    },
                    "isClickable": {
                      "closure_uid_118192521": {}
                    },
                    "isCurrentlyEditable": {
                      "closure_uid_118192521": {}
                    },
                    "isDirty_": {},
                    "isSerializable": {
                      "closure_uid_118192521": {}
                    },
                    "isTabNavigable": {
                      "closure_uid_118192521": {}
                    },
                    "isVisible": {
                      "closure_uid_118192521": {}
                    },
                    "markDirty": {
                      "closure_uid_118192521": {}
                    },
                    "maxDisplayLength": {},
                    "name": {},
                    "onBlocklyAction": {
                      "closure_uid_118192521": {}
                    },
                    "onMouseDown_": {
                      "closure_uid_118192521": {}
                    },
                    "processValidation_": {
                      "closure_uid_118192521": {}
                    },
                    "referencesVariables": {
                      "closure_uid_118192521": {}
                    },
                    "render_": {
                      "closure_uid_118192521": {}
                    },
                    "setCursorSvg": {
                      "closure_uid_118192521": {}
                    },
                    "setMarkerSvg": {
                      "closure_uid_118192521": {}
                    },
                    "setSourceBlock": {
                      "closure_uid_118192521": {}
                    },
                    "setText": {
                      "closure_uid_118192521": {}
                    },
                    "setTooltip": {
                      "closure_uid_118192521": {}
                    },
                    "setValidator": {
                      "closure_uid_118192521": {}
                    },
                    "setValue": {
                      "closure_uid_118192521": {}
                    },
                    "setVisible": {
                      "closure_uid_118192521": {}
                    },
                    "sourceBlock_": {},
                    "toXml": {
                      "closure_uid_118192521": {}
                    },
                    "updateColour": {
                      "closure_uid_118192521": {}
                    },
                    "updateEditable": {
                      "closure_uid_118192521": {}
                    },
                    "updateSize_": {
                      "closure_uid_118192521": {}
                    },
                    "updateWidth": {
                      "closure_uid_118192521": {}
                    },
                    "visible_": {}
                  }
                },
                "createBorderRect_": {
                  "closure_uid_118192521": {}
                },
                "createTextElement_": {
                  "closure_uid_118192521": {}
                },
                "dispose": {
                  "closure_uid_118192521": {}
                },
                "disposed": {},
                "doClassValidation_": function () {},
                "doValueInvalid_": function () {},
                "doValueUpdate_": function () {},
                "forceRerender": {
                  "closure_uid_118192521": {}
                },
                "fromXml": {
                  "closure_uid_118192521": {}
                },
                "getAbsoluteXY_": {
                  "closure_uid_118192521": {}
                },
                "getClickTarget_": {
                  "closure_uid_118192521": {}
                },
                "getDisplayText_": {
                  "closure_uid_118192521": {}
                },
                "getEditorText_": function () {},
                "getFlipRtl": {
                  "closure_uid_118192521": {}
                },
                "getParentInput": {
                  "closure_uid_118192521": {}
                },
                "getScaledBBox_": {
                  "closure_uid_118192521": {}
                },
                "getSize": {
                  "closure_uid_118192521": {}
                },
                "getSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "getSvgRoot": {
                  "closure_uid_118192521": {}
                },
                "getText": {
                  "closure_uid_118192521": {}
                },
                "getText_": function () {},
                "getValidator": {
                  "closure_uid_118192521": {}
                },
                "getValue": {
                  "closure_uid_118192521": {}
                },
                "getValueFromEditorText_": function () {},
                "init": {
                  "closure_uid_118192521": {}
                },
                "initModel": {
                  "closure_uid_118192521": {}
                },
                "initView": {
                  "closure_uid_118192521": {}
                },
                "isClickable": {
                  "closure_uid_118192521": {}
                },
                "isCurrentlyEditable": {
                  "closure_uid_118192521": {}
                },
                "isDirty_": {},
                "isSerializable": {
                  "closure_uid_118192521": {}
                },
                "isTabNavigable": function () {},
                "isVisible": {
                  "closure_uid_118192521": {}
                },
                "markDirty": {
                  "closure_uid_118192521": {}
                },
                "maxDisplayLength": {},
                "name": {},
                "onBlocklyAction": {
                  "closure_uid_118192521": {}
                },
                "onHtmlInputChange_": function () {},
                "onHtmlInputKeyDown_": function () {},
                "onMouseDown_": {
                  "closure_uid_118192521": {}
                },
                "processValidation_": {
                  "closure_uid_118192521": {}
                },
                "referencesVariables": {
                  "closure_uid_118192521": {}
                },
                "render_": function () {},
                "resizeEditor_": function () {},
                "setCursorSvg": {
                  "closure_uid_118192521": {}
                },
                "setEditorValue_": function () {},
                "setMarkerSvg": {
                  "closure_uid_118192521": {}
                },
                "setSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "setSpellcheck": function () {},
                "setText": {
                  "closure_uid_118192521": {}
                },
                "setTooltip": {
                  "closure_uid_118192521": {}
                },
                "setValidator": {
                  "closure_uid_118192521": {}
                },
                "setValue": {
                  "closure_uid_118192521": {}
                },
                "setVisible": {
                  "closure_uid_118192521": {}
                },
                "showEditor_": function () {},
                "showInlineEditor_": function () {},
                "showPromptEditor_": function () {},
                "sourceBlock_": {},
                "toXml": {
                  "closure_uid_118192521": {}
                },
                "unbindInputEvents_": function () {},
                "updateColour": {
                  "closure_uid_118192521": {}
                },
                "updateEditable": {
                  "closure_uid_118192521": {}
                },
                "updateSize_": {
                  "closure_uid_118192521": {}
                },
                "updateWidth": {
                  "closure_uid_118192521": {}
                },
                "visible_": {},
                "widgetCreate_": function () {},
                "widgetDispose_": function () {}
              }
            },
            "field_number": {
              "fromJson": function () {},
              "superClass_": {
                "CURSOR": {},
                "EDITABLE": {},
                "SERIALIZABLE": {},
                "bindEvents_": {
                  "closure_uid_118192521": {}
                },
                "bindInputEvents_": function () {},
                "callValidator": {
                  "closure_uid_118192521": {}
                },
                "classValidator": {
                  "closure_uid_118192521": {}
                },
                "clickTarget_": {},
                "closure_uid_118192521": {},
                "configure_": function () {},
                "constructor": {
                  "BORDERRADIUS": {},
                  "FONTSIZE": {},
                  "closure_uid_118192521": {},
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "nonnegativeIntegerValidator": {
                    "closure_uid_118192521": {}
                  },
                  "numberValidator": {
                    "closure_uid_118192521": {}
                  },
                  "superClass_": {
                    "EDITABLE": {},
                    "SERIALIZABLE": {},
                    "bindEvents_": {
                      "closure_uid_118192521": {}
                    },
                    "callValidator": {
                      "closure_uid_118192521": {}
                    },
                    "classValidator": {
                      "closure_uid_118192521": {}
                    },
                    "clickTarget_": {},
                    "closure_uid_118192521": {},
                    "configure_": {
                      "closure_uid_118192521": {}
                    },
                    "createBorderRect_": {
                      "closure_uid_118192521": {}
                    },
                    "createTextElement_": {
                      "closure_uid_118192521": {}
                    },
                    "dispose": {
                      "closure_uid_118192521": {}
                    },
                    "disposed": {},
                    "doClassValidation_": {
                      "closure_uid_118192521": {}
                    },
                    "doValueInvalid_": {
                      "closure_uid_118192521": {}
                    },
                    "doValueUpdate_": {
                      "closure_uid_118192521": {}
                    },
                    "forceRerender": {
                      "closure_uid_118192521": {}
                    },
                    "fromXml": {
                      "closure_uid_118192521": {}
                    },
                    "getAbsoluteXY_": {
                      "closure_uid_118192521": {}
                    },
                    "getClickTarget_": {
                      "closure_uid_118192521": {}
                    },
                    "getDisplayText_": {
                      "closure_uid_118192521": {}
                    },
                    "getFlipRtl": {
                      "closure_uid_118192521": {}
                    },
                    "getParentInput": {
                      "closure_uid_118192521": {}
                    },
                    "getScaledBBox_": {
                      "closure_uid_118192521": {}
                    },
                    "getSize": {
                      "closure_uid_118192521": {}
                    },
                    "getSourceBlock": {
                      "closure_uid_118192521": {}
                    },
                    "getSvgRoot": {
                      "closure_uid_118192521": {}
                    },
                    "getText": {
                      "closure_uid_118192521": {}
                    },
                    "getValidator": {
                      "closure_uid_118192521": {}
                    },
                    "getValue": {
                      "closure_uid_118192521": {}
                    },
                    "init": {
                      "closure_uid_118192521": {}
                    },
                    "initModel": {
                      "closure_uid_118192521": {}
                    },
                    "initView": {
                      "closure_uid_118192521": {}
                    },
                    "isClickable": {
                      "closure_uid_118192521": {}
                    },
                    "isCurrentlyEditable": {
                      "closure_uid_118192521": {}
                    },
                    "isDirty_": {},
                    "isSerializable": {
                      "closure_uid_118192521": {}
                    },
                    "isTabNavigable": {
                      "closure_uid_118192521": {}
                    },
                    "isVisible": {
                      "closure_uid_118192521": {}
                    },
                    "markDirty": {
                      "closure_uid_118192521": {}
                    },
                    "maxDisplayLength": {},
                    "name": {},
                    "onBlocklyAction": {
                      "closure_uid_118192521": {}
                    },
                    "onMouseDown_": {
                      "closure_uid_118192521": {}
                    },
                    "processValidation_": {
                      "closure_uid_118192521": {}
                    },
                    "referencesVariables": {
                      "closure_uid_118192521": {}
                    },
                    "render_": {
                      "closure_uid_118192521": {}
                    },
                    "setCursorSvg": {
                      "closure_uid_118192521": {}
                    },
                    "setMarkerSvg": {
                      "closure_uid_118192521": {}
                    },
                    "setSourceBlock": {
                      "closure_uid_118192521": {}
                    },
                    "setText": {
                      "closure_uid_118192521": {}
                    },
                    "setTooltip": {
                      "closure_uid_118192521": {}
                    },
                    "setValidator": {
                      "closure_uid_118192521": {}
                    },
                    "setValue": {
                      "closure_uid_118192521": {}
                    },
                    "setVisible": {
                      "closure_uid_118192521": {}
                    },
                    "sourceBlock_": {},
                    "toXml": {
                      "closure_uid_118192521": {}
                    },
                    "updateColour": {
                      "closure_uid_118192521": {}
                    },
                    "updateEditable": {
                      "closure_uid_118192521": {}
                    },
                    "updateSize_": {
                      "closure_uid_118192521": {}
                    },
                    "updateWidth": {
                      "closure_uid_118192521": {}
                    },
                    "visible_": {}
                  }
                },
                "createBorderRect_": {
                  "closure_uid_118192521": {}
                },
                "createTextElement_": {
                  "closure_uid_118192521": {}
                },
                "dispose": {
                  "closure_uid_118192521": {}
                },
                "disposed": {},
                "doClassValidation_": function () {},
                "doValueInvalid_": function () {},
                "doValueUpdate_": function () {},
                "forceRerender": {
                  "closure_uid_118192521": {}
                },
                "fromXml": {
                  "closure_uid_118192521": {}
                },
                "getAbsoluteXY_": {
                  "closure_uid_118192521": {}
                },
                "getClickTarget_": {
                  "closure_uid_118192521": {}
                },
                "getDisplayText_": {
                  "closure_uid_118192521": {}
                },
                "getEditorText_": function () {},
                "getFlipRtl": {
                  "closure_uid_118192521": {}
                },
                "getParentInput": {
                  "closure_uid_118192521": {}
                },
                "getScaledBBox_": {
                  "closure_uid_118192521": {}
                },
                "getSize": {
                  "closure_uid_118192521": {}
                },
                "getSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "getSvgRoot": {
                  "closure_uid_118192521": {}
                },
                "getText": {
                  "closure_uid_118192521": {}
                },
                "getText_": function () {},
                "getValidator": {
                  "closure_uid_118192521": {}
                },
                "getValue": {
                  "closure_uid_118192521": {}
                },
                "getValueFromEditorText_": function () {},
                "init": {
                  "closure_uid_118192521": {}
                },
                "initModel": {
                  "closure_uid_118192521": {}
                },
                "initView": {
                  "closure_uid_118192521": {}
                },
                "isClickable": {
                  "closure_uid_118192521": {}
                },
                "isCurrentlyEditable": {
                  "closure_uid_118192521": {}
                },
                "isDirty_": {},
                "isSerializable": {
                  "closure_uid_118192521": {}
                },
                "isTabNavigable": function () {},
                "isVisible": {
                  "closure_uid_118192521": {}
                },
                "markDirty": {
                  "closure_uid_118192521": {}
                },
                "maxDisplayLength": {},
                "name": {},
                "onBlocklyAction": {
                  "closure_uid_118192521": {}
                },
                "onHtmlInputChange_": function () {},
                "onHtmlInputKeyDown_": function () {},
                "onMouseDown_": {
                  "closure_uid_118192521": {}
                },
                "processValidation_": {
                  "closure_uid_118192521": {}
                },
                "referencesVariables": {
                  "closure_uid_118192521": {}
                },
                "render_": function () {},
                "resizeEditor_": function () {},
                "setCursorSvg": {
                  "closure_uid_118192521": {}
                },
                "setEditorValue_": function () {},
                "setMarkerSvg": {
                  "closure_uid_118192521": {}
                },
                "setSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "setSpellcheck": function () {},
                "setText": {
                  "closure_uid_118192521": {}
                },
                "setTooltip": {
                  "closure_uid_118192521": {}
                },
                "setValidator": {
                  "closure_uid_118192521": {}
                },
                "setValue": {
                  "closure_uid_118192521": {}
                },
                "setVisible": {
                  "closure_uid_118192521": {}
                },
                "showEditor_": function () {},
                "showInlineEditor_": function () {},
                "showPromptEditor_": function () {},
                "sourceBlock_": {},
                "toXml": {
                  "closure_uid_118192521": {}
                },
                "unbindInputEvents_": function () {},
                "updateColour": {
                  "closure_uid_118192521": {}
                },
                "updateEditable": {
                  "closure_uid_118192521": {}
                },
                "updateSize_": {
                  "closure_uid_118192521": {}
                },
                "updateWidth": {
                  "closure_uid_118192521": {}
                },
                "visible_": {},
                "widgetCreate_": function () {},
                "widgetDispose_": function () {}
              }
            },
            "field_variable": {
              "dropdownCreate": function () {},
              "fromJson": function () {},
              "superClass_": {
                "CURSOR": {},
                "EDITABLE": {},
                "SERIALIZABLE": {},
                "bindEvents_": {
                  "closure_uid_118192521": {}
                },
                "callValidator": {
                  "closure_uid_118192521": {}
                },
                "classValidator": {
                  "closure_uid_118192521": {}
                },
                "clickTarget_": {},
                "closure_uid_118192521": {},
                "configure_": {
                  "closure_uid_118192521": {}
                },
                "constructor": {
                  "ARROW_CHAR": {},
                  "CHECKMARK_OVERHANG": {},
                  "IMAGE_Y_OFFSET": {},
                  "IMAGE_Y_PADDING": {},
                  "MAX_MENU_HEIGHT_VH": {},
                  "applyTrim_": {
                    "closure_uid_118192521": {}
                  },
                  "fromJson": {
                    "closure_uid_118192521": {}
                  },
                  "superClass_": {
                    "EDITABLE": {},
                    "SERIALIZABLE": {},
                    "bindEvents_": {
                      "closure_uid_118192521": {}
                    },
                    "callValidator": {
                      "closure_uid_118192521": {}
                    },
                    "classValidator": {
                      "closure_uid_118192521": {}
                    },
                    "clickTarget_": {},
                    "closure_uid_118192521": {},
                    "configure_": {
                      "closure_uid_118192521": {}
                    },
                    "createBorderRect_": {
                      "closure_uid_118192521": {}
                    },
                    "createTextElement_": {
                      "closure_uid_118192521": {}
                    },
                    "dispose": {
                      "closure_uid_118192521": {}
                    },
                    "disposed": {},
                    "doClassValidation_": {
                      "closure_uid_118192521": {}
                    },
                    "doValueInvalid_": {
                      "closure_uid_118192521": {}
                    },
                    "doValueUpdate_": {
                      "closure_uid_118192521": {}
                    },
                    "forceRerender": {
                      "closure_uid_118192521": {}
                    },
                    "fromXml": {
                      "closure_uid_118192521": {}
                    },
                    "getAbsoluteXY_": {
                      "closure_uid_118192521": {}
                    },
                    "getClickTarget_": {
                      "closure_uid_118192521": {}
                    },
                    "getDisplayText_": {
                      "closure_uid_118192521": {}
                    },
                    "getFlipRtl": {
                      "closure_uid_118192521": {}
                    },
                    "getParentInput": {
                      "closure_uid_118192521": {}
                    },
                    "getScaledBBox_": {
                      "closure_uid_118192521": {}
                    },
                    "getSize": {
                      "closure_uid_118192521": {}
                    },
                    "getSourceBlock": {
                      "closure_uid_118192521": {}
                    },
                    "getSvgRoot": {
                      "closure_uid_118192521": {}
                    },
                    "getText": {
                      "closure_uid_118192521": {}
                    },
                    "getValidator": {
                      "closure_uid_118192521": {}
                    },
                    "getValue": {
                      "closure_uid_118192521": {}
                    },
                    "init": {
                      "closure_uid_118192521": {}
                    },
                    "initModel": {
                      "closure_uid_118192521": {}
                    },
                    "initView": {
                      "closure_uid_118192521": {}
                    },
                    "isClickable": {
                      "closure_uid_118192521": {}
                    },
                    "isCurrentlyEditable": {
                      "closure_uid_118192521": {}
                    },
                    "isDirty_": {},
                    "isSerializable": {
                      "closure_uid_118192521": {}
                    },
                    "isTabNavigable": {
                      "closure_uid_118192521": {}
                    },
                    "isVisible": {
                      "closure_uid_118192521": {}
                    },
                    "markDirty": {
                      "closure_uid_118192521": {}
                    },
                    "maxDisplayLength": {},
                    "name": {},
                    "onBlocklyAction": {
                      "closure_uid_118192521": {}
                    },
                    "onMouseDown_": {
                      "closure_uid_118192521": {}
                    },
                    "processValidation_": {
                      "closure_uid_118192521": {}
                    },
                    "referencesVariables": {
                      "closure_uid_118192521": {}
                    },
                    "render_": {
                      "closure_uid_118192521": {}
                    },
                    "setCursorSvg": {
                      "closure_uid_118192521": {}
                    },
                    "setMarkerSvg": {
                      "closure_uid_118192521": {}
                    },
                    "setSourceBlock": {
                      "closure_uid_118192521": {}
                    },
                    "setText": {
                      "closure_uid_118192521": {}
                    },
                    "setTooltip": {
                      "closure_uid_118192521": {}
                    },
                    "setValidator": {
                      "closure_uid_118192521": {}
                    },
                    "setValue": {
                      "closure_uid_118192521": {}
                    },
                    "setVisible": {
                      "closure_uid_118192521": {}
                    },
                    "sourceBlock_": {},
                    "toXml": {
                      "closure_uid_118192521": {}
                    },
                    "updateColour": {
                      "closure_uid_118192521": {}
                    },
                    "updateEditable": {
                      "closure_uid_118192521": {}
                    },
                    "updateSize_": {
                      "closure_uid_118192521": {}
                    },
                    "updateWidth": {
                      "closure_uid_118192521": {}
                    },
                    "visible_": {}
                  },
                  "validateOptions_": {
                    "closure_uid_118192521": {}
                  }
                },
                "createBorderRect_": {
                  "closure_uid_118192521": {}
                },
                "createTextElement_": {
                  "closure_uid_118192521": {}
                },
                "dispose": {
                  "closure_uid_118192521": {}
                },
                "disposed": {},
                "doClassValidation_": function () {},
                "doValueInvalid_": {
                  "closure_uid_118192521": {}
                },
                "doValueUpdate_": function () {},
                "dropdownCreate_": function () {},
                "dropdownDispose_": function () {},
                "forceRerender": {
                  "closure_uid_118192521": {}
                },
                "fromXml": {
                  "closure_uid_118192521": {}
                },
                "getAbsoluteXY_": {
                  "closure_uid_118192521": {}
                },
                "getClickTarget_": {
                  "closure_uid_118192521": {}
                },
                "getDisplayText_": {
                  "closure_uid_118192521": {}
                },
                "getFlipRtl": {
                  "closure_uid_118192521": {}
                },
                "getOptions": function () {},
                "getParentInput": {
                  "closure_uid_118192521": {}
                },
                "getScaledBBox_": {
                  "closure_uid_118192521": {}
                },
                "getSize": {
                  "closure_uid_118192521": {}
                },
                "getSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "getSvgRoot": {
                  "closure_uid_118192521": {}
                },
                "getText": {
                  "closure_uid_118192521": {}
                },
                "getText_": function () {},
                "getValidator": {
                  "closure_uid_118192521": {}
                },
                "getValue": {
                  "closure_uid_118192521": {}
                },
                "handleMenuActionEvent_": function () {},
                "init": {
                  "closure_uid_118192521": {}
                },
                "initModel": {
                  "closure_uid_118192521": {}
                },
                "initView": function () {},
                "isClickable": {
                  "closure_uid_118192521": {}
                },
                "isCurrentlyEditable": {
                  "closure_uid_118192521": {}
                },
                "isDirty_": {},
                "isOptionListDynamic": function () {},
                "isSerializable": {
                  "closure_uid_118192521": {}
                },
                "isTabNavigable": {
                  "closure_uid_118192521": {}
                },
                "isVisible": {
                  "closure_uid_118192521": {}
                },
                "markDirty": {
                  "closure_uid_118192521": {}
                },
                "maxDisplayLength": {},
                "name": {},
                "onBlocklyAction": function () {},
                "onItemSelected": function () {},
                "onMouseDown_": {
                  "closure_uid_118192521": {}
                },
                "processValidation_": {
                  "closure_uid_118192521": {}
                },
                "referencesVariables": {
                  "closure_uid_118192521": {}
                },
                "renderSelectedImage_": function () {},
                "renderSelectedText_": function () {},
                "render_": function () {},
                "setCursorSvg": {
                  "closure_uid_118192521": {}
                },
                "setMarkerSvg": {
                  "closure_uid_118192521": {}
                },
                "setSourceBlock": {
                  "closure_uid_118192521": {}
                },
                "setText": {
                  "closure_uid_118192521": {}
                },
                "setTooltip": {
                  "closure_uid_118192521": {}
                },
                "setValidator": {
                  "closure_uid_118192521": {}
                },
                "setValue": {
                  "closure_uid_118192521": {}
                },
                "setVisible": {
                  "closure_uid_118192521": {}
                },
                "showEditor_": function () {},
                "sourceBlock_": {},
                "toXml": {
                  "closure_uid_118192521": {}
                },
                "trimOptions_": function () {},
                "updateColour": function () {},
                "updateEditable": {
                  "closure_uid_118192521": {}
                },
                "updateSize_": {
                  "closure_uid_118192521": {}
                },
                "updateWidth": {
                  "closure_uid_118192521": {}
                },
                "visible_": {}
              }
            }
          },
          "unregister": function () {}
        },
        "geras": {
          "ConstantProvider": {
            "superClass_": {
              "init": function () {},
              "makeInsideCorners": function () {},
              "makeJaggedTeeth": function () {},
              "makeNotch": function () {},
              "makeOutsideCorners": function () {},
              "makePuzzleTab": function () {},
              "makeStartHat": function () {},
              "shapeFor": function () {}
            }
          },
          "Drawer": {
            "superClass_": {
              "draw": function () {},
              "drawBottom_": function () {},
              "drawInlineInput_": function () {},
              "drawInternals_": function () {},
              "drawJaggedEdge_": function () {},
              "drawLeft_": function () {},
              "drawOutline_": function () {},
              "drawRightSideRow_": function () {},
              "drawStatementInput_": function () {},
              "drawTop_": function () {},
              "drawValueInput_": function () {},
              "hideHiddenIcons_": function () {},
              "layoutField_": function () {},
              "positionExternalValueConnection_": function () {},
              "positionInlineInputConnection_": function () {},
              "positionNextConnection_": function () {},
              "positionOutputConnection_": function () {},
              "positionPreviousConnection_": function () {},
              "positionStatementInputConnection_": function () {},
              "recordSizeOnBlock_": function () {}
            }
          },
          "HighlightConstantProvider": function () {},
          "Highlighter": function () {},
          "InlineInput": {
            "closure_uid_118192521": {},
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "constructor": {
                    "closure_uid_118192521": {},
                    "superClass_": {
                      "closure_uid_118192521": {},
                      "constructor": {
                        "closure_uid_118192521": {},
                        "superClass_": {
                          "closure_uid_118192521": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "PathObject": function () {},
          "RenderInfo": {
            "superClass_": {
              "addAlignmentPadding_": function () {},
              "addElemSpacing_": function () {},
              "addInput_": function () {},
              "addRowSpacing_": function () {},
              "alignRowElements_": function () {},
              "alignStatementRow_": function () {},
              "computeBounds_": function () {},
              "createRows_": function () {},
              "finalize_": function () {},
              "getElemCenterline_": function () {},
              "getInRowSpacing_": function () {},
              "getRenderer": function () {},
              "getSpacerRowHeight_": function () {},
              "getSpacerRowWidth_": function () {},
              "makeSpacerRow_": function () {},
              "measure": function () {},
              "populateBottomRow_": function () {},
              "populateTopRow_": function () {},
              "recordElemPositions_": function () {},
              "shouldStartNewRow_": function () {}
            }
          },
          "Renderer": {
            "superClass_": {
              "getConstants": function () {},
              "init": function () {},
              "makeConstants_": function () {},
              "makeCursorDrawer": function () {},
              "makeDebugger_": function () {},
              "makeDrawer_": function () {},
              "makeHighlightConstants_": function () {},
              "makePathObject": function () {},
              "makeRenderInfo_": function () {},
              "render": function () {}
            }
          },
          "StatementInput": {
            "closure_uid_118192521": {},
            "superClass_": {
              "closure_uid_118192521": {},
              "constructor": {
                "closure_uid_118192521": {},
                "superClass_": {
                  "closure_uid_118192521": {},
                  "constructor": {
                    "closure_uid_118192521": {},
                    "superClass_": {
                      "closure_uid_118192521": {},
                      "constructor": {
                        "closure_uid_118192521": {},
                        "superClass_": {
                          "closure_uid_118192521": {}
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "closure_uid_118192521": {}
        },
        "getMainWorkspace": function () {},
        "hideChaff": function () {},
        "hueToHex": function () {},
        "init_": function () {},
        "inject": {
          "bindDocumentEvents_": function () {},
          "loadSounds_": function () {}
        },
        "isNumber": function () {},
        "jsonInitFactory_": function () {},
        "keyboardAccessibilityMode": {},
        "longPid_": {},
        "longStart_": function () {},
        "longStop_": function () {},
        "mainWorkspace": {},
        "navigation": {
          "ACTION_DISCONNECT": {
            "desc": {},
            "name": {}
          },
          "ACTION_EXIT": {
            "desc": {},
            "name": {}
          },
          "ACTION_IN": {
            "desc": {},
            "name": {}
          },
          "ACTION_INSERT": {
            "desc": {},
            "name": {}
          },
          "ACTION_MARK": {
            "desc": {},
            "name": {}
          },
          "ACTION_NEXT": {
            "desc": {},
            "name": {}
          },
          "ACTION_OUT": {
            "desc": {},
            "name": {}
          },
          "ACTION_PREVIOUS": {
            "desc": {},
            "name": {}
          },
          "ACTION_TOGGLE_KEYBOARD_NAV": {
            "desc": {},
            "name": {}
          },
          "ACTION_TOOLBOX": {
            "desc": {},
            "name": {}
          },
          "READONLY_ACTION_LIST": {},
          "STATE_FLYOUT": {},
          "STATE_TOOLBOX": {},
          "STATE_WS": {},
          "actionNames": {
            "DISCONNECT": {},
            "EXIT": {},
            "IN": {},
            "INSERT": {},
            "MARK": {},
            "NEXT": {},
            "OUT": {},
            "PREVIOUS": {},
            "TOGGLE_KEYBOARD_NAV": {},
            "TOOLBOX": {}
          },
          "connect_": function () {},
          "currentState_": {},
          "disableKeyboardAccessibility": function () {},
          "disconnectBlocks_": function () {},
          "disconnectChild_": function () {},
          "enableKeyboardAccessibility": function () {},
          "error_": function () {},
          "flyoutOnAction_": function () {},
          "focusFlyout_": function () {},
          "focusToolbox_": function () {},
          "focusWorkspace_": function () {},
          "getFlyoutCursor_": function () {},
          "getInferiorConnection_": function () {},
          "getSourceBlock_": function () {},
          "getSuperiorConnection_": function () {},
          "getTopNode": function () {},
          "handleActions_": function () {},
          "handleEnterForWS_": function () {},
          "insertBlock": function () {},
          "insertFromFlyout": function () {},
          "log_": function () {},
          "loggingCallback": {},
          "markAtCursor_": function () {},
          "modifyWarn_": function () {},
          "modify_": function () {},
          "moveAndConnect_": function () {},
          "moveBlockToWorkspace_": function () {},
          "moveCursorOnBlockDelete": function () {},
          "moveCursorOnBlockMutation": function () {},
          "onBlocklyAction": function () {},
          "onKeyPress": function () {},
          "removeMark_": function () {},
          "resetFlyout_": function () {},
          "setState": function () {},
          "toolboxOnAction_": function () {},
          "warn_": function () {},
          "workspaceOnAction_": function () {}
        },
        "onContextMenu_": function () {},
        "onKeyDown_": function () {},
        "prompt": function () {},
        "requires": {},
        "resizeSvgContents": function () {},
        "selected": {},
        "svgResize": function () {},
        "svgSize": function () {},
        "tree": {
          "BaseNode": {
            "allNodes": {
              "closure_uid_118192521": {}
            },
            "closure_uid_118192521": {},
            "superClass_": {
              "addChild": {
                "closure_uid_118192521": {}
              },
              "addChildAt": {
                "closure_uid_118192521": {}
              },
              "closure_uid_118192521": {},
              "createDom": {
                "closure_uid_118192521": {}
              },
              "dispose": {
                "closure_uid_118192521": {}
              },
              "disposeInternal": {
                "closure_uid_118192521": {}
              },
              "enterDocument": {
                "closure_uid_118192521": {}
              },
              "exitDocument": {
                "closure_uid_118192521": {}
              },
              "forEachChild": {
                "closure_uid_118192521": {}
              },
              "getChild": {
                "closure_uid_118192521": {}
              },
              "getChildAt": {
                "closure_uid_118192521": {}
              },
              "getChildCount": {
                "closure_uid_118192521": {}
              },
              "getContentElement": {
                "closure_uid_118192521": {}
              },
              "getElement": {
                "closure_uid_118192521": {}
              },
              "getId": {
                "closure_uid_118192521": {}
              },
              "getParent": {
                "closure_uid_118192521": {}
              },
              "hasChildren": {
                "closure_uid_118192521": {}
              },
              "indexOfChild": {
                "closure_uid_118192521": {}
              },
              "isInDocument": {
                "closure_uid_118192521": {}
              },
              "isRightToLeft": {
                "closure_uid_118192521": {}
              },
              "render": {
                "closure_uid_118192521": {}
              },
              "renderBefore": {
                "closure_uid_118192521": {}
              },
              "render_": {
                "closure_uid_118192521": {}
              },
              "setElementInternal": {
                "closure_uid_118192521": {}
              },
              "setParent": {
                "closure_uid_118192521": {}
              },
              "setRightToLeft": {
                "closure_uid_118192521": {}
              }
            }
          },
          "TreeControl": {
            "superClass_": {
              "add": {
                "closure_uid_118192521": {}
              },
              "addChild": {
                "closure_uid_118192521": {}
              },
              "addChildAt": {
                "closure_uid_118192521": {}
              },
              "closure_uid_118192521": {},
              "computeDepth_": {
                "closure_uid_118192521": {}
              },
              "constructor": {
                "allNodes": {
                  "closure_uid_118192521": {}
                },
                "closure_uid_118192521": {},
                "superClass_": {
                  "addChild": {
                    "closure_uid_118192521": {}
                  },
                  "addChildAt": {
                    "closure_uid_118192521": {}
                  },
                  "closure_uid_118192521": {},
                  "createDom": {
                    "closure_uid_118192521": {}
                  },
                  "dispose": {
                    "closure_uid_118192521": {}
                  },
                  "disposeInternal": {
                    "closure_uid_118192521": {}
                  },
                  "enterDocument": {
                    "closure_uid_118192521": {}
                  },
                  "exitDocument": {
                    "closure_uid_118192521": {}
                  },
                  "forEachChild": {
                    "closure_uid_118192521": {}
                  },
                  "getChild": {
                    "closure_uid_118192521": {}
                  },
                  "getChildAt": {
                    "closure_uid_118192521": {}
                  },
                  "getChildCount": {
                    "closure_uid_118192521": {}
                  },
                  "getContentElement": {
                    "closure_uid_118192521": {}
                  },
                  "getElement": {
                    "closure_uid_118192521": {}
                  },
                  "getId": {
                    "closure_uid_118192521": {}
                  },
                  "getParent": {
                    "closure_uid_118192521": {}
                  },
                  "hasChildren": {
                    "closure_uid_118192521": {}
                  },
                  "indexOfChild": {
                    "closure_uid_118192521": {}
                  },
                  "isInDocument": {
                    "closure_uid_118192521": {}
                  },
                  "isRightToLeft": {
                    "closure_uid_118192521": {}
                  },
                  "render": {
                    "closure_uid_118192521": {}
                  },
                  "renderBefore": {
                    "closure_uid_118192521": {}
                  },
                  "render_": {
                    "closure_uid_118192521": {}
                  },
                  "setElementInternal": {
                    "closure_uid_118192521": {}
                  },
                  "setParent": {
                    "closure_uid_118192521": {}
                  },
                  "setRightToLeft": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "contains": {
                "closure_uid_118192521": {}
              },
              "createDom": {
                "closure_uid_118192521": {}
              },
              "dispose": {
                "closure_uid_118192521": {}
              },
              "disposeInternal": {
                "closure_uid_118192521": {}
              },
              "doNodeCollapsed": {
                "closure_uid_118192521": {}
              },
              "doNodeExpanded": {
                "closure_uid_118192521": {}
              },
              "enterDocument": {
                "closure_uid_118192521": {}
              },
              "exitDocument": {
                "closure_uid_118192521": {}
              },
              "forEachChild": {
                "closure_uid_118192521": {}
              },
              "getBackgroundPosition": {
                "closure_uid_118192521": {}
              },
              "getCalculatedIconClass": {
                "closure_uid_118192521": {}
              },
              "getChild": {
                "closure_uid_118192521": {}
              },
              "getChildAt": {
                "closure_uid_118192521": {}
              },
              "getChildCount": {
                "closure_uid_118192521": {}
              },
              "getChildren": {
                "closure_uid_118192521": {}
              },
              "getChildrenElement": {
                "closure_uid_118192521": {}
              },
              "getConfig": {
                "closure_uid_118192521": {}
              },
              "getContentElement": {
                "closure_uid_118192521": {}
              },
              "getDepth": {
                "closure_uid_118192521": {}
              },
              "getElement": {
                "closure_uid_118192521": {}
              },
              "getExpanded": {
                "closure_uid_118192521": {}
              },
              "getExpandedIconClass": {
                "closure_uid_118192521": {}
              },
              "getFirstChild": {
                "closure_uid_118192521": {}
              },
              "getIconClass": {
                "closure_uid_118192521": {}
              },
              "getIconDom": {
                "closure_uid_118192521": {}
              },
              "getIconElement": {
                "closure_uid_118192521": {}
              },
              "getId": {
                "closure_uid_118192521": {}
              },
              "getLabelDom": {
                "closure_uid_118192521": {}
              },
              "getLabelElement": {
                "closure_uid_118192521": {}
              },
              "getLastChild": {
                "closure_uid_118192521": {}
              },
              "getLastShownDescendant": {
                "closure_uid_118192521": {}
              },
              "getNextShownNode": {
                "closure_uid_118192521": {}
              },
              "getNextSibling": {
                "closure_uid_118192521": {}
              },
              "getParent": {
                "closure_uid_118192521": {}
              },
              "getPixelIndent_": {
                "closure_uid_118192521": {}
              },
              "getPreviousShownNode": {
                "closure_uid_118192521": {}
              },
              "getPreviousSibling": {
                "closure_uid_118192521": {}
              },
              "getRowClassName": {
                "closure_uid_118192521": {}
              },
              "getRowDom": {
                "closure_uid_118192521": {}
              },
              "getRowElement": {
                "closure_uid_118192521": {}
              },
              "getText": {
                "closure_uid_118192521": {}
              },
              "getTree": {
                "closure_uid_118192521": {}
              },
              "hasChildren": {
                "closure_uid_118192521": {}
              },
              "indexOfChild": {
                "closure_uid_118192521": {}
              },
              "initAccessibility": {
                "closure_uid_118192521": {}
              },
              "isInDocument": {
                "closure_uid_118192521": {}
              },
              "isLastSibling": {
                "closure_uid_118192521": {}
              },
              "isRightToLeft": {
                "closure_uid_118192521": {}
              },
              "isSelected": {
                "closure_uid_118192521": {}
              },
              "isUserCollapsible": {
                "closure_uid_118192521": {}
              },
              "onClick_": {
                "closure_uid_118192521": {}
              },
              "onKeyDown": {
                "closure_uid_118192521": {}
              },
              "onMouseDown": {
                "closure_uid_118192521": {}
              },
              "render": {
                "closure_uid_118192521": {}
              },
              "renderBefore": {
                "closure_uid_118192521": {}
              },
              "render_": {
                "closure_uid_118192521": {}
              },
              "select": {
                "closure_uid_118192521": {}
              },
              "selectChild": {
                "closure_uid_118192521": {}
              },
              "selectFirst": {
                "closure_uid_118192521": {}
              },
              "selectNext": {
                "closure_uid_118192521": {}
              },
              "selectParent": {
                "closure_uid_118192521": {}
              },
              "selectPrevious": {
                "closure_uid_118192521": {}
              },
              "setDepth_": {
                "closure_uid_118192521": {}
              },
              "setElementInternal": {
                "closure_uid_118192521": {}
              },
              "setExpanded": {
                "closure_uid_118192521": {}
              },
              "setExpandedInternal": {
                "closure_uid_118192521": {}
              },
              "setParent": {
                "closure_uid_118192521": {}
              },
              "setRightToLeft": {
                "closure_uid_118192521": {}
              },
              "setSelectedInternal": {
                "closure_uid_118192521": {}
              },
              "setText": {
                "closure_uid_118192521": {}
              },
              "setTreeInternal": {
                "closure_uid_118192521": {}
              },
              "toDom": {
                "closure_uid_118192521": {}
              },
              "toggle": {
                "closure_uid_118192521": {}
              },
              "updateExpandIcon": {
                "closure_uid_118192521": {}
              },
              "updateIcon_": {
                "closure_uid_118192521": {}
              },
              "updateRow": {
                "closure_uid_118192521": {}
              }
            }
          },
          "TreeNode": {
            "closure_uid_118192521": {},
            "superClass_": {
              "add": {
                "closure_uid_118192521": {}
              },
              "addChild": {
                "closure_uid_118192521": {}
              },
              "addChildAt": {
                "closure_uid_118192521": {}
              },
              "closure_uid_118192521": {},
              "computeDepth_": {
                "closure_uid_118192521": {}
              },
              "constructor": {
                "allNodes": {
                  "closure_uid_118192521": {}
                },
                "closure_uid_118192521": {},
                "superClass_": {
                  "addChild": {
                    "closure_uid_118192521": {}
                  },
                  "addChildAt": {
                    "closure_uid_118192521": {}
                  },
                  "closure_uid_118192521": {},
                  "createDom": {
                    "closure_uid_118192521": {}
                  },
                  "dispose": {
                    "closure_uid_118192521": {}
                  },
                  "disposeInternal": {
                    "closure_uid_118192521": {}
                  },
                  "enterDocument": {
                    "closure_uid_118192521": {}
                  },
                  "exitDocument": {
                    "closure_uid_118192521": {}
                  },
                  "forEachChild": {
                    "closure_uid_118192521": {}
                  },
                  "getChild": {
                    "closure_uid_118192521": {}
                  },
                  "getChildAt": {
                    "closure_uid_118192521": {}
                  },
                  "getChildCount": {
                    "closure_uid_118192521": {}
                  },
                  "getContentElement": {
                    "closure_uid_118192521": {}
                  },
                  "getElement": {
                    "closure_uid_118192521": {}
                  },
                  "getId": {
                    "closure_uid_118192521": {}
                  },
                  "getParent": {
                    "closure_uid_118192521": {}
                  },
                  "hasChildren": {
                    "closure_uid_118192521": {}
                  },
                  "indexOfChild": {
                    "closure_uid_118192521": {}
                  },
                  "isInDocument": {
                    "closure_uid_118192521": {}
                  },
                  "isRightToLeft": {
                    "closure_uid_118192521": {}
                  },
                  "render": {
                    "closure_uid_118192521": {}
                  },
                  "renderBefore": {
                    "closure_uid_118192521": {}
                  },
                  "render_": {
                    "closure_uid_118192521": {}
                  },
                  "setElementInternal": {
                    "closure_uid_118192521": {}
                  },
                  "setParent": {
                    "closure_uid_118192521": {}
                  },
                  "setRightToLeft": {
                    "closure_uid_118192521": {}
                  }
                }
              },
              "contains": {
                "closure_uid_118192521": {}
              },
              "createDom": {
                "closure_uid_118192521": {}
              },
              "dispose": {
                "closure_uid_118192521": {}
              },
              "disposeInternal": {
                "closure_uid_118192521": {}
              },
              "doNodeCollapsed": {
                "closure_uid_118192521": {}
              },
              "doNodeExpanded": {
                "closure_uid_118192521": {}
              },
              "enterDocument": {
                "closure_uid_118192521": {}
              },
              "exitDocument": {
                "closure_uid_118192521": {}
              },
              "forEachChild": {
                "closure_uid_118192521": {}
              },
              "getBackgroundPosition": {
                "closure_uid_118192521": {}
              },
              "getCalculatedIconClass": {
                "closure_uid_118192521": {}
              },
              "getChild": {
                "closure_uid_118192521": {}
              },
              "getChildAt": {
                "closure_uid_118192521": {}
              },
              "getChildCount": {
                "closure_uid_118192521": {}
              },
              "getChildren": {
                "closure_uid_118192521": {}
              },
              "getChildrenElement": {
                "closure_uid_118192521": {}
              },
              "getConfig": {
                "closure_uid_118192521": {}
              },
              "getContentElement": {
                "closure_uid_118192521": {}
              },
              "getDepth": {
                "closure_uid_118192521": {}
              },
              "getElement": {
                "closure_uid_118192521": {}
              },
              "getExpanded": {
                "closure_uid_118192521": {}
              },
              "getExpandedIconClass": {
                "closure_uid_118192521": {}
              },
              "getFirstChild": {
                "closure_uid_118192521": {}
              },
              "getIconClass": {
                "closure_uid_118192521": {}
              },
              "getIconDom": {
                "closure_uid_118192521": {}
              },
              "getIconElement": {
                "closure_uid_118192521": {}
              },
              "getId": {
                "closure_uid_118192521": {}
              },
              "getLabelDom": {
                "closure_uid_118192521": {}
              },
              "getLabelElement": {
                "closure_uid_118192521": {}
              },
              "getLastChild": {
                "closure_uid_118192521": {}
              },
              "getLastShownDescendant": {
                "closure_uid_118192521": {}
              },
              "getNextShownNode": {
                "closure_uid_118192521": {}
              },
              "getNextSibling": {
                "closure_uid_118192521": {}
              },
              "getParent": {
                "closure_uid_118192521": {}
              },
              "getPixelIndent_": {
                "closure_uid_118192521": {}
              },
              "getPreviousShownNode": {
                "closure_uid_118192521": {}
              },
              "getPreviousSibling": {
                "closure_uid_118192521": {}
              },
              "getRowClassName": {
                "closure_uid_118192521": {}
              },
              "getRowDom": {
                "closure_uid_118192521": {}
              },
              "getRowElement": {
                "closure_uid_118192521": {}
              },
              "getText": {
                "closure_uid_118192521": {}
              },
              "getTree": {
                "closure_uid_118192521": {}
              },
              "hasChildren": {
                "closure_uid_118192521": {}
              },
              "indexOfChild": {
                "closure_uid_118192521": {}
              },
              "initAccessibility": {
                "closure_uid_118192521": {}
              },
              "isInDocument": {
                "closure_uid_118192521": {}
              },
              "isLastSibling": {
                "closure_uid_118192521": {}
              },
              "isRightToLeft": {
                "closure_uid_118192521": {}
              },
              "isSelected": {
                "closure_uid_118192521": {}
              },
              "isUserCollapsible": {
                "closure_uid_118192521": {}
              },
              "onClick_": {
                "closure_uid_118192521": {}
              },
              "onKeyDown": {
                "closure_uid_118192521": {}
              },
              "onMouseDown": {
                "closure_uid_118192521": {}
              },
              "render": {
                "closure_uid_118192521": {}
              },
              "renderBefore": {
                "closure_uid_118192521": {}
              },
              "render_": {
                "closure_uid_118192521": {}
              },
              "select": {
                "closure_uid_118192521": {}
              },
              "selectChild": {
                "closure_uid_118192521": {}
              },
              "selectFirst": {
                "closure_uid_118192521": {}
              },
              "selectNext": {
                "closure_uid_118192521": {}
              },
              "selectParent": {
                "closure_uid_118192521": {}
              },
              "selectPrevious": {
                "closure_uid_118192521": {}
              },
              "setDepth_": {
                "closure_uid_118192521": {}
              },
              "setElementInternal": {
                "closure_uid_118192521": {}
              },
              "setExpanded": {
                "closure_uid_118192521": {}
              },
              "setExpandedInternal": {
                "closure_uid_118192521": {}
              },
              "setParent": {
                "closure_uid_118192521": {}
              },
              "setRightToLeft": {
                "closure_uid_118192521": {}
              },
              "setSelectedInternal": {
                "closure_uid_118192521": {}
              },
              "setText": {
                "closure_uid_118192521": {}
              },
              "setTreeInternal": {
                "closure_uid_118192521": {}
              },
              "toDom": {
                "closure_uid_118192521": {}
              },
              "toggle": {
                "closure_uid_118192521": {}
              },
              "updateExpandIcon": {
                "closure_uid_118192521": {}
              },
              "updateIcon_": {
                "closure_uid_118192521": {}
              },
              "updateRow": {
                "closure_uid_118192521": {}
              }
            }
          }
        },
        "unbindEvent_": function () {},
        "user": {
          "keyMap": {
            "createDefaultKeyMap": function () {},
            "createSerializedKey": function () {},
            "getActionByKeyCode": function () {},
            "getKeyByAction": function () {},
            "getKeyMap": function () {},
            "map_": {},
            "modifierKeys": {
              "ALT": {},
              "CONTROL": {},
              "META": {},
              "SHIFT": {}
            },
            "serializeKeyEvent": function () {},
            "setActionForKey": function () {},
            "setKeyMap": function () {}
          }
        },
        "utils": {}
      },
      "FileReader": {
        "DONE": {},
        "EMPTY": {},
        "LOADING": {}
      },
      "Float32Array": function () {},
      "Float64Array": function () {},
      "Int16Array": function () {},
      "Int32Array": function () {},
      "Int8Array": function () {},
      "Uint16Array": function () {},
      "Uint32Array": function () {},
      "Uint8Array": function () {},
      "Uint8ClampedArray": function () {},
      "XMLHttpRequest": {
        "DONE": {},
        "HEADERS_RECEIVED": {},
        "LOADING": {},
        "OPENED": {},
        "UNSENT": {}
      },
      "__stopAllTimers": function () {},
      "__timers": {},
      "_core": {
        "Attr": function () {},
        "Blob": function () {},
        "CDATASection": function () {},
        "CSSImportRule": function () {},
        "CSSMediaRule": function () {},
        "CSSRule": {
          "CHARSET_RULE": {},
          "COUNTER_STYLE_RULE": {},
          "DOCUMENT_RULE": {},
          "FONT_FACE_RULE": {},
          "FONT_FEATURE_VALUES_RULE": {},
          "IMPORT_RULE": {},
          "KEYFRAMES_RULE": {},
          "KEYFRAME_RULE": {},
          "MARGIN_RULE": {},
          "MEDIA_RULE": {},
          "NAMESPACE_RULE": {},
          "PAGE_RULE": {},
          "REGION_STYLE_RULE": {},
          "STYLE_RULE": {},
          "SUPPORTS_RULE": {},
          "UNKNOWN_RULE": {},
          "VIEWPORT_RULE": {}
        },
        "CSSStyleDeclaration": function () {},
        "CSSStyleRule": {
          "parse": function () {}
        },
        "CSSStyleSheet": function () {},
        "CharacterData": function () {},
        "Comment": function () {},
        "CustomEvent": function () {},
        "DOMException": {
          "ABORT_ERR": {},
          "DATA_CLONE_ERR": {},
          "HIERARCHY_REQUEST_ERR": {},
          "INDEX_SIZE_ERR": {},
          "INUSE_ATTRIBUTE_ERR": {},
          "INVALID_ACCESS_ERR": {},
          "INVALID_CHARACTER_ERR": {},
          "INVALID_MODIFICATION_ERR": {},
          "INVALID_NODE_TYPE_ERR": {},
          "INVALID_STATE_ERR": {},
          "NAMESPACE_ERR": {},
          "NETWORK_ERR": {},
          "NOT_FOUND_ERR": {},
          "NOT_SUPPORTED_ERR": {},
          "NO_MODIFICATION_ALLOWED_ERR": {},
          "QUOTA_EXCEEDED_ERR": {},
          "SECURITY_ERR": {},
          "SYNTAX_ERR": {},
          "TIMEOUT_ERR": {},
          "URL_MISMATCH_ERR": {},
          "WRONG_DOCUMENT_ERR": {},
          "stackTraceLimit": {}
        },
        "DOMImplementation": function () {},
        "DOMParser": function () {},
        "DOMTokenList": function () {},
        "Document": function () {},
        "DocumentFragment": function () {},
        "DocumentType": function () {},
        "Element": function () {},
        "ErrorEvent": function () {},
        "Event": {
          "AT_TARGET": {},
          "BUBBLING_PHASE": {},
          "CAPTURING_PHASE": {},
          "NONE": {}
        },
        "EventTarget": function () {},
        "File": function () {},
        "FileList": function () {},
        "FocusEvent": function () {},
        "FormData": function () {},
        "HTMLAnchorElement": function () {},
        "HTMLAppletElement": function () {},
        "HTMLAreaElement": function () {},
        "HTMLAudioElement": function () {},
        "HTMLBRElement": function () {},
        "HTMLBaseElement": function () {},
        "HTMLBodyElement": function () {},
        "HTMLButtonElement": function () {},
        "HTMLCanvasElement": function () {},
        "HTMLCollection": function () {},
        "HTMLDListElement": function () {},
        "HTMLDataElement": function () {},
        "HTMLDataListElement": function () {},
        "HTMLDialogElement": function () {},
        "HTMLDirectoryElement": function () {},
        "HTMLDivElement": function () {},
        "HTMLDocument": function () {},
        "HTMLElement": function () {},
        "HTMLEmbedElement": function () {},
        "HTMLFieldSetElement": function () {},
        "HTMLFontElement": function () {},
        "HTMLFormElement": function () {},
        "HTMLFrameElement": function () {},
        "HTMLFrameSetElement": function () {},
        "HTMLHRElement": function () {},
        "HTMLHeadElement": function () {},
        "HTMLHeadingElement": function () {},
        "HTMLHtmlElement": function () {},
        "HTMLIFrameElement": function () {},
        "HTMLImageElement": function () {},
        "HTMLInputElement": function () {},
        "HTMLLIElement": function () {},
        "HTMLLabelElement": function () {},
        "HTMLLegendElement": function () {},
        "HTMLLinkElement": function () {},
        "HTMLMapElement": function () {},
        "HTMLMediaElement": {
          "HAVE_CURRENT_DATA": {},
          "HAVE_ENOUGH_DATA": {},
          "HAVE_FUTURE_DATA": {},
          "HAVE_METADATA": {},
          "HAVE_NOTHING": {},
          "NETWORK_EMPTY": {},
          "NETWORK_IDLE": {},
          "NETWORK_LOADING": {},
          "NETWORK_NO_SOURCE": {}
        },
        "HTMLMenuElement": function () {},
        "HTMLMetaElement": function () {},
        "HTMLMeterElement": function () {},
        "HTMLModElement": function () {},
        "HTMLOListElement": function () {},
        "HTMLObjectElement": function () {},
        "HTMLOptGroupElement": function () {},
        "HTMLOptionElement": function () {},
        "HTMLOutputElement": function () {},
        "HTMLParagraphElement": function () {},
        "HTMLParamElement": function () {},
        "HTMLPreElement": function () {},
        "HTMLProgressElement": function () {},
        "HTMLQuoteElement": function () {},
        "HTMLScriptElement": function () {},
        "HTMLSelectElement": function () {},
        "HTMLSourceElement": function () {},
        "HTMLSpanElement": function () {},
        "HTMLStyleElement": function () {},
        "HTMLTableCaptionElement": function () {},
        "HTMLTableCellElement": function () {},
        "HTMLTableColElement": function () {},
        "HTMLTableDataCellElement": function () {},
        "HTMLTableElement": function () {},
        "HTMLTableHeaderCellElement": function () {},
        "HTMLTableRowElement": function () {},
        "HTMLTableSectionElement": function () {},
        "HTMLTemplateElement": function () {},
        "HTMLTextAreaElement": function () {},
        "HTMLTimeElement": function () {},
        "HTMLTitleElement": function () {},
        "HTMLTrackElement": {
          "ERROR": {},
          "LOADED": {},
          "LOADING": {},
          "NONE": {}
        },
        "HTMLUListElement": function () {},
        "HTMLUnknownElement": function () {},
        "HTMLVideoElement": function () {},
        "HashChangeEvent": function () {},
        "History": function () {},
        "KeyboardEvent": {
          "DOM_KEY_LOCATION_LEFT": {},
          "DOM_KEY_LOCATION_NUMPAD": {},
          "DOM_KEY_LOCATION_RIGHT": {},
          "DOM_KEY_LOCATION_STANDARD": {}
        },
        "Location": function () {},
        "MediaList": function () {},
        "MessageEvent": function () {},
        "MouseEvent": function () {},
        "NamedNodeMap": function () {},
        "Node": {
          "ATTRIBUTE_NODE": {},
          "CDATA_SECTION_NODE": {},
          "COMMENT_NODE": {},
          "DOCUMENT_FRAGMENT_NODE": {},
          "DOCUMENT_NODE": {},
          "DOCUMENT_POSITION_CONTAINED_BY": {},
          "DOCUMENT_POSITION_CONTAINS": {},
          "DOCUMENT_POSITION_DISCONNECTED": {},
          "DOCUMENT_POSITION_FOLLOWING": {},
          "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": {},
          "DOCUMENT_POSITION_PRECEDING": {},
          "DOCUMENT_TYPE_NODE": {},
          "ELEMENT_NODE": {},
          "ENTITY_NODE": {},
          "ENTITY_REFERENCE_NODE": {},
          "NOTATION_NODE": {},
          "PROCESSING_INSTRUCTION_NODE": {},
          "TEXT_NODE": {}
        },
        "NodeFilter": {
          "FILTER_ACCEPT": {},
          "FILTER_REJECT": {},
          "FILTER_SKIP": {},
          "SHOW_ALL": {},
          "SHOW_ATTRIBUTE": {},
          "SHOW_CDATA_SECTION": {},
          "SHOW_COMMENT": {},
          "SHOW_DOCUMENT": {},
          "SHOW_DOCUMENT_FRAGMENT": {},
          "SHOW_DOCUMENT_TYPE": {},
          "SHOW_ELEMENT": {},
          "SHOW_ENTITY": {},
          "SHOW_ENTITY_REFERENCE": {},
          "SHOW_NOTATION": {},
          "SHOW_PROCESSING_INSTRUCTION": {},
          "SHOW_TEXT": {},
          "acceptNode": function () {}
        },
        "NodeIterator": function () {},
        "NodeList": function () {},
        "PopStateEvent": function () {},
        "ProcessingInstruction": function () {},
        "ProgressEvent": function () {},
        "StyleSheet": function () {},
        "StyleSheetList": function () {},
        "Text": function () {},
        "TouchEvent": function () {},
        "UIEvent": function () {},
        "URL": function () {},
        "Window": function () {},
        "XMLDocument": function () {},
        "XMLHttpRequestEventTarget": function () {},
        "XMLHttpRequestUpload": function () {},
        "XPathEvaluator": function () {},
        "XPathException": {
          "INVALID_EXPRESSION_ERR": {},
          "TYPE_ERR": {}
        },
        "XPathExpression": function () {},
        "XPathResult": {
          "ANY_TYPE": {},
          "ANY_UNORDERED_NODE_TYPE": {},
          "BOOLEAN_TYPE": {},
          "FIRST_ORDERED_NODE_TYPE": {},
          "NUMBER_TYPE": {},
          "ORDERED_NODE_ITERATOR_TYPE": {},
          "ORDERED_NODE_SNAPSHOT_TYPE": {},
          "STRING_TYPE": {},
          "UNORDERED_NODE_ITERATOR_TYPE": {},
          "UNORDERED_NODE_SNAPSHOT_TYPE": {}
        }
      },
      "_currentSessionHistoryEntryIndex": {},
      "_document": {},
      "_frameElement": {},
      "_globalProxy": {},
      "_length": {},
      "_parent": {},
      "_sessionHistory": {},
      "_top": {},
      "_virtualConsole": {
        "_events": {
          "error": function () {}
        },
        "_eventsCount": {},
        "_maxListeners": {},
        "addListener": function () {},
        "emit": function () {},
        "eventNames": function () {},
        "getMaxListeners": function () {},
        "listenerCount": function () {},
        "listeners": function () {},
        "off": function () {},
        "on": function () {},
        "once": function () {},
        "prependListener": function () {},
        "prependOnceListener": function () {},
        "rawListeners": function () {},
        "removeAllListeners": function () {},
        "removeListener": function () {},
        "setMaxListeners": function () {}
      },
      "addEventListener": function () {},
      "alert": function () {},
      "atob": function () {},
      "blur": function () {},
      "btoa": function () {},
      "clearInterval": function () {},
      "clearTimeout": function () {},
      "close": function () {},
      "confirm": function () {},
      "console": {
        "assert": function () {},
        "clear": function () {},
        "count": function () {},
        "debug": function () {},
        "error": function () {},
        "group": function () {},
        "groupCollapsed": function () {},
        "groupEnd": function () {},
        "info": function () {},
        "log": function () {},
        "table": function () {},
        "time": function () {},
        "timeEnd": function () {},
        "trace": function () {},
        "warn": function () {}
      },
      "createPopup": function () {},
      "dispatchEvent": function () {},
      "document": {},
      "focus": function () {},
      "frameElement": {},
      "frames": {},
      "getComputedStyle": function () {},
      "history": {
        "back": function () {},
        "forward": function () {},
        "go": function () {},
        "length": {},
        "pushState": function () {},
        "replaceState": function () {},
        "state": {},
        "toString": function () {}
      },
      "innerHeight": {},
      "innerWidth": {},
      "length": {},
      "location": {
        "assign": function () {},
        "hash": {},
        "host": {},
        "hostname": {},
        "href": {},
        "origin": {},
        "pathname": {},
        "port": {},
        "protocol": {},
        "reload": function () {},
        "replace": function () {},
        "search": {},
        "toString": function () {},
        "valueOf": function () {}
      },
      "moveBy": function () {},
      "moveTo": function () {},
      "name": {},
      "navigator": {
        "appCodeName": {},
        "appName": {},
        "appVersion": {},
        "cookieEnabled": {},
        "hardwareConcurrency": {},
        "javaEnabled": function () {},
        "language": {},
        "languages": {},
        "onLine": {},
        "platform": {},
        "product": {},
        "productSub": {},
        "toString": function () {},
        "userAgent": {},
        "vendor": {},
        "vendorSub": {}
      },
      "open": function () {},
      "outerHeight": {},
      "outerWidth": {},
      "pageXOffset": {},
      "pageYOffset": {},
      "parent": {},
      "postMessage": function () {},
      "print": function () {},
      "prompt": function () {},
      "removeEventListener": function () {},
      "resizeBy": function () {},
      "resizeTo": function () {},
      "screen": {
        "height": {},
        "width": {}
      },
      "screenLeft": {},
      "screenTop": {},
      "screenX": {},
      "screenY": {},
      "scroll": function () {},
      "scrollBy": function () {},
      "scrollLeft": {},
      "scrollTo": function () {},
      "scrollTop": {},
      "scrollX": {},
      "scrollY": {},
      "self": {},
      "setInterval": function () {},
      "setTimeout": function () {},
      "stop": function () {},
      "toString": function () {},
      "top": {},
      "window": {}
    },
    "is3dSupported": function () {},
    "isRightButton": function () {},
    "isTargetInput": function () {},
    "math": {
      "clamp": function () {},
      "toDegrees": function () {},
      "toRadians": function () {}
    },
    "mouseToSvg": function () {},
    "noEvent": function () {},
    "object": {
      "inherits": function () {},
      "mixin": function () {},
      "values": function () {}
    },
    "replaceMessageReferences": function () {},
    "runAfterPageLoad": function () {},
    "screenToWsCoordinates": function () {},
    "string": {
      "commonWordPrefix": function () {},
      "commonWordSuffix": function () {},
      "shortestStringLength": function () {},
      "startsWith": function () {},
      "wrap": function () {},
      "wrapLine_": function () {},
      "wrapMutate_": function () {},
      "wrapScore_": function () {},
      "wrapToText_": function () {}
    },
    "style": {
      "getBorderBox": function () {},
      "getCascadedStyle": function () {},
      "getComputedStyle": function () {},
      "getContainerOffsetToScrollInto": function () {},
      "getPageOffset": function () {},
      "getSize": function () {},
      "getSizeWithDisplay_": function () {},
      "getStyle_": function () {},
      "getViewportPageOffset": function () {},
      "isRightToLeft": function () {},
      "scrollIntoContainerView": function () {},
      "setElementShown": function () {}
    },
    "svgPaths": {
      "arc": function () {},
      "curve": function () {},
      "line": function () {},
      "lineOnAxis": function () {},
      "lineTo": function () {},
      "moveBy": function () {},
      "moveTo": function () {},
      "point": function () {}
    },
    "tokenizeInterpolation": function () {},
    "tokenizeInterpolation_": function () {},
    "uiMenu": {
      "adjustBBoxesForRTL": function () {},
      "getSize": function () {}
    },
    "userAgent": {
      "ANDROID": {},
      "EDGE": {},
      "GECKO": {},
      "IE": {},
      "IPAD": {},
      "IPHONE": {},
      "IPOD": {},
      "JAVA_FX": {},
      "MAC": {},
      "MOBILE": {},
      "TABLET": {},
      "WEBKIT": {},
      "raw": {}
    },
    "xml": {
      "NAME_SPACE": {},
      "createElement": function () {},
      "createTextNode": function () {},
      "document": function () {},
      "domToText": function () {},
      "textToDomDocument": function () {}
    }
  }
};
Blockly.ASTNode.prototype = {
  "findFirstFieldOrInput_": function () {},
  "findNextForField_": function () {},
  "findNextForInput_": function () {},
  "findPrevForField_": function () {},
  "findPrevForInput_": function () {},
  "findPreviousEditableField_": function () {},
  "findTopASTNodeForBlock_": function () {},
  "getLocation": function () {},
  "getOutAstNodeForBlock_": function () {},
  "getType": function () {},
  "getWsCoordinate": function () {},
  "in": function () {},
  "isConnection": function () {},
  "navigateBetweenStacks_": function () {},
  "next": function () {},
  "out": function () {},
  "prev": function () {},
  "processParams_": function () {}
};
Blockly.Block.prototype = {
  "allInputsFilled": function () {},
  "appendDummyInput": function () {},
  "appendInput_": function () {},
  "appendStatementInput": function () {},
  "appendValueInput": function () {},
  "bumpNeighbours": function () {},
  "colourSecondary_": function () {},
  "colourTertiary_": function () {},
  "colour_": function () {},
  "data": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "getChildren": function () {},
  "getColour": function () {},
  "getColourBorder": function () {},
  "getColourSecondary": function () {},
  "getColourShadow": function () {},
  "getColourTertiary": function () {},
  "getCommentText": function () {},
  "getConnections_": function () {},
  "getDescendants": function () {},
  "getField": function () {},
  "getFieldValue": function () {},
  "getFirstStatementConnection": function () {},
  "getHue": function () {},
  "getInheritedDisabled": function () {},
  "getInput": function () {},
  "getInputTargetBlock": function () {},
  "getInputWithBlock": function () {},
  "getInputsInline": function () {},
  "getMatchingConnection": function () {},
  "getNextBlock": function () {},
  "getOnlyValueConnection_": function () {},
  "getParent": function () {},
  "getPreviousBlock": function () {},
  "getRelativeToSurfaceXY": function () {},
  "getRootBlock": function () {},
  "getStyleName": function () {},
  "getSurroundParent": function () {},
  "getTopStackBlock": function () {},
  "getVarModels": function () {},
  "getVars": function () {},
  "hue_": function () {},
  "initModel": function () {},
  "interpolate_": function () {},
  "isCollapsed": function () {},
  "isDeletable": function () {},
  "isDuplicatable": function () {},
  "isEditable": function () {},
  "isEnabled": function () {},
  "isInsertionMarker": function () {},
  "isMovable": function () {},
  "isShadow": function () {},
  "jsonInit": function () {},
  "jsonInitColour_": function () {},
  "jsonInitStyle_": function () {},
  "lastConnectionInStack": function () {},
  "makeConnection_": function () {},
  "mixin": function () {},
  "moveBy": function () {},
  "moveInputBefore": function () {},
  "moveNumberedInputBefore": function () {},
  "removeInput": function () {},
  "renameVarById": function () {},
  "setCollapsed": function () {},
  "setColour": function () {},
  "setCommentText": function () {},
  "setDeletable": function () {},
  "setDisabled": function () {},
  "setEditable": function () {},
  "setEnabled": function () {},
  "setFieldValue": function () {},
  "setHelpUrl": function () {},
  "setInputsInline": function () {},
  "setInsertionMarker": function () {},
  "setMovable": function () {},
  "setMutator": function () {},
  "setNextStatement": function () {},
  "setOnChange": function () {},
  "setOutput": function () {},
  "setParent": function () {},
  "setPreviousStatement": function () {},
  "setShadow": function () {},
  "setStyle": function () {},
  "setTooltip": function () {},
  "setWarningText": function () {},
  "styleName_": function () {},
  "toDevString": function () {},
  "toString": function () {},
  "unplug": function () {},
  "unplugFromRow_": function () {},
  "unplugFromStack_": function () {},
  "updateVarName": function () {}
};
Blockly.BlockDragSurfaceSvg.prototype = {
  "SVG_": function () {},
  "clearAndHide": function () {},
  "container_": function () {},
  "createDom": function () {},
  "dragGroup_": function () {},
  "getCurrentBlock": function () {},
  "getGroup": function () {},
  "getSurfaceTranslation": function () {},
  "scale_": function () {},
  "setBlocksAndShow": function () {},
  "surfaceXY_": function () {},
  "translateAndScaleGroup": function () {},
  "translateSurface": function () {},
  "translateSurfaceInternal_": function () {}
};
Blockly.BlockDragger.prototype = {
  "dispose": function () {},
  "dragBlock": function () {},
  "dragIcons_": function () {},
  "endBlockDrag": function () {},
  "fireMoveEvent_": function () {},
  "getInsertionMarkers": function () {},
  "maybeDeleteBlock_": function () {},
  "pixelsToWorkspaceUnits_": function () {},
  "startBlockDrag": function () {},
  "updateCursorDuringBlockDrag_": function () {}
};
Blockly.BlockSvg.prototype = {
  "addSelect": function () {},
  "allInputsFilled": function () {},
  "appendDummyInput": function () {},
  "appendInput_": function () {},
  "appendStatementInput": function () {},
  "appendValueInput": function () {},
  "bringToFront": function () {},
  "bumpNeighbours": function () {},
  "clearTransformAttributes_": function () {},
  "colourSecondary_": function () {},
  "colourTertiary_": function () {},
  "colour_": function () {},
  "comment": function () {},
  "commentIcon_": function () {},
  "constructor": function () {},
  "createTabList_": function () {},
  "data": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "dragStartXY_": function () {},
  "generateContextMenu": function () {},
  "getBoundingRectangle": function () {},
  "getChildren": function () {},
  "getColour": function () {},
  "getColourBorder": function () {},
  "getColourSecondary": function () {},
  "getColourShadow": function () {},
  "getColourTertiary": function () {},
  "getCommentIcon": function () {},
  "getCommentText": function () {},
  "getConnections_": function () {},
  "getDescendants": function () {},
  "getField": function () {},
  "getFieldValue": function () {},
  "getFirstStatementConnection": function () {},
  "getHeightWidth": function () {},
  "getHue": function () {},
  "getIcons": function () {},
  "getInheritedDisabled": function () {},
  "getInput": function () {},
  "getInputTargetBlock": function () {},
  "getInputWithBlock": function () {},
  "getInputsInline": function () {},
  "getMatchingConnection": function () {},
  "getNextBlock": function () {},
  "getOnlyValueConnection_": function () {},
  "getParent": function () {},
  "getPreviousBlock": function () {},
  "getRelativeToSurfaceXY": function () {},
  "getRootBlock": function () {},
  "getStyleName": function () {},
  "getSurroundParent": function () {},
  "getSvgRoot": function () {},
  "getTopStackBlock": function () {},
  "getVarModels": function () {},
  "getVars": function () {},
  "height": function () {},
  "highlightForReplacement": function () {},
  "hue_": function () {},
  "initModel": function () {},
  "initSvg": function () {},
  "interpolate_": function () {},
  "isCollapsed": function () {},
  "isDeletable": function () {},
  "isDuplicatable": function () {},
  "isEditable": function () {},
  "isEnabled": function () {},
  "isInsertionMarker": function () {},
  "isMovable": function () {},
  "isShadow": function () {},
  "jsonInit": function () {},
  "jsonInitColour_": function () {},
  "jsonInitStyle_": function () {},
  "lastConnectionInStack": function () {},
  "makeConnection_": function () {},
  "markDirty": function () {},
  "mixin": function () {},
  "moveBy": function () {},
  "moveConnections_": function () {},
  "moveDuringDrag": function () {},
  "moveInputBefore": function () {},
  "moveNumberedInputBefore": function () {},
  "moveOffDragSurface_": function () {},
  "moveTo": function () {},
  "moveToDragSurface_": function () {},
  "mutator": function () {},
  "onMouseDown_": function () {},
  "positionNearConnection": function () {},
  "positionNewBlock": function () {},
  "removeInput": function () {},
  "removeSelect": function () {},
  "renameVarById": function () {},
  "render": function () {},
  "scheduleSnapAndBump": function () {},
  "select": function () {},
  "setBorderColour_": function () {},
  "setCollapsed": function () {},
  "setColour": function () {},
  "setCommentText": function () {},
  "setConnectionsHidden": function () {},
  "setCursorSvg": function () {},
  "setDeletable": function () {},
  "setDeleteStyle": function () {},
  "setDisabled": function () {},
  "setDragging": function () {},
  "setEditable": function () {},
  "setEnabled": function () {},
  "setFieldValue": function () {},
  "setHelpUrl": function () {},
  "setHighlighted": function () {},
  "setInputsInline": function () {},
  "setInsertionMarker": function () {},
  "setMarkerSvg": function () {},
  "setMovable": function () {},
  "setMutator": function () {},
  "setNextStatement": function () {},
  "setOnChange": function () {},
  "setOutput": function () {},
  "setParent": function () {},
  "setPreviousStatement": function () {},
  "setShadow": function () {},
  "setShadowColour_": function () {},
  "setStyle": function () {},
  "setTooltip": function () {},
  "setWarningText": function () {},
  "showContextMenu_": function () {},
  "showHelp_": function () {},
  "snapToGrid": function () {},
  "styleName_": function () {},
  "tab": function () {},
  "toDevString": function () {},
  "toString": function () {},
  "translate": function () {},
  "unplug": function () {},
  "unplugFromRow_": function () {},
  "unplugFromStack_": function () {},
  "unselect": function () {},
  "updateColour": function () {},
  "updateConnectionLocations_": function () {},
  "updateDisabled": function () {},
  "updateMovable": function () {},
  "updateVarName": function () {},
  "warning": function () {},
  "warningTextDb_": function () {},
  "width": function () {}
};
Blockly.Bubble.prototype = {
  "anchorXY_": function () {},
  "autoLayout_": function () {},
  "bubbleMouseDown_": function () {},
  "createDom_": function () {},
  "dispose": function () {},
  "getBubbleSize": function () {},
  "getOptimalRelativeLeft_": function () {},
  "getOptimalRelativeTop_": function () {},
  "getOverlap_": function () {},
  "getRelativeToSurfaceXY": function () {},
  "getSvgRoot": function () {},
  "height_": function () {},
  "isDeletable": function () {},
  "layoutBubble_": function () {},
  "moveDuringDrag": function () {},
  "moveTo": function () {},
  "positionBubble_": function () {},
  "promote_": function () {},
  "registerResizeEvent": function () {},
  "relativeLeft_": function () {},
  "relativeTop_": function () {},
  "renderArrow_": function () {},
  "rendered_": function () {},
  "resizeCallback_": function () {},
  "resizeMouseDown_": function () {},
  "resizeMouseMove_": function () {},
  "setAnchorLocation": function () {},
  "setAutoLayout": function () {},
  "setBubbleSize": function () {},
  "setColour": function () {},
  "setSvgId": function () {},
  "showContextMenu_": function () {},
  "width_": function () {}
};
Blockly.BubbleDragger.prototype = {
  "dispose": function () {},
  "dragBubble": function () {},
  "endBubbleDrag": function () {},
  "fireMoveEvent_": function () {},
  "maybeDeleteBubble_": function () {},
  "moveToDragSurface_": function () {},
  "pixelsToWorkspaceUnits_": function () {},
  "startBubbleDrag": function () {},
  "updateCursorDuringBubbleDrag_": function () {}
};
Blockly.Comment.prototype = {
  "SIZE": function () {},
  "bubble_": function () {},
  "collapseHidden": function () {},
  "computeIconLocation": function () {},
  "constructor": function () {},
  "createBubble_": function () {},
  "createEditableBubble_": function () {},
  "createEditor_": function () {},
  "createIcon": function () {},
  "createNonEditableBubble_": function () {},
  "dispose": function () {},
  "disposeBubble_": function () {},
  "drawIcon_": function () {},
  "getBubbleSize": function () {},
  "getCorrectedSize": function () {},
  "getIconLocation": function () {},
  "getText": function () {},
  "iconClick_": function () {},
  "iconXY_": function () {},
  "isVisible": function () {},
  "onBubbleResize_": function () {},
  "resizeTextarea_": function () {},
  "setBubbleSize": function () {},
  "setIconLocation": function () {},
  "setText": function () {},
  "setVisible": function () {},
  "startEdit_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateText": function () {}
};
Blockly.Component.prototype = {
  "addChild": function () {},
  "addChildAt": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getContentElement": function () {},
  "getElement": function () {},
  "getId": function () {},
  "getParent": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "isInDocument": function () {},
  "isRightToLeft": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "setElementInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {}
};
Blockly.Connection.prototype = {
  "canConnectToPrevious_": function () {},
  "canConnectWithReason_": function () {},
  "checkConnection_": function () {},
  "checkType_": function () {},
  "check_": function () {},
  "connect": function () {},
  "connect_": function () {},
  "disconnect": function () {},
  "disconnectInternal_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "getCheck": function () {},
  "getParentInput": function () {},
  "getShadowDom": function () {},
  "getSourceBlock": function () {},
  "isConnected": function () {},
  "isConnectionAllowed": function () {},
  "isSuperior": function () {},
  "neighbours_": function () {},
  "onCheckChanged_": function () {},
  "onFailedConnect": function () {},
  "respawnShadow_": function () {},
  "setCheck": function () {},
  "setShadowDom": function () {},
  "shadowDom_": function () {},
  "targetBlock": function () {},
  "targetConnection": function () {},
  "toString": function () {},
  "x_": function () {},
  "y_": function () {}
};
Blockly.ConnectionDB.prototype = {
  "addConnection": function () {},
  "findConnection": function () {},
  "findPositionForConnection_": function () {},
  "getNeighbours": function () {},
  "isInYRange_": function () {},
  "removeConnection_": function () {},
  "searchForClosest": function () {}
};
Blockly.Cursor.prototype = {
  "getCurNode": function () {},
  "getDrawer": function () {},
  "hide": function () {},
  "in": function () {},
  "next": function () {},
  "out": function () {},
  "prev": function () {},
  "setCurNode": function () {},
  "setDrawer": function () {}
};
Blockly.CursorSvg.prototype = {
  "createCursorSvg_": function () {},
  "createDom": function () {},
  "currentCursorSvg": function () {},
  "dispose": function () {},
  "draw": function () {},
  "flipRtl_": function () {},
  "getSvgRoot": function () {},
  "hide": function () {},
  "positionBlock_": function () {},
  "positionInput_": function () {},
  "positionLine_": function () {},
  "positionOutput_": function () {},
  "positionPrevious_": function () {},
  "positionRect_": function () {},
  "setParent_": function () {},
  "showCurrent_": function () {},
  "showWithBlockPrevOutput_": function () {},
  "showWithCoordinates_": function () {},
  "showWithField_": function () {},
  "showWithInput_": function () {},
  "showWithNext_": function () {},
  "showWithStack_": function () {}
};
Blockly.Events.Abstract.prototype = {
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.BlockBase.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.BlockChange.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.BlockChange.superClass_.constructor.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.BlockCreate.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.BlockCreate.superClass_.constructor.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.BlockDelete.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.BlockDelete.superClass_.constructor.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.BlockMove.prototype = {
  "constructor": function () {},
  "currentLocation_": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "recordNew": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.BlockMove.superClass_.constructor.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.Change.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.Change.superClass_.constructor.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.CommentBase.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.CommentChange.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.CommentChange.superClass_.constructor.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.CommentCreate.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.CommentCreate.superClass_.constructor.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.CommentDelete.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.CommentDelete.superClass_.constructor.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.CommentMove.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "recordNew": function () {},
  "run": function () {},
  "setOldCoordinate": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.CommentMove.superClass_.constructor.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.Create.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.Create.superClass_.constructor.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.Delete.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.Delete.superClass_.constructor.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.FinishedLoading.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.Move.prototype = {
  "constructor": function () {},
  "currentLocation_": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "recordNew": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.Move.superClass_.constructor.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.Ui.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.VarBase.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.VarCreate.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.VarCreate.superClass_.constructor.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.VarDelete.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.VarDelete.superClass_.constructor.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Events.VarRename.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.Events.VarRename.superClass_.constructor.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.Field.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.FieldAngle.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "displayMouseOrKeyboardValue_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "hide_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "onMouseMove": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateGraph_": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {},
  "wrapValue_": function () {}
};
Blockly.FieldAngle.superClass_.constructor.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.FieldCheckbox.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "convertValueToBool_": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueBoolean": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setCheckCharacter": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.FieldColour.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "colours_": function () {},
  "columns_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getHighlighted_": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "moveHighlightBy_": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onClick_": function () {},
  "onKeyDown_": function () {},
  "onMouseDown_": function () {},
  "onMouseEnter_": function () {},
  "onMouseLeave_": function () {},
  "onMouseMove_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setColours": function () {},
  "setColumns": function () {},
  "setCursorSvg": function () {},
  "setHighlightedCell_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "titles_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.FieldDropdown.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getOptions": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "handleMenuActionEvent_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isOptionListDynamic": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onItemSelected": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "renderSelectedImage_": function () {},
  "renderSelectedText_": function () {},
  "render_": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "trimOptions_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.FieldImage.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setAlt": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setOnClickHandler": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.FieldLabel.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setClass": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.FieldLabelSerializable.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setClass": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.FieldLabelSerializable.superClass_.constructor.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setClass": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.FieldMultilineInput.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.FieldMultilineInput.superClass_.constructor.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.FieldNumber.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getMax": function () {},
  "getMin": function () {},
  "getParentInput": function () {},
  "getPrecision": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setConstraints": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setMax": function () {},
  "setMaxInternal_": function () {},
  "setMin": function () {},
  "setMinInternal_": function () {},
  "setPrecision": function () {},
  "setPrecisionInternal_": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.FieldNumber.superClass_.constructor.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.FieldTextInput.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.FieldVariable.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getOptions": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getVariable": function () {},
  "getVariableTypes_": function () {},
  "handleMenuActionEvent_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isOptionListDynamic": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onItemSelected": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "refreshVariableName": function () {},
  "renderSelectedImage_": function () {},
  "renderSelectedText_": function () {},
  "render_": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setTypes_": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "trimOptions_": function () {},
  "typeIsAllowed_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "workspace_": function () {}
};
Blockly.FieldVariable.superClass_.constructor.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getOptions": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "handleMenuActionEvent_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isOptionListDynamic": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onItemSelected": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "renderSelectedImage_": function () {},
  "renderSelectedText_": function () {},
  "render_": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "trimOptions_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.Flyout.prototype = {
  "CORNER_RADIUS": function () {},
  "GAP_X": function () {},
  "GAP_Y": function () {},
  "MARGIN": function () {},
  "SCROLLBAR_PADDING": function () {},
  "addBlockListeners_": function () {},
  "autoClose": function () {},
  "blockMouseDown_": function () {},
  "clearOldBlocks_": function () {},
  "containerVisible_": function () {},
  "createBlock": function () {},
  "createDom": function () {},
  "createRect_": function () {},
  "dispose": function () {},
  "dragAngleRange_": function () {},
  "filterForCapacity_": function () {},
  "getHeight": function () {},
  "getWidth": function () {},
  "getWorkspace": function () {},
  "height_": function () {},
  "hide": function () {},
  "init": function () {},
  "initFlyoutButton_": function () {},
  "isBlockCreatable_": function () {},
  "isScrollable": function () {},
  "isVisible": function () {},
  "isVisible_": function () {},
  "moveRectToBlock_": function () {},
  "onMouseDown_": function () {},
  "placeNewBlock_": function () {},
  "positionAt_": function () {},
  "reflow": function () {},
  "setContainerVisible": function () {},
  "setVisible": function () {},
  "show": function () {},
  "updateDisplay_": function () {},
  "width_": function () {}
};
Blockly.FlyoutButton.prototype = {
  "createDom": function () {},
  "dispose": function () {},
  "getPosition": function () {},
  "getTargetWorkspace": function () {},
  "height": function () {},
  "moveTo": function () {},
  "onMouseUpWrapper_": function () {},
  "onMouseUp_": function () {},
  "show": function () {},
  "updateTransform_": function () {},
  "width": function () {}
};
Blockly.FlyoutCursor.prototype = {
  "constructor": function () {},
  "getCurNode": function () {},
  "getDrawer": function () {},
  "hide": function () {},
  "in": function () {},
  "next": function () {},
  "out": function () {},
  "prev": function () {},
  "setCurNode": function () {},
  "setDrawer": function () {}
};
Blockly.FlyoutDragger.prototype = {
  "constructor": function () {},
  "dispose": function () {},
  "drag": function () {},
  "endDrag": function () {},
  "startDrag": function () {}
};
Blockly.Generator.prototype = {
  "COMMENT_WRAP": function () {},
  "FUNCTION_NAME_PLACEHOLDER_": function () {},
  "INDENT": function () {},
  "INFINITE_LOOP_TRAP": function () {},
  "ORDER_OVERRIDES": function () {},
  "RESERVED_WORDS_": function () {},
  "STATEMENT_PREFIX": function () {},
  "STATEMENT_SUFFIX": function () {},
  "addLoopTrap": function () {},
  "addReservedWords": function () {},
  "allNestedComments": function () {},
  "blockToCode": function () {},
  "finish": function () {},
  "init": function () {},
  "injectId": function () {},
  "prefixLines": function () {},
  "provideFunction_": function () {},
  "scrubNakedValue": function () {},
  "scrub_": function () {},
  "statementToCode": function () {},
  "valueToCode": function () {},
  "workspaceToCode": function () {}
};
Blockly.Gesture.prototype = {
  "bindMouseEvents": function () {},
  "bringBlockToFront_": function () {},
  "cancel": function () {},
  "dispose": function () {},
  "doBlockClick_": function () {},
  "doBubbleClick_": function () {},
  "doFieldClick_": function () {},
  "doStart": function () {},
  "doWorkspaceClick_": function () {},
  "getInsertionMarkers": function () {},
  "handleBlockStart": function () {},
  "handleBubbleStart": function () {},
  "handleFlyoutStart": function () {},
  "handleMove": function () {},
  "handleRightClick": function () {},
  "handleUp": function () {},
  "handleWsStart": function () {},
  "hasStarted": function () {},
  "isBlockClick_": function () {},
  "isBubbleClick_": function () {},
  "isDragging": function () {},
  "isFieldClick_": function () {},
  "isWorkspaceClick_": function () {},
  "setStartBlock": function () {},
  "setStartBubble": function () {},
  "setStartField": function () {},
  "setStartFlyout_": function () {},
  "setStartWorkspace_": function () {},
  "setTargetBlock_": function () {},
  "startDraggingBlock_": function () {},
  "startDraggingBubble_": function () {},
  "updateDragDelta_": function () {},
  "updateFromEvent_": function () {},
  "updateIsDraggingBlock_": function () {},
  "updateIsDraggingBubble_": function () {},
  "updateIsDraggingFromFlyout_": function () {},
  "updateIsDraggingWorkspace_": function () {},
  "updateIsDragging_": function () {}
};
Blockly.Grid.prototype = {
  "dispose": function () {},
  "getPatternId": function () {},
  "getSpacing": function () {},
  "moveTo": function () {},
  "scale_": function () {},
  "setLineAttributes_": function () {},
  "shouldSnap": function () {},
  "update": function () {}
};
Blockly.HorizontalFlyout.prototype = {
  "CORNER_RADIUS": function () {},
  "GAP_X": function () {},
  "GAP_Y": function () {},
  "MARGIN": function () {},
  "SCROLLBAR_PADDING": function () {},
  "addBlockListeners_": function () {},
  "autoClose": function () {},
  "blockMouseDown_": function () {},
  "clearOldBlocks_": function () {},
  "constructor": function () {},
  "containerVisible_": function () {},
  "createBlock": function () {},
  "createDom": function () {},
  "createRect_": function () {},
  "dispose": function () {},
  "dragAngleRange_": function () {},
  "filterForCapacity_": function () {},
  "getClientRect": function () {},
  "getHeight": function () {},
  "getMetrics_": function () {},
  "getWidth": function () {},
  "getWorkspace": function () {},
  "height_": function () {},
  "hide": function () {},
  "init": function () {},
  "initFlyoutButton_": function () {},
  "isBlockCreatable_": function () {},
  "isDragTowardWorkspace": function () {},
  "isScrollable": function () {},
  "isVisible": function () {},
  "isVisible_": function () {},
  "layout_": function () {},
  "moveRectToBlock_": function () {},
  "onMouseDown_": function () {},
  "placeNewBlock_": function () {},
  "position": function () {},
  "positionAt_": function () {},
  "reflow": function () {},
  "reflowInternal_": function () {},
  "scrollToStart": function () {},
  "setBackgroundPath_": function () {},
  "setContainerVisible": function () {},
  "setMetrics_": function () {},
  "setVisible": function () {},
  "show": function () {},
  "updateDisplay_": function () {},
  "wheel_": function () {},
  "width_": function () {}
};
Blockly.Icon.prototype = {
  "SIZE": function () {},
  "bubble_": function () {},
  "collapseHidden": function () {},
  "computeIconLocation": function () {},
  "createIcon": function () {},
  "dispose": function () {},
  "getCorrectedSize": function () {},
  "getIconLocation": function () {},
  "iconClick_": function () {},
  "iconXY_": function () {},
  "isVisible": function () {},
  "setIconLocation": function () {},
  "updateColour": function () {},
  "updateEditable": function () {}
};
Blockly.Input.prototype = {
  "align": function () {},
  "appendField": function () {},
  "dispose": function () {},
  "getSourceBlock": function () {},
  "init": function () {},
  "insertFieldAt": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "removeField": function () {},
  "setAlign": function () {},
  "setCheck": function () {},
  "setVisible": function () {},
  "visible_": function () {}
};
Blockly.InsertionMarkerManager.prototype = {
  "applyConnections": function () {},
  "connectMarker_": function () {},
  "createMarkerBlock_": function () {},
  "disconnectMarker_": function () {},
  "dispose": function () {},
  "getCandidate_": function () {},
  "getInsertionMarkers": function () {},
  "getStartRadius_": function () {},
  "hidePreview_": function () {},
  "highlightBlock_": function () {},
  "initAvailableConnections_": function () {},
  "maybeHidePreview_": function () {},
  "maybeShowPreview_": function () {},
  "shouldDelete_": function () {},
  "shouldReplace_": function () {},
  "shouldUpdatePreviews_": function () {},
  "showPreview_": function () {},
  "unhighlightBlock_": function () {},
  "update": function () {},
  "wouldConnectBlock": function () {},
  "wouldDeleteBlock": function () {}
};
Blockly.MarkerCursor.prototype = {
  "constructor": function () {},
  "getCurNode": function () {},
  "getDrawer": function () {},
  "hide": function () {},
  "in": function () {},
  "next": function () {},
  "out": function () {},
  "prev": function () {},
  "setCurNode": function () {},
  "setDrawer": function () {}
};
Blockly.Menu.prototype = {
  "addChild": function () {},
  "addChildAt": function () {},
  "attachEvents_": function () {},
  "blur": function () {},
  "canHighlightItem": function () {},
  "childElementIdMap_": function () {},
  "clearHighlighted": function () {},
  "constructor": function () {},
  "createDom": function () {},
  "detachEvents_": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "focus": function () {},
  "forEachChild": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getContentElement": function () {},
  "getElement": function () {},
  "getHighlighted": function () {},
  "getId": function () {},
  "getMenuItem": function () {},
  "getParent": function () {},
  "handleClick_": function () {},
  "handleKeyEvent": function () {},
  "handleKeyEventInternal": function () {},
  "handleMouseEnter_": function () {},
  "handleMouseLeave_": function () {},
  "handleMouseOver_": function () {},
  "hasChildren": function () {},
  "highlightHelper": function () {},
  "highlightNext": function () {},
  "highlightPrevious": function () {},
  "indexOfChild": function () {},
  "isInDocument": function () {},
  "isRightToLeft": function () {},
  "registerChildId_": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "setElementInternal": function () {},
  "setHighlighted": function () {},
  "setHighlightedIndex": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setRole": function () {},
  "unhighlightCurrent": function () {}
};
Blockly.MenuItem.prototype = {
  "addChild": function () {},
  "addChildAt": function () {},
  "constructor": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getCheckboxDom": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getContentDom": function () {},
  "getContentElement": function () {},
  "getContentWrapperDom": function () {},
  "getElement": function () {},
  "getId": function () {},
  "getParent": function () {},
  "getValue": function () {},
  "handleClick": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "isEnabled": function () {},
  "isInDocument": function () {},
  "isRightToLeft": function () {},
  "onAction": function () {},
  "performActionInternal": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "setCheckable": function () {},
  "setChecked": function () {},
  "setContentInternal": function () {},
  "setElementInternal": function () {},
  "setEnabled": function () {},
  "setHighlighted": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setRole": function () {},
  "setValue": function () {}
};
Blockly.Mutator.prototype = {
  "SIZE": function () {},
  "bubble_": function () {},
  "collapseHidden": function () {},
  "computeIconLocation": function () {},
  "constructor": function () {},
  "createEditor_": function () {},
  "createIcon": function () {},
  "dispose": function () {},
  "drawIcon_": function () {},
  "getCorrectedSize": function () {},
  "getFlyoutMetrics_": function () {},
  "getIconLocation": function () {},
  "iconClick_": function () {},
  "iconXY_": function () {},
  "isVisible": function () {},
  "resizeBubble_": function () {},
  "setIconLocation": function () {},
  "setVisible": function () {},
  "updateBlockStyle": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "workspaceChanged_": function () {},
  "workspaceHeight_": function () {},
  "workspaceWidth_": function () {}
};
Blockly.Names.prototype = {
  "getDistinctName": function () {},
  "getName": function () {},
  "getNameForUserVariable_": function () {},
  "reset": function () {},
  "safeName_": function () {},
  "setVariableMap": function () {}
};
Blockly.Options.prototype = {
  "getMetrics": function () {},
  "parentWorkspace": function () {},
  "setMetrics": function () {}
};
Blockly.RenderedConnection.prototype = {
  "bumpAwayFrom_": function () {},
  "canConnectToPrevious_": function () {},
  "canConnectWithReason_": function () {},
  "checkConnection_": function () {},
  "checkType_": function () {},
  "check_": function () {},
  "closest": function () {},
  "connect": function () {},
  "connect_": function () {},
  "constructor": function () {},
  "disconnect": function () {},
  "disconnectInternal_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "distanceFrom": function () {},
  "getCheck": function () {},
  "getOffsetInBlock": function () {},
  "getParentInput": function () {},
  "getShadowDom": function () {},
  "getSourceBlock": function () {},
  "hideAll": function () {},
  "highlight": function () {},
  "isConnected": function () {},
  "isConnectionAllowed": function () {},
  "isSuperior": function () {},
  "moveBy": function () {},
  "moveTo": function () {},
  "moveToOffset": function () {},
  "neighbours_": function () {},
  "onCheckChanged_": function () {},
  "onFailedConnect": function () {},
  "respawnShadow_": function () {},
  "setCheck": function () {},
  "setHidden": function () {},
  "setOffsetInBlock": function () {},
  "setShadowDom": function () {},
  "shadowDom_": function () {},
  "targetBlock": function () {},
  "targetConnection": function () {},
  "tighten_": function () {},
  "toString": function () {},
  "unhideAll": function () {},
  "unhighlight": function () {},
  "x_": function () {},
  "y_": function () {}
};
Blockly.Scrollbar.prototype = {
  "cleanUp_": function () {},
  "constrainHandle_": function () {},
  "containerVisible_": function () {},
  "createDom_": function () {},
  "dispose": function () {},
  "handleLength_": function () {},
  "handlePosition_": function () {},
  "isVisible": function () {},
  "isVisible_": function () {},
  "onMouseDownBar_": function () {},
  "onMouseDownHandle_": function () {},
  "onMouseMoveHandle_": function () {},
  "onMouseUpHandle_": function () {},
  "onScroll_": function () {},
  "origin_": function () {},
  "resize": function () {},
  "resizeContentHorizontal": function () {},
  "resizeContentVertical": function () {},
  "resizeHorizontal_": function () {},
  "resizeVertical_": function () {},
  "resizeViewHorizontal": function () {},
  "resizeViewVertical": function () {},
  "scrollViewSize_": function () {},
  "set": function () {},
  "setContainerVisible": function () {},
  "setHandleLength_": function () {},
  "setHandlePosition": function () {},
  "setOrigin": function () {},
  "setPosition_": function () {},
  "setScrollViewSize_": function () {},
  "setVisible": function () {},
  "startDragMouse_": function () {},
  "updateDisplay_": function () {}
};
Blockly.ScrollbarPair.prototype = {
  "dispose": function () {},
  "getRatio_": function () {},
  "oldHostMetrics_": function () {},
  "resize": function () {},
  "set": function () {},
  "setContainerVisible": function () {}
};
Blockly.Theme.prototype = {
  "getAllBlockStyles": function () {},
  "getBlockStyle": function () {},
  "getCategoryStyle": function () {},
  "getComponentStyle": function () {},
  "setAllBlockStyles": function () {},
  "setBlockStyle": function () {},
  "setCategoryStyle": function () {},
  "setComponentStyle": function () {}
};
Blockly.ThemeManager.prototype = {
  "dispose": function () {},
  "getTheme": function () {},
  "setTheme": function () {},
  "subscribe": function () {},
  "subscribeWorkspace": function () {},
  "unsubscribe": function () {},
  "unsubscribeWorkspace": function () {}
};
Blockly.Toolbox.prototype = {
  "addColour_": function () {},
  "addStyle": function () {},
  "clearSelection": function () {},
  "dispose": function () {},
  "getClientRect": function () {},
  "getHeight": function () {},
  "getWidth": function () {},
  "handleAfterTreeSelected_": function () {},
  "handleBeforeTreeSelected_": function () {},
  "handleNodeSizeChanged_": function () {},
  "height": function () {},
  "init": function () {},
  "lastCategory_": function () {},
  "onBlocklyAction": function () {},
  "position": function () {},
  "refreshSelection": function () {},
  "removeStyle": function () {},
  "renderTree": function () {},
  "selectFirstCategory": function () {},
  "selectedOption_": function () {},
  "setColourFromStyle_": function () {},
  "setColour_": function () {},
  "syncTrees_": function () {},
  "updateColourFromTheme": function () {},
  "updateColourFromTheme_": function () {},
  "updateSelectedItemColour_": function () {},
  "width": function () {}
};
Blockly.Toolbox.TreeSeparator.prototype = {
  "add": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "computeDepth_": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "doNodeCollapsed": function () {},
  "doNodeExpanded": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getBackgroundPosition": function () {},
  "getCalculatedIconClass": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getChildren": function () {},
  "getChildrenElement": function () {},
  "getConfig": function () {},
  "getContentElement": function () {},
  "getDepth": function () {},
  "getElement": function () {},
  "getExpanded": function () {},
  "getExpandedIconClass": function () {},
  "getFirstChild": function () {},
  "getIconClass": function () {},
  "getIconDom": function () {},
  "getIconElement": function () {},
  "getId": function () {},
  "getLabelDom": function () {},
  "getLabelElement": function () {},
  "getLastChild": function () {},
  "getLastShownDescendant": function () {},
  "getNextShownNode": function () {},
  "getNextSibling": function () {},
  "getParent": function () {},
  "getPixelIndent_": function () {},
  "getPreviousShownNode": function () {},
  "getPreviousSibling": function () {},
  "getRowClassName": function () {},
  "getRowDom": function () {},
  "getRowElement": function () {},
  "getText": function () {},
  "getTree": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "initAccessibility": function () {},
  "isInDocument": function () {},
  "isLastSibling": function () {},
  "isRightToLeft": function () {},
  "isSelected": function () {},
  "isUserCollapsible": function () {},
  "onClick_": function () {},
  "onKeyDown": function () {},
  "onMouseDown": function () {},
  "onSizeChanged": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "resizeToolbox_": function () {},
  "select": function () {},
  "selectChild": function () {},
  "selectFirst": function () {},
  "selectNext": function () {},
  "selectParent": function () {},
  "selectPrevious": function () {},
  "setDepth_": function () {},
  "setElementInternal": function () {},
  "setExpanded": function () {},
  "setExpandedInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setSelectedInternal": function () {},
  "setText": function () {},
  "setTreeInternal": function () {},
  "toDom": function () {},
  "toggle": function () {},
  "updateExpandIcon": function () {},
  "updateIcon_": function () {},
  "updateRow": function () {}
};
Blockly.Toolbox.TreeSeparator.superClass_.constructor.prototype = {
  "add": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "computeDepth_": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "doNodeCollapsed": function () {},
  "doNodeExpanded": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getBackgroundPosition": function () {},
  "getCalculatedIconClass": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getChildren": function () {},
  "getChildrenElement": function () {},
  "getConfig": function () {},
  "getContentElement": function () {},
  "getDepth": function () {},
  "getElement": function () {},
  "getExpanded": function () {},
  "getExpandedIconClass": function () {},
  "getFirstChild": function () {},
  "getIconClass": function () {},
  "getIconDom": function () {},
  "getIconElement": function () {},
  "getId": function () {},
  "getLabelDom": function () {},
  "getLabelElement": function () {},
  "getLastChild": function () {},
  "getLastShownDescendant": function () {},
  "getNextShownNode": function () {},
  "getNextSibling": function () {},
  "getParent": function () {},
  "getPixelIndent_": function () {},
  "getPreviousShownNode": function () {},
  "getPreviousSibling": function () {},
  "getRowClassName": function () {},
  "getRowDom": function () {},
  "getRowElement": function () {},
  "getText": function () {},
  "getTree": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "initAccessibility": function () {},
  "isInDocument": function () {},
  "isLastSibling": function () {},
  "isRightToLeft": function () {},
  "isSelected": function () {},
  "isUserCollapsible": function () {},
  "onClick_": function () {},
  "onKeyDown": function () {},
  "onMouseDown": function () {},
  "onSizeChanged": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "resizeToolbox_": function () {},
  "select": function () {},
  "selectChild": function () {},
  "selectFirst": function () {},
  "selectNext": function () {},
  "selectParent": function () {},
  "selectPrevious": function () {},
  "setDepth_": function () {},
  "setElementInternal": function () {},
  "setExpanded": function () {},
  "setExpandedInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setSelectedInternal": function () {},
  "setText": function () {},
  "setTreeInternal": function () {},
  "toDom": function () {},
  "toggle": function () {},
  "updateExpandIcon": function () {},
  "updateIcon_": function () {},
  "updateRow": function () {}
};
Blockly.Toolbox.TreeSeparator.superClass_.constructor.superClass_.constructor.prototype = {
  "add": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "computeDepth_": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "doNodeCollapsed": function () {},
  "doNodeExpanded": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getBackgroundPosition": function () {},
  "getCalculatedIconClass": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getChildren": function () {},
  "getChildrenElement": function () {},
  "getConfig": function () {},
  "getContentElement": function () {},
  "getDepth": function () {},
  "getElement": function () {},
  "getExpanded": function () {},
  "getExpandedIconClass": function () {},
  "getFirstChild": function () {},
  "getIconClass": function () {},
  "getIconDom": function () {},
  "getIconElement": function () {},
  "getId": function () {},
  "getLabelDom": function () {},
  "getLabelElement": function () {},
  "getLastChild": function () {},
  "getLastShownDescendant": function () {},
  "getNextShownNode": function () {},
  "getNextSibling": function () {},
  "getParent": function () {},
  "getPixelIndent_": function () {},
  "getPreviousShownNode": function () {},
  "getPreviousSibling": function () {},
  "getRowClassName": function () {},
  "getRowDom": function () {},
  "getRowElement": function () {},
  "getText": function () {},
  "getTree": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "initAccessibility": function () {},
  "isInDocument": function () {},
  "isLastSibling": function () {},
  "isRightToLeft": function () {},
  "isSelected": function () {},
  "isUserCollapsible": function () {},
  "onClick_": function () {},
  "onKeyDown": function () {},
  "onMouseDown": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "select": function () {},
  "selectChild": function () {},
  "selectFirst": function () {},
  "selectNext": function () {},
  "selectParent": function () {},
  "selectPrevious": function () {},
  "setDepth_": function () {},
  "setElementInternal": function () {},
  "setExpanded": function () {},
  "setExpandedInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setSelectedInternal": function () {},
  "setText": function () {},
  "setTreeInternal": function () {},
  "toDom": function () {},
  "toggle": function () {},
  "updateExpandIcon": function () {},
  "updateIcon_": function () {},
  "updateRow": function () {}
};
Blockly.TouchGesture.prototype = {
  "bindMouseEvents": function () {},
  "bringBlockToFront_": function () {},
  "cancel": function () {},
  "constructor": function () {},
  "dispose": function () {},
  "doBlockClick_": function () {},
  "doBubbleClick_": function () {},
  "doFieldClick_": function () {},
  "doStart": function () {},
  "doWorkspaceClick_": function () {},
  "getInsertionMarkers": function () {},
  "getTouchPoint": function () {},
  "handleBlockStart": function () {},
  "handleBubbleStart": function () {},
  "handleFlyoutStart": function () {},
  "handleMove": function () {},
  "handleRightClick": function () {},
  "handleStart": function () {},
  "handleTouchEnd": function () {},
  "handleTouchMove": function () {},
  "handleTouchStart": function () {},
  "handleUp": function () {},
  "handleWsStart": function () {},
  "hasStarted": function () {},
  "isBlockClick_": function () {},
  "isBubbleClick_": function () {},
  "isDragging": function () {},
  "isFieldClick_": function () {},
  "isMultiTouch": function () {},
  "isWorkspaceClick_": function () {},
  "setStartBlock": function () {},
  "setStartBubble": function () {},
  "setStartField": function () {},
  "setStartFlyout_": function () {},
  "setStartWorkspace_": function () {},
  "setTargetBlock_": function () {},
  "startDraggingBlock_": function () {},
  "startDraggingBubble_": function () {},
  "updateDragDelta_": function () {},
  "updateFromEvent_": function () {},
  "updateIsDraggingBlock_": function () {},
  "updateIsDraggingBubble_": function () {},
  "updateIsDraggingFromFlyout_": function () {},
  "updateIsDraggingWorkspace_": function () {},
  "updateIsDragging_": function () {}
};
Blockly.Trashcan.prototype = {
  "BODY_HEIGHT_": function () {},
  "HAS_BLOCKS_LID_ANGLE": function () {},
  "LID_HEIGHT_": function () {},
  "MARGIN_BOTTOM_": function () {},
  "MARGIN_HOTSPOT_": function () {},
  "MARGIN_SIDE_": function () {},
  "SPRITE_LEFT_": function () {},
  "SPRITE_TOP_": function () {},
  "WIDTH_": function () {},
  "animateLid_": function () {},
  "cleanBlockXML_": function () {},
  "click": function () {},
  "close": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "getClientRect": function () {},
  "init": function () {},
  "isOpen": function () {},
  "left_": function () {},
  "lidOpen_": function () {},
  "lidTask_": function () {},
  "minOpenness_": function () {},
  "mouseOut_": function () {},
  "mouseOver_": function () {},
  "onDelete_": function () {},
  "position": function () {},
  "setLidAngle_": function () {},
  "setOpen_": function () {},
  "svgGroup_": function () {},
  "svgLid_": function () {},
  "top_": function () {}
};
Blockly.VariableMap.prototype = {
  "clear": function () {},
  "createVariable": function () {},
  "deleteVariable": function () {},
  "deleteVariableById": function () {},
  "deleteVariableInternal_": function () {},
  "getAllVariables": function () {},
  "getVariable": function () {},
  "getVariableById": function () {},
  "getVariableTypes": function () {},
  "getVariableUsesById": function () {},
  "getVariablesOfType": function () {},
  "renameVariable": function () {},
  "renameVariableAndUses_": function () {},
  "renameVariableById": function () {},
  "renameVariableWithConflict_": function () {}
};
Blockly.VariableModel.prototype = {
  "getId": function () {}
};
Blockly.VerticalFlyout.prototype = {
  "CORNER_RADIUS": function () {},
  "GAP_X": function () {},
  "GAP_Y": function () {},
  "MARGIN": function () {},
  "SCROLLBAR_PADDING": function () {},
  "addBlockListeners_": function () {},
  "autoClose": function () {},
  "blockMouseDown_": function () {},
  "clearOldBlocks_": function () {},
  "constructor": function () {},
  "containerVisible_": function () {},
  "createBlock": function () {},
  "createDom": function () {},
  "createRect_": function () {},
  "dispose": function () {},
  "dragAngleRange_": function () {},
  "filterForCapacity_": function () {},
  "getClientRect": function () {},
  "getHeight": function () {},
  "getMetrics_": function () {},
  "getWidth": function () {},
  "getWorkspace": function () {},
  "height_": function () {},
  "hide": function () {},
  "init": function () {},
  "initFlyoutButton_": function () {},
  "isBlockCreatable_": function () {},
  "isDragTowardWorkspace": function () {},
  "isScrollable": function () {},
  "isVisible": function () {},
  "isVisible_": function () {},
  "layout_": function () {},
  "moveRectToBlock_": function () {},
  "onMouseDown_": function () {},
  "placeNewBlock_": function () {},
  "position": function () {},
  "positionAt_": function () {},
  "reflow": function () {},
  "reflowInternal_": function () {},
  "scrollToStart": function () {},
  "setBackgroundPath_": function () {},
  "setContainerVisible": function () {},
  "setMetrics_": function () {},
  "setVisible": function () {},
  "show": function () {},
  "updateDisplay_": function () {},
  "wheel_": function () {},
  "width_": function () {}
};
Blockly.Warning.prototype = {
  "SIZE": function () {},
  "bodyFocus_": function () {},
  "bubble_": function () {},
  "collapseHidden": function () {},
  "computeIconLocation": function () {},
  "constructor": function () {},
  "createBubble": function () {},
  "createIcon": function () {},
  "dispose": function () {},
  "disposeBubble": function () {},
  "drawIcon_": function () {},
  "getCorrectedSize": function () {},
  "getIconLocation": function () {},
  "getText": function () {},
  "iconClick_": function () {},
  "iconXY_": function () {},
  "isVisible": function () {},
  "setIconLocation": function () {},
  "setText": function () {},
  "setVisible": function () {},
  "updateColour": function () {},
  "updateEditable": function () {}
};
Blockly.Workspace.prototype = {
  "MAX_UNDO": function () {},
  "addChangeListener": function () {},
  "addTopBlock": function () {},
  "addTopComment": function () {},
  "addTypedBlock": function () {},
  "allInputsFilled": function () {},
  "clear": function () {},
  "clearUndo": function () {},
  "connectionDBList": function () {},
  "createPotentialVariableMap": function () {},
  "createVariable": function () {},
  "deleteVariableById": function () {},
  "deleteVariableInternal_": function () {},
  "dispose": function () {},
  "fireChangeListener": function () {},
  "getAllBlocks": function () {},
  "getAllVariables": function () {},
  "getBlockById": function () {},
  "getBlocksByType": function () {},
  "getCommentById": function () {},
  "getCursor": function () {},
  "getMarker": function () {},
  "getPotentialVariableMap": function () {},
  "getTheme": function () {},
  "getThemeManager": function () {},
  "getTopBlocks": function () {},
  "getTopComments": function () {},
  "getVariable": function () {},
  "getVariableById": function () {},
  "getVariableMap": function () {},
  "getVariableTypes": function () {},
  "getVariableUsesById": function () {},
  "getVariablesOfType": function () {},
  "getWidth": function () {},
  "hasBlockLimits": function () {},
  "isCapacityAvailable": function () {},
  "isClearing": function () {},
  "newBlock": function () {},
  "refreshTheme": function () {},
  "remainingCapacity": function () {},
  "remainingCapacityOfType": function () {},
  "removeChangeListener": function () {},
  "removeTopBlock": function () {},
  "removeTopComment": function () {},
  "removeTypedBlock": function () {},
  "renameVariableById": function () {},
  "rendered": function () {},
  "setCursor": function () {},
  "setMarker": function () {},
  "setTheme": function () {},
  "sortObjects_": function () {},
  "undo": function () {},
  "updateBlockStyles_": function () {},
  "variableIndexOf": function () {}
};
Blockly.WorkspaceAudio.prototype = {
  "dispose": function () {},
  "lastSound_": function () {},
  "load": function () {},
  "play": function () {},
  "preload": function () {}
};
Blockly.WorkspaceDragSurfaceSvg.prototype = {
  "SVG_": function () {},
  "clearAndHide": function () {},
  "container_": function () {},
  "createDom": function () {},
  "dragGroup_": function () {},
  "getSurfaceTranslation": function () {},
  "setContentsAndShow": function () {},
  "translateSurface": function () {}
};
Blockly.WorkspaceDragger.prototype = {
  "dispose": function () {},
  "drag": function () {},
  "endDrag": function () {},
  "startDrag": function () {}
};
Blockly.WorkspaceSvg.prototype = {
  "MAX_UNDO": function () {},
  "addChangeListener": function () {},
  "addFlyout_": function () {},
  "addTopBlock": function () {},
  "addTopComment": function () {},
  "addTrashcan": function () {},
  "addTypedBlock": function () {},
  "addZoomControls": function () {},
  "allInputsFilled": function () {},
  "beginCanvasTransition": function () {},
  "blockDragSurface_": function () {},
  "cancelCurrentGesture": function () {},
  "centerOnBlock": function () {},
  "cleanUp": function () {},
  "clear": function () {},
  "clearGesture": function () {},
  "clearUndo": function () {},
  "configureContextMenu": function () {},
  "connectionDBList": function () {},
  "constructor": function () {},
  "createDom": function () {},
  "createPotentialVariableMap": function () {},
  "createVariable": function () {},
  "currentGesture_": function () {},
  "deleteVariableById": function () {},
  "deleteVariableInternal_": function () {},
  "dispose": function () {},
  "dragDeltaXY_": function () {},
  "endCanvasTransition": function () {},
  "fireChangeListener": function () {},
  "flyoutButtonCallbacks_": function () {},
  "flyout_": function () {},
  "getAllBlocks": function () {},
  "getAllVariables": function () {},
  "getAudioManager": function () {},
  "getBlockById": function () {},
  "getBlockDragSurface": function () {},
  "getBlocksBoundingBox": function () {},
  "getBlocksByType": function () {},
  "getBubbleCanvas": function () {},
  "getButtonCallback": function () {},
  "getCanvas": function () {},
  "getCommentById": function () {},
  "getCursor": function () {},
  "getFlyout": function () {},
  "getGesture": function () {},
  "getGrid": function () {},
  "getInjectionDiv": function () {},
  "getInverseScreenCTM": function () {},
  "getMarker": function () {},
  "getOriginOffsetInPixels": function () {},
  "getParentSvg": function () {},
  "getPotentialVariableMap": function () {},
  "getRenderer": function () {},
  "getSvgXY": function () {},
  "getTheme": function () {},
  "getThemeManager": function () {},
  "getToolbox": function () {},
  "getToolboxCategoryCallback": function () {},
  "getTopBlocks": function () {},
  "getTopComments": function () {},
  "getVariable": function () {},
  "getVariableById": function () {},
  "getVariableMap": function () {},
  "getVariableTypes": function () {},
  "getVariableUsesById": function () {},
  "getVariablesOfType": function () {},
  "getWidth": function () {},
  "hasBlockLimits": function () {},
  "highlightBlock": function () {},
  "injectionDiv_": function () {},
  "inverseScreenCTMDirty_": function () {},
  "inverseScreenCTM_": function () {},
  "isCapacityAvailable": function () {},
  "isClearing": function () {},
  "isContentBounded": function () {},
  "isDeleteArea": function () {},
  "isDragSurfaceActive_": function () {},
  "isDraggable": function () {},
  "isDragging": function () {},
  "isFlyout": function () {},
  "isMovable": function () {},
  "isMutator": function () {},
  "isVisible": function () {},
  "isVisible_": function () {},
  "lastRecordedPageScroll_": function () {},
  "markFocused": function () {},
  "moveDrag": function () {},
  "newBlock": function () {},
  "onMouseDown_": function () {},
  "onMouseWheel_": function () {},
  "paste": function () {},
  "pasteBlock_": function () {},
  "pasteWorkspaceComment_": function () {},
  "recordDeleteAreas": function () {},
  "refreshTheme": function () {},
  "refreshToolboxSelection": function () {},
  "registerButtonCallback": function () {},
  "registerToolboxCategoryCallback": function () {},
  "remainingCapacity": function () {},
  "remainingCapacityOfType": function () {},
  "removeButtonCallback": function () {},
  "removeChangeListener": function () {},
  "removeToolboxCategoryCallback": function () {},
  "removeTopBlock": function () {},
  "removeTopComment": function () {},
  "removeTypedBlock": function () {},
  "renameVariableById": function () {},
  "render": function () {},
  "rendered": function () {},
  "resetDragSurface": function () {},
  "resize": function () {},
  "resizeContents": function () {},
  "resizeHandlerWrapper_": function () {},
  "resizesEnabled_": function () {},
  "scale": function () {},
  "scroll": function () {},
  "scrollCenter": function () {},
  "scrollX": function () {},
  "scrollY": function () {},
  "scrollbar": function () {},
  "setBrowserFocus": function () {},
  "setCursor": function () {},
  "setCursorSvg": function () {},
  "setMarker": function () {},
  "setMarkerSvg": function () {},
  "setResizeHandlerWrapper": function () {},
  "setResizesEnabled": function () {},
  "setScale": function () {},
  "setTheme": function () {},
  "setVisible": function () {},
  "setupDragSurface": function () {},
  "showContextMenu_": function () {},
  "sortObjects_": function () {},
  "startDrag": function () {},
  "startScrollX": function () {},
  "startScrollY": function () {},
  "targetWorkspace": function () {},
  "toolboxCategoryCallbacks_": function () {},
  "toolbox_": function () {},
  "traceOn": function () {},
  "translate": function () {},
  "trashcan": function () {},
  "undo": function () {},
  "updateBlockStyles_": function () {},
  "updateInverseScreenCTM": function () {},
  "updateScreenCalculationsIfScrolled": function () {},
  "updateScreenCalculations_": function () {},
  "updateToolbox": function () {},
  "useWorkspaceDragSurface_": function () {},
  "variableIndexOf": function () {},
  "workspaceDragSurface_": function () {},
  "zoom": function () {},
  "zoomCenter": function () {},
  "zoomToFit": function () {}
};
Blockly.ZoomControls.prototype = {
  "HEIGHT_": function () {},
  "MARGIN_BOTTOM_": function () {},
  "MARGIN_SIDE_": function () {},
  "WIDTH_": function () {},
  "createDom": function () {},
  "createZoomInSvg_": function () {},
  "createZoomOutSvg_": function () {},
  "createZoomResetSvg_": function () {},
  "dispose": function () {},
  "init": function () {},
  "left_": function () {},
  "position": function () {},
  "svgGroup_": function () {},
  "top_": function () {}
};
Blockly.blockRendering.BottomRow.prototype = {
  "constructor": function () {},
  "endsWithElemSpacer": function () {},
  "getFirstSpacer": function () {},
  "getLastInput": function () {},
  "getLastSpacer": function () {},
  "hasLeftSquareCorner": function () {},
  "measure": function () {},
  "startsWithElemSpacer": function () {}
};
Blockly.blockRendering.Connection.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.ConstantProvider.prototype = {
  "init": function () {},
  "makeInsideCorners": function () {},
  "makeJaggedTeeth": function () {},
  "makeNotch": function () {},
  "makeOutsideCorners": function () {},
  "makePuzzleTab": function () {},
  "makeStartHat": function () {},
  "shapeFor": function () {}
};
Blockly.blockRendering.Drawer.prototype = {
  "draw": function () {},
  "drawBottom_": function () {},
  "drawInlineInput_": function () {},
  "drawInternals_": function () {},
  "drawJaggedEdge_": function () {},
  "drawLeft_": function () {},
  "drawOutline_": function () {},
  "drawRightSideRow_": function () {},
  "drawStatementInput_": function () {},
  "drawTop_": function () {},
  "drawValueInput_": function () {},
  "hideHiddenIcons_": function () {},
  "layoutField_": function () {},
  "positionExternalValueConnection_": function () {},
  "positionInlineInputConnection_": function () {},
  "positionNextConnection_": function () {},
  "positionOutputConnection_": function () {},
  "positionPreviousConnection_": function () {},
  "positionStatementInputConnection_": function () {},
  "recordSizeOnBlock_": function () {}
};
Blockly.blockRendering.ExternalValueInput.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.ExternalValueInput.superClass_.constructor.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.ExternalValueInput.superClass_.constructor.superClass_.constructor.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.Field.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.Hat.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.Icon.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.InRowSpacer.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.InlineInput.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.InlineInput.superClass_.constructor.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.InlineInput.superClass_.constructor.superClass_.constructor.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.InputConnection.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.InputConnection.superClass_.constructor.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.InputRow.prototype = {
  "constructor": function () {},
  "endsWithElemSpacer": function () {},
  "getFirstSpacer": function () {},
  "getLastInput": function () {},
  "getLastSpacer": function () {},
  "measure": function () {},
  "startsWithElemSpacer": function () {}
};
Blockly.blockRendering.JaggedEdge.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.NextConnection.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.NextConnection.superClass_.constructor.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.OutputConnection.prototype = {
  "constructor": function () {},
  "isDynamic": function () {}
};
Blockly.blockRendering.OutputConnection.superClass_.constructor.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.PathObject.prototype = {
  "flipRTL": function () {},
  "setPaths": function () {}
};
Blockly.blockRendering.PreviousConnection.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.PreviousConnection.superClass_.constructor.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.RenderInfo.prototype = {
  "addAlignmentPadding_": function () {},
  "addElemSpacing_": function () {},
  "addInput_": function () {},
  "addRowSpacing_": function () {},
  "alignRowElements_": function () {},
  "alignStatementRow_": function () {},
  "computeBounds_": function () {},
  "createRows_": function () {},
  "finalize_": function () {},
  "getElemCenterline_": function () {},
  "getInRowSpacing_": function () {},
  "getRenderer": function () {},
  "getSpacerRowHeight_": function () {},
  "getSpacerRowWidth_": function () {},
  "makeSpacerRow_": function () {},
  "measure": function () {},
  "populateBottomRow_": function () {},
  "populateTopRow_": function () {},
  "recordElemPositions_": function () {},
  "shouldStartNewRow_": function () {}
};
Blockly.blockRendering.Renderer.prototype = {
  "getConstants": function () {},
  "init": function () {},
  "makeConstants_": function () {},
  "makeCursorDrawer": function () {},
  "makeDebugger_": function () {},
  "makeDrawer_": function () {},
  "makeHighlightConstants_": function () {},
  "makePathObject": function () {},
  "makeRenderInfo_": function () {},
  "render": function () {}
};
Blockly.blockRendering.RoundCorner.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.Row.prototype = {
  "endsWithElemSpacer": function () {},
  "getFirstSpacer": function () {},
  "getLastInput": function () {},
  "getLastSpacer": function () {},
  "measure": function () {},
  "startsWithElemSpacer": function () {}
};
Blockly.blockRendering.SpacerRow.prototype = {
  "constructor": function () {},
  "endsWithElemSpacer": function () {},
  "getFirstSpacer": function () {},
  "getLastInput": function () {},
  "getLastSpacer": function () {},
  "measure": function () {},
  "startsWithElemSpacer": function () {}
};
Blockly.blockRendering.SquareCorner.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.StatementInput.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.StatementInput.superClass_.constructor.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.StatementInput.superClass_.constructor.superClass_.constructor.prototype = {
  "constructor": function () {}
};
Blockly.blockRendering.TopRow.prototype = {
  "constructor": function () {},
  "endsWithElemSpacer": function () {},
  "getFirstSpacer": function () {},
  "getLastInput": function () {},
  "getLastSpacer": function () {},
  "hasLeftSquareCorner": function () {},
  "measure": function () {},
  "startsWithElemSpacer": function () {}
};
Blockly.blockRendering.rendererMap_.geras.prototype = {
  "constructor": function () {},
  "getConstants": function () {},
  "getHighlightConstants": function () {},
  "init": function () {},
  "makeConstants_": function () {},
  "makeCursorDrawer": function () {},
  "makeDebugger_": function () {},
  "makeDrawer_": function () {},
  "makeHighlightConstants_": function () {},
  "makePathObject": function () {},
  "makeRenderInfo_": function () {},
  "render": function () {}
};
Blockly.fieldRegistry.typeMap_.field_angle.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "displayMouseOrKeyboardValue_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "hide_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "onMouseMove": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateGraph_": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {},
  "wrapValue_": function () {}
};
Blockly.fieldRegistry.typeMap_.field_angle.superClass_.constructor.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.fieldRegistry.typeMap_.field_checkbox.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "convertValueToBool_": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueBoolean": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setCheckCharacter": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.fieldRegistry.typeMap_.field_colour.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "colours_": function () {},
  "columns_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getHighlighted_": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "moveHighlightBy_": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onClick_": function () {},
  "onKeyDown_": function () {},
  "onMouseDown_": function () {},
  "onMouseEnter_": function () {},
  "onMouseLeave_": function () {},
  "onMouseMove_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setColours": function () {},
  "setColumns": function () {},
  "setCursorSvg": function () {},
  "setHighlightedCell_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "titles_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.fieldRegistry.typeMap_.field_dropdown.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getOptions": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "handleMenuActionEvent_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isOptionListDynamic": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onItemSelected": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "renderSelectedImage_": function () {},
  "renderSelectedText_": function () {},
  "render_": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "trimOptions_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.fieldRegistry.typeMap_.field_image.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setAlt": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setOnClickHandler": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.fieldRegistry.typeMap_.field_input.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.fieldRegistry.typeMap_.field_label.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setClass": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.fieldRegistry.typeMap_.field_label_serializable.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setClass": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.fieldRegistry.typeMap_.field_label_serializable.superClass_.constructor.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setClass": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.fieldRegistry.typeMap_.field_multilinetext.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.fieldRegistry.typeMap_.field_multilinetext.superClass_.constructor.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.fieldRegistry.typeMap_.field_number.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getMax": function () {},
  "getMin": function () {},
  "getParentInput": function () {},
  "getPrecision": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setConstraints": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setMax": function () {},
  "setMaxInternal_": function () {},
  "setMin": function () {},
  "setMinInternal_": function () {},
  "setPrecision": function () {},
  "setPrecisionInternal_": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.fieldRegistry.typeMap_.field_number.superClass_.constructor.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.fieldRegistry.typeMap_.field_variable.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getOptions": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getVariable": function () {},
  "getVariableTypes_": function () {},
  "handleMenuActionEvent_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isOptionListDynamic": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onItemSelected": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "refreshVariableName": function () {},
  "renderSelectedImage_": function () {},
  "renderSelectedText_": function () {},
  "render_": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setTypes_": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "trimOptions_": function () {},
  "typeIsAllowed_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "workspace_": function () {}
};
Blockly.fieldRegistry.typeMap_.field_variable.superClass_.constructor.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getOptions": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "handleMenuActionEvent_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isOptionListDynamic": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onItemSelected": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "renderSelectedImage_": function () {},
  "renderSelectedText_": function () {},
  "render_": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "trimOptions_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.geras.ConstantProvider.prototype = {
  "constructor": function () {},
  "init": function () {},
  "makeInsideCorners": function () {},
  "makeJaggedTeeth": function () {},
  "makeNotch": function () {},
  "makeOutsideCorners": function () {},
  "makePuzzleTab": function () {},
  "makeStartHat": function () {},
  "shapeFor": function () {}
};
Blockly.geras.Drawer.prototype = {
  "constructor": function () {},
  "draw": function () {},
  "drawBottom_": function () {},
  "drawInlineInput_": function () {},
  "drawInternals_": function () {},
  "drawJaggedEdge_": function () {},
  "drawLeft_": function () {},
  "drawOutline_": function () {},
  "drawRightSideRow_": function () {},
  "drawStatementInput_": function () {},
  "drawTop_": function () {},
  "drawValueInput_": function () {},
  "hideHiddenIcons_": function () {},
  "layoutField_": function () {},
  "positionExternalValueConnection_": function () {},
  "positionInlineInputConnection_": function () {},
  "positionNextConnection_": function () {},
  "positionOutputConnection_": function () {},
  "positionPreviousConnection_": function () {},
  "positionStatementInputConnection_": function () {},
  "recordSizeOnBlock_": function () {}
};
Blockly.geras.HighlightConstantProvider.prototype = {
  "makeInsideCorner": function () {},
  "makeJaggedTeeth": function () {},
  "makeNotch": function () {},
  "makeOutsideCorner": function () {},
  "makePuzzleTab": function () {},
  "makeStartHat": function () {}
};
Blockly.geras.Highlighter.prototype = {
  "drawBottomRow": function () {},
  "drawInlineInput": function () {},
  "drawJaggedEdge_": function () {},
  "drawLeft": function () {},
  "drawRightSideRow": function () {},
  "drawStatementInput": function () {},
  "drawTopCorner": function () {},
  "drawValueInput": function () {},
  "getPath": function () {}
};
Blockly.geras.InlineInput.prototype = {
  "constructor": function () {}
};
Blockly.geras.InlineInput.superClass_.constructor.prototype = {
  "constructor": function () {}
};
Blockly.geras.InlineInput.superClass_.constructor.superClass_.constructor.prototype = {
  "constructor": function () {}
};
Blockly.geras.InlineInput.superClass_.constructor.superClass_.constructor.superClass_.constructor.prototype = {
  "constructor": function () {}
};
Blockly.geras.PathObject.prototype = {
  "flipRTL": function () {},
  "setPaths": function () {}
};
Blockly.geras.RenderInfo.prototype = {
  "addAlignmentPadding_": function () {},
  "addElemSpacing_": function () {},
  "addInput_": function () {},
  "addRowSpacing_": function () {},
  "alignRowElements_": function () {},
  "alignStatementRow_": function () {},
  "computeBounds_": function () {},
  "constructor": function () {},
  "createRows_": function () {},
  "finalize_": function () {},
  "getElemCenterline_": function () {},
  "getInRowSpacing_": function () {},
  "getRenderer": function () {},
  "getSpacerRowHeight_": function () {},
  "getSpacerRowWidth_": function () {},
  "makeSpacerRow_": function () {},
  "measure": function () {},
  "populateBottomRow_": function () {},
  "populateTopRow_": function () {},
  "recordElemPositions_": function () {},
  "shouldStartNewRow_": function () {}
};
Blockly.geras.Renderer.prototype = {
  "constructor": function () {},
  "getConstants": function () {},
  "getHighlightConstants": function () {},
  "init": function () {},
  "makeConstants_": function () {},
  "makeCursorDrawer": function () {},
  "makeDebugger_": function () {},
  "makeDrawer_": function () {},
  "makeHighlightConstants_": function () {},
  "makePathObject": function () {},
  "makeRenderInfo_": function () {},
  "render": function () {}
};
Blockly.geras.StatementInput.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.geras.StatementInput.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.geras.StatementInput.superClass_.constructor.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.geras.StatementInput.superClass_.constructor.superClass_.constructor.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.tree.BaseNode.prototype = {
  "add": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "computeDepth_": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "doNodeCollapsed": function () {},
  "doNodeExpanded": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getBackgroundPosition": function () {},
  "getCalculatedIconClass": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getChildren": function () {},
  "getChildrenElement": function () {},
  "getConfig": function () {},
  "getContentElement": function () {},
  "getDepth": function () {},
  "getElement": function () {},
  "getExpanded": function () {},
  "getExpandedIconClass": function () {},
  "getFirstChild": function () {},
  "getIconClass": function () {},
  "getIconDom": function () {},
  "getIconElement": function () {},
  "getId": function () {},
  "getLabelDom": function () {},
  "getLabelElement": function () {},
  "getLastChild": function () {},
  "getLastShownDescendant": function () {},
  "getNextShownNode": function () {},
  "getNextSibling": function () {},
  "getParent": function () {},
  "getPixelIndent_": function () {},
  "getPreviousShownNode": function () {},
  "getPreviousSibling": function () {},
  "getRowClassName": function () {},
  "getRowDom": function () {},
  "getRowElement": function () {},
  "getText": function () {},
  "getTree": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "initAccessibility": function () {},
  "isInDocument": function () {},
  "isLastSibling": function () {},
  "isRightToLeft": function () {},
  "isSelected": function () {},
  "isUserCollapsible": function () {},
  "onClick_": function () {},
  "onKeyDown": function () {},
  "onMouseDown": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "select": function () {},
  "selectChild": function () {},
  "selectFirst": function () {},
  "selectNext": function () {},
  "selectParent": function () {},
  "selectPrevious": function () {},
  "setDepth_": function () {},
  "setElementInternal": function () {},
  "setExpanded": function () {},
  "setExpandedInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setSelectedInternal": function () {},
  "setText": function () {},
  "setTreeInternal": function () {},
  "toDom": function () {},
  "toggle": function () {},
  "updateExpandIcon": function () {},
  "updateIcon_": function () {},
  "updateRow": function () {}
};
Blockly.tree.TreeControl.prototype = {
  "add": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "attachEvents_": function () {},
  "computeDepth_": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createDom": function () {},
  "createNode": function () {},
  "detachEvents_": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "doNodeCollapsed": function () {},
  "doNodeExpanded": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getBackgroundPosition": function () {},
  "getCalculatedIconClass": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getChildren": function () {},
  "getChildrenElement": function () {},
  "getConfig": function () {},
  "getContentElement": function () {},
  "getDepth": function () {},
  "getElement": function () {},
  "getExpanded": function () {},
  "getExpandedIconClass": function () {},
  "getFirstChild": function () {},
  "getIconClass": function () {},
  "getIconDom": function () {},
  "getIconElement": function () {},
  "getId": function () {},
  "getLabelDom": function () {},
  "getLabelElement": function () {},
  "getLastChild": function () {},
  "getLastShownDescendant": function () {},
  "getNextShownNode": function () {},
  "getNextSibling": function () {},
  "getNodeFromEvent_": function () {},
  "getParent": function () {},
  "getPixelIndent_": function () {},
  "getPreviousShownNode": function () {},
  "getPreviousSibling": function () {},
  "getRowClassName": function () {},
  "getRowDom": function () {},
  "getRowElement": function () {},
  "getSelectedItem": function () {},
  "getText": function () {},
  "getToolbox": function () {},
  "getTree": function () {},
  "handleBlur_": function () {},
  "handleFocus_": function () {},
  "handleKeyEvent_": function () {},
  "handleMouseEvent_": function () {},
  "hasChildren": function () {},
  "hasFocus": function () {},
  "indexOfChild": function () {},
  "initAccessibility": function () {},
  "isInDocument": function () {},
  "isLastSibling": function () {},
  "isRightToLeft": function () {},
  "isSelected": function () {},
  "isUserCollapsible": function () {},
  "onAfterSelected": function () {},
  "onBeforeSelected": function () {},
  "onClick_": function () {},
  "onKeyDown": function () {},
  "onMouseDown": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "select": function () {},
  "selectChild": function () {},
  "selectFirst": function () {},
  "selectNext": function () {},
  "selectParent": function () {},
  "selectPrevious": function () {},
  "setDepth_": function () {},
  "setElementInternal": function () {},
  "setExpanded": function () {},
  "setExpandedInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setSelectedInternal": function () {},
  "setSelectedItem": function () {},
  "setText": function () {},
  "setTreeInternal": function () {},
  "toDom": function () {},
  "toggle": function () {},
  "updateExpandIcon": function () {},
  "updateIcon_": function () {},
  "updateRow": function () {}
};
Blockly.tree.TreeControl.superClass_.constructor.prototype = {
  "add": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "computeDepth_": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "doNodeCollapsed": function () {},
  "doNodeExpanded": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getBackgroundPosition": function () {},
  "getCalculatedIconClass": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getChildren": function () {},
  "getChildrenElement": function () {},
  "getConfig": function () {},
  "getContentElement": function () {},
  "getDepth": function () {},
  "getElement": function () {},
  "getExpanded": function () {},
  "getExpandedIconClass": function () {},
  "getFirstChild": function () {},
  "getIconClass": function () {},
  "getIconDom": function () {},
  "getIconElement": function () {},
  "getId": function () {},
  "getLabelDom": function () {},
  "getLabelElement": function () {},
  "getLastChild": function () {},
  "getLastShownDescendant": function () {},
  "getNextShownNode": function () {},
  "getNextSibling": function () {},
  "getParent": function () {},
  "getPixelIndent_": function () {},
  "getPreviousShownNode": function () {},
  "getPreviousSibling": function () {},
  "getRowClassName": function () {},
  "getRowDom": function () {},
  "getRowElement": function () {},
  "getText": function () {},
  "getTree": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "initAccessibility": function () {},
  "isInDocument": function () {},
  "isLastSibling": function () {},
  "isRightToLeft": function () {},
  "isSelected": function () {},
  "isUserCollapsible": function () {},
  "onClick_": function () {},
  "onKeyDown": function () {},
  "onMouseDown": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "select": function () {},
  "selectChild": function () {},
  "selectFirst": function () {},
  "selectNext": function () {},
  "selectParent": function () {},
  "selectPrevious": function () {},
  "setDepth_": function () {},
  "setElementInternal": function () {},
  "setExpanded": function () {},
  "setExpandedInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setSelectedInternal": function () {},
  "setText": function () {},
  "setTreeInternal": function () {},
  "toDom": function () {},
  "toggle": function () {},
  "updateExpandIcon": function () {},
  "updateIcon_": function () {},
  "updateRow": function () {}
};
Blockly.tree.TreeNode.prototype = {
  "add": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "computeDepth_": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "doNodeCollapsed": function () {},
  "doNodeExpanded": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getBackgroundPosition": function () {},
  "getCalculatedIconClass": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getChildren": function () {},
  "getChildrenElement": function () {},
  "getConfig": function () {},
  "getContentElement": function () {},
  "getDepth": function () {},
  "getElement": function () {},
  "getExpanded": function () {},
  "getExpandedIconClass": function () {},
  "getFirstChild": function () {},
  "getIconClass": function () {},
  "getIconDom": function () {},
  "getIconElement": function () {},
  "getId": function () {},
  "getLabelDom": function () {},
  "getLabelElement": function () {},
  "getLastChild": function () {},
  "getLastShownDescendant": function () {},
  "getNextShownNode": function () {},
  "getNextSibling": function () {},
  "getParent": function () {},
  "getPixelIndent_": function () {},
  "getPreviousShownNode": function () {},
  "getPreviousSibling": function () {},
  "getRowClassName": function () {},
  "getRowDom": function () {},
  "getRowElement": function () {},
  "getText": function () {},
  "getTree": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "initAccessibility": function () {},
  "isInDocument": function () {},
  "isLastSibling": function () {},
  "isRightToLeft": function () {},
  "isSelected": function () {},
  "isUserCollapsible": function () {},
  "onClick_": function () {},
  "onKeyDown": function () {},
  "onMouseDown": function () {},
  "onSizeChanged": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "resizeToolbox_": function () {},
  "select": function () {},
  "selectChild": function () {},
  "selectFirst": function () {},
  "selectNext": function () {},
  "selectParent": function () {},
  "selectPrevious": function () {},
  "setDepth_": function () {},
  "setElementInternal": function () {},
  "setExpanded": function () {},
  "setExpandedInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setSelectedInternal": function () {},
  "setText": function () {},
  "setTreeInternal": function () {},
  "toDom": function () {},
  "toggle": function () {},
  "updateExpandIcon": function () {},
  "updateIcon_": function () {},
  "updateRow": function () {}
};
Blockly.tree.TreeNode.superClass_.constructor.prototype = {
  "add": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "computeDepth_": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "doNodeCollapsed": function () {},
  "doNodeExpanded": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getBackgroundPosition": function () {},
  "getCalculatedIconClass": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getChildren": function () {},
  "getChildrenElement": function () {},
  "getConfig": function () {},
  "getContentElement": function () {},
  "getDepth": function () {},
  "getElement": function () {},
  "getExpanded": function () {},
  "getExpandedIconClass": function () {},
  "getFirstChild": function () {},
  "getIconClass": function () {},
  "getIconDom": function () {},
  "getIconElement": function () {},
  "getId": function () {},
  "getLabelDom": function () {},
  "getLabelElement": function () {},
  "getLastChild": function () {},
  "getLastShownDescendant": function () {},
  "getNextShownNode": function () {},
  "getNextSibling": function () {},
  "getParent": function () {},
  "getPixelIndent_": function () {},
  "getPreviousShownNode": function () {},
  "getPreviousSibling": function () {},
  "getRowClassName": function () {},
  "getRowDom": function () {},
  "getRowElement": function () {},
  "getText": function () {},
  "getTree": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "initAccessibility": function () {},
  "isInDocument": function () {},
  "isLastSibling": function () {},
  "isRightToLeft": function () {},
  "isSelected": function () {},
  "isUserCollapsible": function () {},
  "onClick_": function () {},
  "onKeyDown": function () {},
  "onMouseDown": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "select": function () {},
  "selectChild": function () {},
  "selectFirst": function () {},
  "selectNext": function () {},
  "selectParent": function () {},
  "selectPrevious": function () {},
  "setDepth_": function () {},
  "setElementInternal": function () {},
  "setExpanded": function () {},
  "setExpandedInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setSelectedInternal": function () {},
  "setText": function () {},
  "setTreeInternal": function () {},
  "toDom": function () {},
  "toggle": function () {},
  "updateExpandIcon": function () {},
  "updateIcon_": function () {},
  "updateRow": function () {}
};
Blockly.utils.Coordinate.prototype = {
  "scale": function () {},
  "translate": function () {}
};
Blockly.utils.Rect.prototype = {
  "contains": function () {}
};
Blockly.utils.global.Blockly.ASTNode.prototype = {
  "findFirstFieldOrInput_": function () {},
  "findNextForField_": function () {},
  "findNextForInput_": function () {},
  "findPrevForField_": function () {},
  "findPrevForInput_": function () {},
  "findPreviousEditableField_": function () {},
  "findTopASTNodeForBlock_": function () {},
  "getLocation": function () {},
  "getOutAstNodeForBlock_": function () {},
  "getType": function () {},
  "getWsCoordinate": function () {},
  "in": function () {},
  "isConnection": function () {},
  "navigateBetweenStacks_": function () {},
  "next": function () {},
  "out": function () {},
  "prev": function () {},
  "processParams_": function () {}
};
Blockly.utils.global.Blockly.Block.prototype = {
  "allInputsFilled": function () {},
  "appendDummyInput": function () {},
  "appendInput_": function () {},
  "appendStatementInput": function () {},
  "appendValueInput": function () {},
  "bumpNeighbours": function () {},
  "colourSecondary_": function () {},
  "colourTertiary_": function () {},
  "colour_": function () {},
  "data": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "getChildren": function () {},
  "getColour": function () {},
  "getColourBorder": function () {},
  "getColourSecondary": function () {},
  "getColourShadow": function () {},
  "getColourTertiary": function () {},
  "getCommentText": function () {},
  "getConnections_": function () {},
  "getDescendants": function () {},
  "getField": function () {},
  "getFieldValue": function () {},
  "getFirstStatementConnection": function () {},
  "getHue": function () {},
  "getInheritedDisabled": function () {},
  "getInput": function () {},
  "getInputTargetBlock": function () {},
  "getInputWithBlock": function () {},
  "getInputsInline": function () {},
  "getMatchingConnection": function () {},
  "getNextBlock": function () {},
  "getOnlyValueConnection_": function () {},
  "getParent": function () {},
  "getPreviousBlock": function () {},
  "getRelativeToSurfaceXY": function () {},
  "getRootBlock": function () {},
  "getStyleName": function () {},
  "getSurroundParent": function () {},
  "getTopStackBlock": function () {},
  "getVarModels": function () {},
  "getVars": function () {},
  "hue_": function () {},
  "initModel": function () {},
  "interpolate_": function () {},
  "isCollapsed": function () {},
  "isDeletable": function () {},
  "isDuplicatable": function () {},
  "isEditable": function () {},
  "isEnabled": function () {},
  "isInsertionMarker": function () {},
  "isMovable": function () {},
  "isShadow": function () {},
  "jsonInit": function () {},
  "jsonInitColour_": function () {},
  "jsonInitStyle_": function () {},
  "lastConnectionInStack": function () {},
  "makeConnection_": function () {},
  "mixin": function () {},
  "moveBy": function () {},
  "moveInputBefore": function () {},
  "moveNumberedInputBefore": function () {},
  "removeInput": function () {},
  "renameVarById": function () {},
  "setCollapsed": function () {},
  "setColour": function () {},
  "setCommentText": function () {},
  "setDeletable": function () {},
  "setDisabled": function () {},
  "setEditable": function () {},
  "setEnabled": function () {},
  "setFieldValue": function () {},
  "setHelpUrl": function () {},
  "setInputsInline": function () {},
  "setInsertionMarker": function () {},
  "setMovable": function () {},
  "setMutator": function () {},
  "setNextStatement": function () {},
  "setOnChange": function () {},
  "setOutput": function () {},
  "setParent": function () {},
  "setPreviousStatement": function () {},
  "setShadow": function () {},
  "setStyle": function () {},
  "setTooltip": function () {},
  "setWarningText": function () {},
  "styleName_": function () {},
  "toDevString": function () {},
  "toString": function () {},
  "unplug": function () {},
  "unplugFromRow_": function () {},
  "unplugFromStack_": function () {},
  "updateVarName": function () {}
};
Blockly.utils.global.Blockly.BlockDragSurfaceSvg.prototype = {
  "SVG_": function () {},
  "clearAndHide": function () {},
  "container_": function () {},
  "createDom": function () {},
  "dragGroup_": function () {},
  "getCurrentBlock": function () {},
  "getGroup": function () {},
  "getSurfaceTranslation": function () {},
  "scale_": function () {},
  "setBlocksAndShow": function () {},
  "surfaceXY_": function () {},
  "translateAndScaleGroup": function () {},
  "translateSurface": function () {},
  "translateSurfaceInternal_": function () {}
};
Blockly.utils.global.Blockly.BlockDragger.prototype = {
  "dispose": function () {},
  "dragBlock": function () {},
  "dragIcons_": function () {},
  "endBlockDrag": function () {},
  "fireMoveEvent_": function () {},
  "getInsertionMarkers": function () {},
  "maybeDeleteBlock_": function () {},
  "pixelsToWorkspaceUnits_": function () {},
  "startBlockDrag": function () {},
  "updateCursorDuringBlockDrag_": function () {}
};
Blockly.utils.global.Blockly.BlockSvg.prototype = {
  "addSelect": function () {},
  "allInputsFilled": function () {},
  "appendDummyInput": function () {},
  "appendInput_": function () {},
  "appendStatementInput": function () {},
  "appendValueInput": function () {},
  "bringToFront": function () {},
  "bumpNeighbours": function () {},
  "clearTransformAttributes_": function () {},
  "colourSecondary_": function () {},
  "colourTertiary_": function () {},
  "colour_": function () {},
  "comment": function () {},
  "commentIcon_": function () {},
  "constructor": function () {},
  "createTabList_": function () {},
  "data": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "dragStartXY_": function () {},
  "generateContextMenu": function () {},
  "getBoundingRectangle": function () {},
  "getChildren": function () {},
  "getColour": function () {},
  "getColourBorder": function () {},
  "getColourSecondary": function () {},
  "getColourShadow": function () {},
  "getColourTertiary": function () {},
  "getCommentIcon": function () {},
  "getCommentText": function () {},
  "getConnections_": function () {},
  "getDescendants": function () {},
  "getField": function () {},
  "getFieldValue": function () {},
  "getFirstStatementConnection": function () {},
  "getHeightWidth": function () {},
  "getHue": function () {},
  "getIcons": function () {},
  "getInheritedDisabled": function () {},
  "getInput": function () {},
  "getInputTargetBlock": function () {},
  "getInputWithBlock": function () {},
  "getInputsInline": function () {},
  "getMatchingConnection": function () {},
  "getNextBlock": function () {},
  "getOnlyValueConnection_": function () {},
  "getParent": function () {},
  "getPreviousBlock": function () {},
  "getRelativeToSurfaceXY": function () {},
  "getRootBlock": function () {},
  "getStyleName": function () {},
  "getSurroundParent": function () {},
  "getSvgRoot": function () {},
  "getTopStackBlock": function () {},
  "getVarModels": function () {},
  "getVars": function () {},
  "height": function () {},
  "highlightForReplacement": function () {},
  "hue_": function () {},
  "initModel": function () {},
  "initSvg": function () {},
  "interpolate_": function () {},
  "isCollapsed": function () {},
  "isDeletable": function () {},
  "isDuplicatable": function () {},
  "isEditable": function () {},
  "isEnabled": function () {},
  "isInsertionMarker": function () {},
  "isMovable": function () {},
  "isShadow": function () {},
  "jsonInit": function () {},
  "jsonInitColour_": function () {},
  "jsonInitStyle_": function () {},
  "lastConnectionInStack": function () {},
  "makeConnection_": function () {},
  "markDirty": function () {},
  "mixin": function () {},
  "moveBy": function () {},
  "moveConnections_": function () {},
  "moveDuringDrag": function () {},
  "moveInputBefore": function () {},
  "moveNumberedInputBefore": function () {},
  "moveOffDragSurface_": function () {},
  "moveTo": function () {},
  "moveToDragSurface_": function () {},
  "mutator": function () {},
  "onMouseDown_": function () {},
  "positionNearConnection": function () {},
  "positionNewBlock": function () {},
  "removeInput": function () {},
  "removeSelect": function () {},
  "renameVarById": function () {},
  "render": function () {},
  "scheduleSnapAndBump": function () {},
  "select": function () {},
  "setBorderColour_": function () {},
  "setCollapsed": function () {},
  "setColour": function () {},
  "setCommentText": function () {},
  "setConnectionsHidden": function () {},
  "setCursorSvg": function () {},
  "setDeletable": function () {},
  "setDeleteStyle": function () {},
  "setDisabled": function () {},
  "setDragging": function () {},
  "setEditable": function () {},
  "setEnabled": function () {},
  "setFieldValue": function () {},
  "setHelpUrl": function () {},
  "setHighlighted": function () {},
  "setInputsInline": function () {},
  "setInsertionMarker": function () {},
  "setMarkerSvg": function () {},
  "setMovable": function () {},
  "setMutator": function () {},
  "setNextStatement": function () {},
  "setOnChange": function () {},
  "setOutput": function () {},
  "setParent": function () {},
  "setPreviousStatement": function () {},
  "setShadow": function () {},
  "setShadowColour_": function () {},
  "setStyle": function () {},
  "setTooltip": function () {},
  "setWarningText": function () {},
  "showContextMenu_": function () {},
  "showHelp_": function () {},
  "snapToGrid": function () {},
  "styleName_": function () {},
  "tab": function () {},
  "toDevString": function () {},
  "toString": function () {},
  "translate": function () {},
  "unplug": function () {},
  "unplugFromRow_": function () {},
  "unplugFromStack_": function () {},
  "unselect": function () {},
  "updateColour": function () {},
  "updateConnectionLocations_": function () {},
  "updateDisabled": function () {},
  "updateMovable": function () {},
  "updateVarName": function () {},
  "warning": function () {},
  "warningTextDb_": function () {},
  "width": function () {}
};
Blockly.utils.global.Blockly.Bubble.prototype = {
  "anchorXY_": function () {},
  "autoLayout_": function () {},
  "bubbleMouseDown_": function () {},
  "createDom_": function () {},
  "dispose": function () {},
  "getBubbleSize": function () {},
  "getOptimalRelativeLeft_": function () {},
  "getOptimalRelativeTop_": function () {},
  "getOverlap_": function () {},
  "getRelativeToSurfaceXY": function () {},
  "getSvgRoot": function () {},
  "height_": function () {},
  "isDeletable": function () {},
  "layoutBubble_": function () {},
  "moveDuringDrag": function () {},
  "moveTo": function () {},
  "positionBubble_": function () {},
  "promote_": function () {},
  "registerResizeEvent": function () {},
  "relativeLeft_": function () {},
  "relativeTop_": function () {},
  "renderArrow_": function () {},
  "rendered_": function () {},
  "resizeCallback_": function () {},
  "resizeMouseDown_": function () {},
  "resizeMouseMove_": function () {},
  "setAnchorLocation": function () {},
  "setAutoLayout": function () {},
  "setBubbleSize": function () {},
  "setColour": function () {},
  "setSvgId": function () {},
  "showContextMenu_": function () {},
  "width_": function () {}
};
Blockly.utils.global.Blockly.BubbleDragger.prototype = {
  "dispose": function () {},
  "dragBubble": function () {},
  "endBubbleDrag": function () {},
  "fireMoveEvent_": function () {},
  "maybeDeleteBubble_": function () {},
  "moveToDragSurface_": function () {},
  "pixelsToWorkspaceUnits_": function () {},
  "startBubbleDrag": function () {},
  "updateCursorDuringBubbleDrag_": function () {}
};
Blockly.utils.global.Blockly.Comment.prototype = {
  "SIZE": function () {},
  "bubble_": function () {},
  "collapseHidden": function () {},
  "computeIconLocation": function () {},
  "constructor": function () {},
  "createBubble_": function () {},
  "createEditableBubble_": function () {},
  "createEditor_": function () {},
  "createIcon": function () {},
  "createNonEditableBubble_": function () {},
  "dispose": function () {},
  "disposeBubble_": function () {},
  "drawIcon_": function () {},
  "getBubbleSize": function () {},
  "getCorrectedSize": function () {},
  "getIconLocation": function () {},
  "getText": function () {},
  "iconClick_": function () {},
  "iconXY_": function () {},
  "isVisible": function () {},
  "onBubbleResize_": function () {},
  "resizeTextarea_": function () {},
  "setBubbleSize": function () {},
  "setIconLocation": function () {},
  "setText": function () {},
  "setVisible": function () {},
  "startEdit_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateText": function () {}
};
Blockly.utils.global.Blockly.Component.prototype = {
  "addChild": function () {},
  "addChildAt": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getContentElement": function () {},
  "getElement": function () {},
  "getId": function () {},
  "getParent": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "isInDocument": function () {},
  "isRightToLeft": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "setElementInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {}
};
Blockly.utils.global.Blockly.Connection.prototype = {
  "canConnectToPrevious_": function () {},
  "canConnectWithReason_": function () {},
  "checkConnection_": function () {},
  "checkType_": function () {},
  "check_": function () {},
  "connect": function () {},
  "connect_": function () {},
  "disconnect": function () {},
  "disconnectInternal_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "getCheck": function () {},
  "getParentInput": function () {},
  "getShadowDom": function () {},
  "getSourceBlock": function () {},
  "isConnected": function () {},
  "isConnectionAllowed": function () {},
  "isSuperior": function () {},
  "neighbours_": function () {},
  "onCheckChanged_": function () {},
  "onFailedConnect": function () {},
  "respawnShadow_": function () {},
  "setCheck": function () {},
  "setShadowDom": function () {},
  "shadowDom_": function () {},
  "targetBlock": function () {},
  "targetConnection": function () {},
  "toString": function () {},
  "x_": function () {},
  "y_": function () {}
};
Blockly.utils.global.Blockly.ConnectionDB.prototype = {
  "addConnection": function () {},
  "findConnection": function () {},
  "findPositionForConnection_": function () {},
  "getNeighbours": function () {},
  "isInYRange_": function () {},
  "removeConnection_": function () {},
  "searchForClosest": function () {}
};
Blockly.utils.global.Blockly.Cursor.prototype = {
  "getCurNode": function () {},
  "getDrawer": function () {},
  "hide": function () {},
  "in": function () {},
  "next": function () {},
  "out": function () {},
  "prev": function () {},
  "setCurNode": function () {},
  "setDrawer": function () {}
};
Blockly.utils.global.Blockly.CursorSvg.prototype = {
  "createCursorSvg_": function () {},
  "createDom": function () {},
  "currentCursorSvg": function () {},
  "dispose": function () {},
  "draw": function () {},
  "flipRtl_": function () {},
  "getSvgRoot": function () {},
  "hide": function () {},
  "positionBlock_": function () {},
  "positionInput_": function () {},
  "positionLine_": function () {},
  "positionOutput_": function () {},
  "positionPrevious_": function () {},
  "positionRect_": function () {},
  "setParent_": function () {},
  "showCurrent_": function () {},
  "showWithBlockPrevOutput_": function () {},
  "showWithCoordinates_": function () {},
  "showWithField_": function () {},
  "showWithInput_": function () {},
  "showWithNext_": function () {},
  "showWithStack_": function () {}
};
Blockly.utils.global.Blockly.Events.Abstract.prototype = {
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.BlockBase.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.BlockChange.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.BlockChange.superClass_.constructor.prototype = {
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.BlockCreate.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.BlockCreate.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.BlockDelete.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.BlockDelete.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.BlockMove.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "currentLocation_": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "recordNew": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.BlockMove.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.Change.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.Change.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.CommentBase.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.CommentChange.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.CommentChange.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.CommentCreate.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.CommentCreate.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.CommentDelete.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.CommentDelete.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.CommentMove.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "recordNew": function () {},
  "run": function () {},
  "setOldCoordinate": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.CommentMove.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.Create.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.Create.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.Delete.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.Delete.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.FinishedLoading.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.Move.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "currentLocation_": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "recordNew": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.Move.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.Ui.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.VarBase.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.VarCreate.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.VarCreate.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.VarDelete.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.VarDelete.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Events.VarRename.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {},
  "type": function () {}
};
Blockly.utils.global.Blockly.Events.VarRename.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "fromJson": function () {},
  "getEventWorkspace_": function () {},
  "isNull": function () {},
  "run": function () {},
  "toJson": function () {}
};
Blockly.utils.global.Blockly.Field.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.FieldAngle.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "displayMouseOrKeyboardValue_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "hide_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "onMouseMove": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateGraph_": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {},
  "wrapValue_": function () {}
};
Blockly.utils.global.Blockly.FieldAngle.superClass_.constructor.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.utils.global.Blockly.FieldCheckbox.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "convertValueToBool_": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueBoolean": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setCheckCharacter": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.FieldColour.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "colours_": function () {},
  "columns_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getHighlighted_": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "moveHighlightBy_": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onClick_": function () {},
  "onKeyDown_": function () {},
  "onMouseDown_": function () {},
  "onMouseEnter_": function () {},
  "onMouseLeave_": function () {},
  "onMouseMove_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setColours": function () {},
  "setColumns": function () {},
  "setCursorSvg": function () {},
  "setHighlightedCell_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "titles_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.FieldDropdown.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getOptions": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "handleMenuActionEvent_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isOptionListDynamic": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onItemSelected": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "renderSelectedImage_": function () {},
  "renderSelectedText_": function () {},
  "render_": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "trimOptions_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.FieldImage.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setAlt": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setOnClickHandler": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.FieldLabel.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setClass": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.FieldLabelSerializable.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setClass": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.FieldLabelSerializable.superClass_.constructor.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setClass": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.FieldMultilineInput.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.utils.global.Blockly.FieldMultilineInput.superClass_.constructor.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.utils.global.Blockly.FieldNumber.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getMax": function () {},
  "getMin": function () {},
  "getParentInput": function () {},
  "getPrecision": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setConstraints": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setMax": function () {},
  "setMaxInternal_": function () {},
  "setMin": function () {},
  "setMinInternal_": function () {},
  "setPrecision": function () {},
  "setPrecisionInternal_": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.utils.global.Blockly.FieldNumber.superClass_.constructor.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.utils.global.Blockly.FieldTextInput.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.utils.global.Blockly.FieldVariable.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getOptions": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getVariable": function () {},
  "getVariableTypes_": function () {},
  "handleMenuActionEvent_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isOptionListDynamic": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onItemSelected": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "refreshVariableName": function () {},
  "renderSelectedImage_": function () {},
  "renderSelectedText_": function () {},
  "render_": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setTypes_": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "trimOptions_": function () {},
  "typeIsAllowed_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "workspace_": function () {}
};
Blockly.utils.global.Blockly.FieldVariable.superClass_.constructor.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getOptions": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "handleMenuActionEvent_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isOptionListDynamic": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onItemSelected": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "renderSelectedImage_": function () {},
  "renderSelectedText_": function () {},
  "render_": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "trimOptions_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.Flyout.prototype = {
  "CORNER_RADIUS": function () {},
  "GAP_X": function () {},
  "GAP_Y": function () {},
  "MARGIN": function () {},
  "SCROLLBAR_PADDING": function () {},
  "addBlockListeners_": function () {},
  "autoClose": function () {},
  "blockMouseDown_": function () {},
  "clearOldBlocks_": function () {},
  "containerVisible_": function () {},
  "createBlock": function () {},
  "createDom": function () {},
  "createRect_": function () {},
  "dispose": function () {},
  "dragAngleRange_": function () {},
  "filterForCapacity_": function () {},
  "getHeight": function () {},
  "getWidth": function () {},
  "getWorkspace": function () {},
  "height_": function () {},
  "hide": function () {},
  "init": function () {},
  "initFlyoutButton_": function () {},
  "isBlockCreatable_": function () {},
  "isScrollable": function () {},
  "isVisible": function () {},
  "isVisible_": function () {},
  "moveRectToBlock_": function () {},
  "onMouseDown_": function () {},
  "placeNewBlock_": function () {},
  "positionAt_": function () {},
  "reflow": function () {},
  "setContainerVisible": function () {},
  "setVisible": function () {},
  "show": function () {},
  "updateDisplay_": function () {},
  "width_": function () {}
};
Blockly.utils.global.Blockly.FlyoutButton.prototype = {
  "createDom": function () {},
  "dispose": function () {},
  "getPosition": function () {},
  "getTargetWorkspace": function () {},
  "height": function () {},
  "moveTo": function () {},
  "onMouseUpWrapper_": function () {},
  "onMouseUp_": function () {},
  "show": function () {},
  "updateTransform_": function () {},
  "width": function () {}
};
Blockly.utils.global.Blockly.FlyoutCursor.prototype = {
  "constructor": function () {},
  "getCurNode": function () {},
  "getDrawer": function () {},
  "hide": function () {},
  "in": function () {},
  "next": function () {},
  "out": function () {},
  "prev": function () {},
  "setCurNode": function () {},
  "setDrawer": function () {}
};
Blockly.utils.global.Blockly.FlyoutDragger.prototype = {
  "constructor": function () {},
  "dispose": function () {},
  "drag": function () {},
  "endDrag": function () {},
  "startDrag": function () {}
};
Blockly.utils.global.Blockly.Generator.prototype = {
  "COMMENT_WRAP": function () {},
  "FUNCTION_NAME_PLACEHOLDER_": function () {},
  "INDENT": function () {},
  "INFINITE_LOOP_TRAP": function () {},
  "ORDER_OVERRIDES": function () {},
  "RESERVED_WORDS_": function () {},
  "STATEMENT_PREFIX": function () {},
  "STATEMENT_SUFFIX": function () {},
  "addLoopTrap": function () {},
  "addReservedWords": function () {},
  "allNestedComments": function () {},
  "blockToCode": function () {},
  "finish": function () {},
  "init": function () {},
  "injectId": function () {},
  "prefixLines": function () {},
  "provideFunction_": function () {},
  "scrubNakedValue": function () {},
  "scrub_": function () {},
  "statementToCode": function () {},
  "valueToCode": function () {},
  "workspaceToCode": function () {}
};
Blockly.utils.global.Blockly.Gesture.prototype = {
  "bindMouseEvents": function () {},
  "bringBlockToFront_": function () {},
  "cancel": function () {},
  "dispose": function () {},
  "doBlockClick_": function () {},
  "doBubbleClick_": function () {},
  "doFieldClick_": function () {},
  "doStart": function () {},
  "doWorkspaceClick_": function () {},
  "getInsertionMarkers": function () {},
  "handleBlockStart": function () {},
  "handleBubbleStart": function () {},
  "handleFlyoutStart": function () {},
  "handleMove": function () {},
  "handleRightClick": function () {},
  "handleUp": function () {},
  "handleWsStart": function () {},
  "hasStarted": function () {},
  "isBlockClick_": function () {},
  "isBubbleClick_": function () {},
  "isDragging": function () {},
  "isFieldClick_": function () {},
  "isWorkspaceClick_": function () {},
  "setStartBlock": function () {},
  "setStartBubble": function () {},
  "setStartField": function () {},
  "setStartFlyout_": function () {},
  "setStartWorkspace_": function () {},
  "setTargetBlock_": function () {},
  "startDraggingBlock_": function () {},
  "startDraggingBubble_": function () {},
  "updateDragDelta_": function () {},
  "updateFromEvent_": function () {},
  "updateIsDraggingBlock_": function () {},
  "updateIsDraggingBubble_": function () {},
  "updateIsDraggingFromFlyout_": function () {},
  "updateIsDraggingWorkspace_": function () {},
  "updateIsDragging_": function () {}
};
Blockly.utils.global.Blockly.Grid.prototype = {
  "dispose": function () {},
  "getPatternId": function () {},
  "getSpacing": function () {},
  "moveTo": function () {},
  "scale_": function () {},
  "setLineAttributes_": function () {},
  "shouldSnap": function () {},
  "update": function () {}
};
Blockly.utils.global.Blockly.HorizontalFlyout.prototype = {
  "CORNER_RADIUS": function () {},
  "GAP_X": function () {},
  "GAP_Y": function () {},
  "MARGIN": function () {},
  "SCROLLBAR_PADDING": function () {},
  "addBlockListeners_": function () {},
  "autoClose": function () {},
  "blockMouseDown_": function () {},
  "clearOldBlocks_": function () {},
  "constructor": function () {},
  "containerVisible_": function () {},
  "createBlock": function () {},
  "createDom": function () {},
  "createRect_": function () {},
  "dispose": function () {},
  "dragAngleRange_": function () {},
  "filterForCapacity_": function () {},
  "getClientRect": function () {},
  "getHeight": function () {},
  "getMetrics_": function () {},
  "getWidth": function () {},
  "getWorkspace": function () {},
  "height_": function () {},
  "hide": function () {},
  "init": function () {},
  "initFlyoutButton_": function () {},
  "isBlockCreatable_": function () {},
  "isDragTowardWorkspace": function () {},
  "isScrollable": function () {},
  "isVisible": function () {},
  "isVisible_": function () {},
  "layout_": function () {},
  "moveRectToBlock_": function () {},
  "onMouseDown_": function () {},
  "placeNewBlock_": function () {},
  "position": function () {},
  "positionAt_": function () {},
  "reflow": function () {},
  "reflowInternal_": function () {},
  "scrollToStart": function () {},
  "setBackgroundPath_": function () {},
  "setContainerVisible": function () {},
  "setMetrics_": function () {},
  "setVisible": function () {},
  "show": function () {},
  "updateDisplay_": function () {},
  "wheel_": function () {},
  "width_": function () {}
};
Blockly.utils.global.Blockly.Icon.prototype = {
  "SIZE": function () {},
  "bubble_": function () {},
  "collapseHidden": function () {},
  "computeIconLocation": function () {},
  "createIcon": function () {},
  "dispose": function () {},
  "getCorrectedSize": function () {},
  "getIconLocation": function () {},
  "iconClick_": function () {},
  "iconXY_": function () {},
  "isVisible": function () {},
  "setIconLocation": function () {},
  "updateColour": function () {},
  "updateEditable": function () {}
};
Blockly.utils.global.Blockly.Input.prototype = {
  "align": function () {},
  "appendField": function () {},
  "dispose": function () {},
  "getSourceBlock": function () {},
  "init": function () {},
  "insertFieldAt": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "removeField": function () {},
  "setAlign": function () {},
  "setCheck": function () {},
  "setVisible": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.InsertionMarkerManager.prototype = {
  "applyConnections": function () {},
  "connectMarker_": function () {},
  "createMarkerBlock_": function () {},
  "disconnectMarker_": function () {},
  "dispose": function () {},
  "getCandidate_": function () {},
  "getInsertionMarkers": function () {},
  "getStartRadius_": function () {},
  "hidePreview_": function () {},
  "highlightBlock_": function () {},
  "initAvailableConnections_": function () {},
  "maybeHidePreview_": function () {},
  "maybeShowPreview_": function () {},
  "shouldDelete_": function () {},
  "shouldReplace_": function () {},
  "shouldUpdatePreviews_": function () {},
  "showPreview_": function () {},
  "unhighlightBlock_": function () {},
  "update": function () {},
  "wouldConnectBlock": function () {},
  "wouldDeleteBlock": function () {}
};
Blockly.utils.global.Blockly.MarkerCursor.prototype = {
  "constructor": function () {},
  "getCurNode": function () {},
  "getDrawer": function () {},
  "hide": function () {},
  "in": function () {},
  "next": function () {},
  "out": function () {},
  "prev": function () {},
  "setCurNode": function () {},
  "setDrawer": function () {}
};
Blockly.utils.global.Blockly.Menu.prototype = {
  "addChild": function () {},
  "addChildAt": function () {},
  "attachEvents_": function () {},
  "blur": function () {},
  "canHighlightItem": function () {},
  "childElementIdMap_": function () {},
  "clearHighlighted": function () {},
  "constructor": function () {},
  "createDom": function () {},
  "detachEvents_": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "focus": function () {},
  "forEachChild": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getContentElement": function () {},
  "getElement": function () {},
  "getHighlighted": function () {},
  "getId": function () {},
  "getMenuItem": function () {},
  "getParent": function () {},
  "handleClick_": function () {},
  "handleKeyEvent": function () {},
  "handleKeyEventInternal": function () {},
  "handleMouseEnter_": function () {},
  "handleMouseLeave_": function () {},
  "handleMouseOver_": function () {},
  "hasChildren": function () {},
  "highlightHelper": function () {},
  "highlightNext": function () {},
  "highlightPrevious": function () {},
  "indexOfChild": function () {},
  "isInDocument": function () {},
  "isRightToLeft": function () {},
  "registerChildId_": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "setElementInternal": function () {},
  "setHighlighted": function () {},
  "setHighlightedIndex": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setRole": function () {},
  "unhighlightCurrent": function () {}
};
Blockly.utils.global.Blockly.MenuItem.prototype = {
  "addChild": function () {},
  "addChildAt": function () {},
  "constructor": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getCheckboxDom": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getContentDom": function () {},
  "getContentElement": function () {},
  "getContentWrapperDom": function () {},
  "getElement": function () {},
  "getId": function () {},
  "getParent": function () {},
  "getValue": function () {},
  "handleClick": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "isEnabled": function () {},
  "isInDocument": function () {},
  "isRightToLeft": function () {},
  "onAction": function () {},
  "performActionInternal": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "setCheckable": function () {},
  "setChecked": function () {},
  "setContentInternal": function () {},
  "setElementInternal": function () {},
  "setEnabled": function () {},
  "setHighlighted": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setRole": function () {},
  "setValue": function () {}
};
Blockly.utils.global.Blockly.Mutator.prototype = {
  "SIZE": function () {},
  "bubble_": function () {},
  "collapseHidden": function () {},
  "computeIconLocation": function () {},
  "constructor": function () {},
  "createEditor_": function () {},
  "createIcon": function () {},
  "dispose": function () {},
  "drawIcon_": function () {},
  "getCorrectedSize": function () {},
  "getFlyoutMetrics_": function () {},
  "getIconLocation": function () {},
  "iconClick_": function () {},
  "iconXY_": function () {},
  "isVisible": function () {},
  "resizeBubble_": function () {},
  "setIconLocation": function () {},
  "setVisible": function () {},
  "updateBlockStyle": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "workspaceChanged_": function () {},
  "workspaceHeight_": function () {},
  "workspaceWidth_": function () {}
};
Blockly.utils.global.Blockly.Names.prototype = {
  "getDistinctName": function () {},
  "getName": function () {},
  "getNameForUserVariable_": function () {},
  "reset": function () {},
  "safeName_": function () {},
  "setVariableMap": function () {}
};
Blockly.utils.global.Blockly.Options.prototype = {
  "getMetrics": function () {},
  "parentWorkspace": function () {},
  "setMetrics": function () {}
};
Blockly.utils.global.Blockly.RenderedConnection.prototype = {
  "bumpAwayFrom_": function () {},
  "canConnectToPrevious_": function () {},
  "canConnectWithReason_": function () {},
  "checkConnection_": function () {},
  "checkType_": function () {},
  "check_": function () {},
  "closest": function () {},
  "connect": function () {},
  "connect_": function () {},
  "constructor": function () {},
  "disconnect": function () {},
  "disconnectInternal_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "distanceFrom": function () {},
  "getCheck": function () {},
  "getOffsetInBlock": function () {},
  "getParentInput": function () {},
  "getShadowDom": function () {},
  "getSourceBlock": function () {},
  "hideAll": function () {},
  "highlight": function () {},
  "isConnected": function () {},
  "isConnectionAllowed": function () {},
  "isSuperior": function () {},
  "moveBy": function () {},
  "moveTo": function () {},
  "moveToOffset": function () {},
  "neighbours_": function () {},
  "onCheckChanged_": function () {},
  "onFailedConnect": function () {},
  "respawnShadow_": function () {},
  "setCheck": function () {},
  "setHidden": function () {},
  "setOffsetInBlock": function () {},
  "setShadowDom": function () {},
  "shadowDom_": function () {},
  "targetBlock": function () {},
  "targetConnection": function () {},
  "tighten_": function () {},
  "toString": function () {},
  "unhideAll": function () {},
  "unhighlight": function () {},
  "x_": function () {},
  "y_": function () {}
};
Blockly.utils.global.Blockly.Scrollbar.prototype = {
  "cleanUp_": function () {},
  "constrainHandle_": function () {},
  "containerVisible_": function () {},
  "createDom_": function () {},
  "dispose": function () {},
  "handleLength_": function () {},
  "handlePosition_": function () {},
  "isVisible": function () {},
  "isVisible_": function () {},
  "onMouseDownBar_": function () {},
  "onMouseDownHandle_": function () {},
  "onMouseMoveHandle_": function () {},
  "onMouseUpHandle_": function () {},
  "onScroll_": function () {},
  "origin_": function () {},
  "resize": function () {},
  "resizeContentHorizontal": function () {},
  "resizeContentVertical": function () {},
  "resizeHorizontal_": function () {},
  "resizeVertical_": function () {},
  "resizeViewHorizontal": function () {},
  "resizeViewVertical": function () {},
  "scrollViewSize_": function () {},
  "set": function () {},
  "setContainerVisible": function () {},
  "setHandleLength_": function () {},
  "setHandlePosition": function () {},
  "setOrigin": function () {},
  "setPosition_": function () {},
  "setScrollViewSize_": function () {},
  "setVisible": function () {},
  "startDragMouse_": function () {},
  "updateDisplay_": function () {}
};
Blockly.utils.global.Blockly.ScrollbarPair.prototype = {
  "dispose": function () {},
  "getRatio_": function () {},
  "oldHostMetrics_": function () {},
  "resize": function () {},
  "set": function () {},
  "setContainerVisible": function () {}
};
Blockly.utils.global.Blockly.Theme.prototype = {
  "getAllBlockStyles": function () {},
  "getBlockStyle": function () {},
  "getCategoryStyle": function () {},
  "getComponentStyle": function () {},
  "setAllBlockStyles": function () {},
  "setBlockStyle": function () {},
  "setCategoryStyle": function () {},
  "setComponentStyle": function () {}
};
Blockly.utils.global.Blockly.ThemeManager.prototype = {
  "dispose": function () {},
  "getTheme": function () {},
  "setTheme": function () {},
  "subscribe": function () {},
  "subscribeWorkspace": function () {},
  "unsubscribe": function () {},
  "unsubscribeWorkspace": function () {}
};
Blockly.utils.global.Blockly.Toolbox.prototype = {
  "addColour_": function () {},
  "addStyle": function () {},
  "clearSelection": function () {},
  "dispose": function () {},
  "getClientRect": function () {},
  "getHeight": function () {},
  "getWidth": function () {},
  "handleAfterTreeSelected_": function () {},
  "handleBeforeTreeSelected_": function () {},
  "handleNodeSizeChanged_": function () {},
  "height": function () {},
  "init": function () {},
  "lastCategory_": function () {},
  "onBlocklyAction": function () {},
  "position": function () {},
  "refreshSelection": function () {},
  "removeStyle": function () {},
  "renderTree": function () {},
  "selectFirstCategory": function () {},
  "selectedOption_": function () {},
  "setColourFromStyle_": function () {},
  "setColour_": function () {},
  "syncTrees_": function () {},
  "updateColourFromTheme": function () {},
  "updateColourFromTheme_": function () {},
  "updateSelectedItemColour_": function () {},
  "width": function () {}
};
Blockly.utils.global.Blockly.Toolbox.TreeSeparator.prototype = {
  "add": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "computeDepth_": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "doNodeCollapsed": function () {},
  "doNodeExpanded": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getBackgroundPosition": function () {},
  "getCalculatedIconClass": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getChildren": function () {},
  "getChildrenElement": function () {},
  "getConfig": function () {},
  "getContentElement": function () {},
  "getDepth": function () {},
  "getElement": function () {},
  "getExpanded": function () {},
  "getExpandedIconClass": function () {},
  "getFirstChild": function () {},
  "getIconClass": function () {},
  "getIconDom": function () {},
  "getIconElement": function () {},
  "getId": function () {},
  "getLabelDom": function () {},
  "getLabelElement": function () {},
  "getLastChild": function () {},
  "getLastShownDescendant": function () {},
  "getNextShownNode": function () {},
  "getNextSibling": function () {},
  "getParent": function () {},
  "getPixelIndent_": function () {},
  "getPreviousShownNode": function () {},
  "getPreviousSibling": function () {},
  "getRowClassName": function () {},
  "getRowDom": function () {},
  "getRowElement": function () {},
  "getText": function () {},
  "getTree": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "initAccessibility": function () {},
  "isInDocument": function () {},
  "isLastSibling": function () {},
  "isRightToLeft": function () {},
  "isSelected": function () {},
  "isUserCollapsible": function () {},
  "onClick_": function () {},
  "onKeyDown": function () {},
  "onMouseDown": function () {},
  "onSizeChanged": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "resizeToolbox_": function () {},
  "select": function () {},
  "selectChild": function () {},
  "selectFirst": function () {},
  "selectNext": function () {},
  "selectParent": function () {},
  "selectPrevious": function () {},
  "setDepth_": function () {},
  "setElementInternal": function () {},
  "setExpanded": function () {},
  "setExpandedInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setSelectedInternal": function () {},
  "setText": function () {},
  "setTreeInternal": function () {},
  "toDom": function () {},
  "toggle": function () {},
  "updateExpandIcon": function () {},
  "updateIcon_": function () {},
  "updateRow": function () {}
};
Blockly.utils.global.Blockly.Toolbox.TreeSeparator.superClass_.constructor.prototype = {
  "add": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "computeDepth_": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "doNodeCollapsed": function () {},
  "doNodeExpanded": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getBackgroundPosition": function () {},
  "getCalculatedIconClass": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getChildren": function () {},
  "getChildrenElement": function () {},
  "getConfig": function () {},
  "getContentElement": function () {},
  "getDepth": function () {},
  "getElement": function () {},
  "getExpanded": function () {},
  "getExpandedIconClass": function () {},
  "getFirstChild": function () {},
  "getIconClass": function () {},
  "getIconDom": function () {},
  "getIconElement": function () {},
  "getId": function () {},
  "getLabelDom": function () {},
  "getLabelElement": function () {},
  "getLastChild": function () {},
  "getLastShownDescendant": function () {},
  "getNextShownNode": function () {},
  "getNextSibling": function () {},
  "getParent": function () {},
  "getPixelIndent_": function () {},
  "getPreviousShownNode": function () {},
  "getPreviousSibling": function () {},
  "getRowClassName": function () {},
  "getRowDom": function () {},
  "getRowElement": function () {},
  "getText": function () {},
  "getTree": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "initAccessibility": function () {},
  "isInDocument": function () {},
  "isLastSibling": function () {},
  "isRightToLeft": function () {},
  "isSelected": function () {},
  "isUserCollapsible": function () {},
  "onClick_": function () {},
  "onKeyDown": function () {},
  "onMouseDown": function () {},
  "onSizeChanged": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "resizeToolbox_": function () {},
  "select": function () {},
  "selectChild": function () {},
  "selectFirst": function () {},
  "selectNext": function () {},
  "selectParent": function () {},
  "selectPrevious": function () {},
  "setDepth_": function () {},
  "setElementInternal": function () {},
  "setExpanded": function () {},
  "setExpandedInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setSelectedInternal": function () {},
  "setText": function () {},
  "setTreeInternal": function () {},
  "toDom": function () {},
  "toggle": function () {},
  "updateExpandIcon": function () {},
  "updateIcon_": function () {},
  "updateRow": function () {}
};
Blockly.utils.global.Blockly.Toolbox.TreeSeparator.superClass_.constructor.superClass_.constructor.prototype = {
  "add": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "closure_uid_118192521": function () {},
  "computeDepth_": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "doNodeCollapsed": function () {},
  "doNodeExpanded": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getBackgroundPosition": function () {},
  "getCalculatedIconClass": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getChildren": function () {},
  "getChildrenElement": function () {},
  "getConfig": function () {},
  "getContentElement": function () {},
  "getDepth": function () {},
  "getElement": function () {},
  "getExpanded": function () {},
  "getExpandedIconClass": function () {},
  "getFirstChild": function () {},
  "getIconClass": function () {},
  "getIconDom": function () {},
  "getIconElement": function () {},
  "getId": function () {},
  "getLabelDom": function () {},
  "getLabelElement": function () {},
  "getLastChild": function () {},
  "getLastShownDescendant": function () {},
  "getNextShownNode": function () {},
  "getNextSibling": function () {},
  "getParent": function () {},
  "getPixelIndent_": function () {},
  "getPreviousShownNode": function () {},
  "getPreviousSibling": function () {},
  "getRowClassName": function () {},
  "getRowDom": function () {},
  "getRowElement": function () {},
  "getText": function () {},
  "getTree": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "initAccessibility": function () {},
  "isInDocument": function () {},
  "isLastSibling": function () {},
  "isRightToLeft": function () {},
  "isSelected": function () {},
  "isUserCollapsible": function () {},
  "onClick_": function () {},
  "onKeyDown": function () {},
  "onMouseDown": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "select": function () {},
  "selectChild": function () {},
  "selectFirst": function () {},
  "selectNext": function () {},
  "selectParent": function () {},
  "selectPrevious": function () {},
  "setDepth_": function () {},
  "setElementInternal": function () {},
  "setExpanded": function () {},
  "setExpandedInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setSelectedInternal": function () {},
  "setText": function () {},
  "setTreeInternal": function () {},
  "toDom": function () {},
  "toggle": function () {},
  "updateExpandIcon": function () {},
  "updateIcon_": function () {},
  "updateRow": function () {}
};
Blockly.utils.global.Blockly.TouchGesture.prototype = {
  "bindMouseEvents": function () {},
  "bringBlockToFront_": function () {},
  "cancel": function () {},
  "constructor": function () {},
  "dispose": function () {},
  "doBlockClick_": function () {},
  "doBubbleClick_": function () {},
  "doFieldClick_": function () {},
  "doStart": function () {},
  "doWorkspaceClick_": function () {},
  "getInsertionMarkers": function () {},
  "getTouchPoint": function () {},
  "handleBlockStart": function () {},
  "handleBubbleStart": function () {},
  "handleFlyoutStart": function () {},
  "handleMove": function () {},
  "handleRightClick": function () {},
  "handleStart": function () {},
  "handleTouchEnd": function () {},
  "handleTouchMove": function () {},
  "handleTouchStart": function () {},
  "handleUp": function () {},
  "handleWsStart": function () {},
  "hasStarted": function () {},
  "isBlockClick_": function () {},
  "isBubbleClick_": function () {},
  "isDragging": function () {},
  "isFieldClick_": function () {},
  "isMultiTouch": function () {},
  "isWorkspaceClick_": function () {},
  "setStartBlock": function () {},
  "setStartBubble": function () {},
  "setStartField": function () {},
  "setStartFlyout_": function () {},
  "setStartWorkspace_": function () {},
  "setTargetBlock_": function () {},
  "startDraggingBlock_": function () {},
  "startDraggingBubble_": function () {},
  "updateDragDelta_": function () {},
  "updateFromEvent_": function () {},
  "updateIsDraggingBlock_": function () {},
  "updateIsDraggingBubble_": function () {},
  "updateIsDraggingFromFlyout_": function () {},
  "updateIsDraggingWorkspace_": function () {},
  "updateIsDragging_": function () {}
};
Blockly.utils.global.Blockly.Trashcan.prototype = {
  "BODY_HEIGHT_": function () {},
  "HAS_BLOCKS_LID_ANGLE": function () {},
  "LID_HEIGHT_": function () {},
  "MARGIN_BOTTOM_": function () {},
  "MARGIN_HOTSPOT_": function () {},
  "MARGIN_SIDE_": function () {},
  "SPRITE_LEFT_": function () {},
  "SPRITE_TOP_": function () {},
  "WIDTH_": function () {},
  "animateLid_": function () {},
  "cleanBlockXML_": function () {},
  "click": function () {},
  "close": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "getClientRect": function () {},
  "init": function () {},
  "isOpen": function () {},
  "left_": function () {},
  "lidOpen_": function () {},
  "lidTask_": function () {},
  "minOpenness_": function () {},
  "mouseOut_": function () {},
  "mouseOver_": function () {},
  "onDelete_": function () {},
  "position": function () {},
  "setLidAngle_": function () {},
  "setOpen_": function () {},
  "svgGroup_": function () {},
  "svgLid_": function () {},
  "top_": function () {}
};
Blockly.utils.global.Blockly.VariableMap.prototype = {
  "clear": function () {},
  "createVariable": function () {},
  "deleteVariable": function () {},
  "deleteVariableById": function () {},
  "deleteVariableInternal_": function () {},
  "getAllVariables": function () {},
  "getVariable": function () {},
  "getVariableById": function () {},
  "getVariableTypes": function () {},
  "getVariableUsesById": function () {},
  "getVariablesOfType": function () {},
  "renameVariable": function () {},
  "renameVariableAndUses_": function () {},
  "renameVariableById": function () {},
  "renameVariableWithConflict_": function () {}
};
Blockly.utils.global.Blockly.VariableModel.prototype = {
  "getId": function () {}
};
Blockly.utils.global.Blockly.VerticalFlyout.prototype = {
  "CORNER_RADIUS": function () {},
  "GAP_X": function () {},
  "GAP_Y": function () {},
  "MARGIN": function () {},
  "SCROLLBAR_PADDING": function () {},
  "addBlockListeners_": function () {},
  "autoClose": function () {},
  "blockMouseDown_": function () {},
  "clearOldBlocks_": function () {},
  "constructor": function () {},
  "containerVisible_": function () {},
  "createBlock": function () {},
  "createDom": function () {},
  "createRect_": function () {},
  "dispose": function () {},
  "dragAngleRange_": function () {},
  "filterForCapacity_": function () {},
  "getClientRect": function () {},
  "getHeight": function () {},
  "getMetrics_": function () {},
  "getWidth": function () {},
  "getWorkspace": function () {},
  "height_": function () {},
  "hide": function () {},
  "init": function () {},
  "initFlyoutButton_": function () {},
  "isBlockCreatable_": function () {},
  "isDragTowardWorkspace": function () {},
  "isScrollable": function () {},
  "isVisible": function () {},
  "isVisible_": function () {},
  "layout_": function () {},
  "moveRectToBlock_": function () {},
  "onMouseDown_": function () {},
  "placeNewBlock_": function () {},
  "position": function () {},
  "positionAt_": function () {},
  "reflow": function () {},
  "reflowInternal_": function () {},
  "scrollToStart": function () {},
  "setBackgroundPath_": function () {},
  "setContainerVisible": function () {},
  "setMetrics_": function () {},
  "setVisible": function () {},
  "show": function () {},
  "updateDisplay_": function () {},
  "wheel_": function () {},
  "width_": function () {}
};
Blockly.utils.global.Blockly.Warning.prototype = {
  "SIZE": function () {},
  "bodyFocus_": function () {},
  "bubble_": function () {},
  "collapseHidden": function () {},
  "computeIconLocation": function () {},
  "constructor": function () {},
  "createBubble": function () {},
  "createIcon": function () {},
  "dispose": function () {},
  "disposeBubble": function () {},
  "drawIcon_": function () {},
  "getCorrectedSize": function () {},
  "getIconLocation": function () {},
  "getText": function () {},
  "iconClick_": function () {},
  "iconXY_": function () {},
  "isVisible": function () {},
  "setIconLocation": function () {},
  "setText": function () {},
  "setVisible": function () {},
  "updateColour": function () {},
  "updateEditable": function () {}
};
Blockly.utils.global.Blockly.Workspace.prototype = {
  "MAX_UNDO": function () {},
  "addChangeListener": function () {},
  "addTopBlock": function () {},
  "addTopComment": function () {},
  "addTypedBlock": function () {},
  "allInputsFilled": function () {},
  "clear": function () {},
  "clearUndo": function () {},
  "connectionDBList": function () {},
  "createPotentialVariableMap": function () {},
  "createVariable": function () {},
  "deleteVariableById": function () {},
  "deleteVariableInternal_": function () {},
  "dispose": function () {},
  "fireChangeListener": function () {},
  "getAllBlocks": function () {},
  "getAllVariables": function () {},
  "getBlockById": function () {},
  "getBlocksByType": function () {},
  "getCommentById": function () {},
  "getCursor": function () {},
  "getMarker": function () {},
  "getPotentialVariableMap": function () {},
  "getTheme": function () {},
  "getThemeManager": function () {},
  "getTopBlocks": function () {},
  "getTopComments": function () {},
  "getVariable": function () {},
  "getVariableById": function () {},
  "getVariableMap": function () {},
  "getVariableTypes": function () {},
  "getVariableUsesById": function () {},
  "getVariablesOfType": function () {},
  "getWidth": function () {},
  "hasBlockLimits": function () {},
  "isCapacityAvailable": function () {},
  "isClearing": function () {},
  "newBlock": function () {},
  "refreshTheme": function () {},
  "remainingCapacity": function () {},
  "remainingCapacityOfType": function () {},
  "removeChangeListener": function () {},
  "removeTopBlock": function () {},
  "removeTopComment": function () {},
  "removeTypedBlock": function () {},
  "renameVariableById": function () {},
  "rendered": function () {},
  "setCursor": function () {},
  "setMarker": function () {},
  "setTheme": function () {},
  "sortObjects_": function () {},
  "undo": function () {},
  "updateBlockStyles_": function () {},
  "variableIndexOf": function () {}
};
Blockly.utils.global.Blockly.WorkspaceAudio.prototype = {
  "dispose": function () {},
  "lastSound_": function () {},
  "load": function () {},
  "play": function () {},
  "preload": function () {}
};
Blockly.utils.global.Blockly.WorkspaceDragSurfaceSvg.prototype = {
  "SVG_": function () {},
  "clearAndHide": function () {},
  "container_": function () {},
  "createDom": function () {},
  "dragGroup_": function () {},
  "getSurfaceTranslation": function () {},
  "setContentsAndShow": function () {},
  "translateSurface": function () {}
};
Blockly.utils.global.Blockly.WorkspaceDragger.prototype = {
  "dispose": function () {},
  "drag": function () {},
  "endDrag": function () {},
  "startDrag": function () {}
};
Blockly.utils.global.Blockly.WorkspaceSvg.prototype = {
  "MAX_UNDO": function () {},
  "addChangeListener": function () {},
  "addFlyout_": function () {},
  "addTopBlock": function () {},
  "addTopComment": function () {},
  "addTrashcan": function () {},
  "addTypedBlock": function () {},
  "addZoomControls": function () {},
  "allInputsFilled": function () {},
  "beginCanvasTransition": function () {},
  "blockDragSurface_": function () {},
  "cancelCurrentGesture": function () {},
  "centerOnBlock": function () {},
  "cleanUp": function () {},
  "clear": function () {},
  "clearGesture": function () {},
  "clearUndo": function () {},
  "configureContextMenu": function () {},
  "connectionDBList": function () {},
  "constructor": function () {},
  "createDom": function () {},
  "createPotentialVariableMap": function () {},
  "createVariable": function () {},
  "currentGesture_": function () {},
  "deleteVariableById": function () {},
  "deleteVariableInternal_": function () {},
  "dispose": function () {},
  "dragDeltaXY_": function () {},
  "endCanvasTransition": function () {},
  "fireChangeListener": function () {},
  "flyoutButtonCallbacks_": function () {},
  "flyout_": function () {},
  "getAllBlocks": function () {},
  "getAllVariables": function () {},
  "getAudioManager": function () {},
  "getBlockById": function () {},
  "getBlockDragSurface": function () {},
  "getBlocksBoundingBox": function () {},
  "getBlocksByType": function () {},
  "getBubbleCanvas": function () {},
  "getButtonCallback": function () {},
  "getCanvas": function () {},
  "getCommentById": function () {},
  "getCursor": function () {},
  "getFlyout": function () {},
  "getGesture": function () {},
  "getGrid": function () {},
  "getInjectionDiv": function () {},
  "getInverseScreenCTM": function () {},
  "getMarker": function () {},
  "getOriginOffsetInPixels": function () {},
  "getParentSvg": function () {},
  "getPotentialVariableMap": function () {},
  "getRenderer": function () {},
  "getSvgXY": function () {},
  "getTheme": function () {},
  "getThemeManager": function () {},
  "getToolbox": function () {},
  "getToolboxCategoryCallback": function () {},
  "getTopBlocks": function () {},
  "getTopComments": function () {},
  "getVariable": function () {},
  "getVariableById": function () {},
  "getVariableMap": function () {},
  "getVariableTypes": function () {},
  "getVariableUsesById": function () {},
  "getVariablesOfType": function () {},
  "getWidth": function () {},
  "hasBlockLimits": function () {},
  "highlightBlock": function () {},
  "injectionDiv_": function () {},
  "inverseScreenCTMDirty_": function () {},
  "inverseScreenCTM_": function () {},
  "isCapacityAvailable": function () {},
  "isClearing": function () {},
  "isContentBounded": function () {},
  "isDeleteArea": function () {},
  "isDragSurfaceActive_": function () {},
  "isDraggable": function () {},
  "isDragging": function () {},
  "isFlyout": function () {},
  "isMovable": function () {},
  "isMutator": function () {},
  "isVisible": function () {},
  "isVisible_": function () {},
  "lastRecordedPageScroll_": function () {},
  "markFocused": function () {},
  "moveDrag": function () {},
  "newBlock": function () {},
  "onMouseDown_": function () {},
  "onMouseWheel_": function () {},
  "paste": function () {},
  "pasteBlock_": function () {},
  "pasteWorkspaceComment_": function () {},
  "recordDeleteAreas": function () {},
  "refreshTheme": function () {},
  "refreshToolboxSelection": function () {},
  "registerButtonCallback": function () {},
  "registerToolboxCategoryCallback": function () {},
  "remainingCapacity": function () {},
  "remainingCapacityOfType": function () {},
  "removeButtonCallback": function () {},
  "removeChangeListener": function () {},
  "removeToolboxCategoryCallback": function () {},
  "removeTopBlock": function () {},
  "removeTopComment": function () {},
  "removeTypedBlock": function () {},
  "renameVariableById": function () {},
  "render": function () {},
  "rendered": function () {},
  "resetDragSurface": function () {},
  "resize": function () {},
  "resizeContents": function () {},
  "resizeHandlerWrapper_": function () {},
  "resizesEnabled_": function () {},
  "scale": function () {},
  "scroll": function () {},
  "scrollCenter": function () {},
  "scrollX": function () {},
  "scrollY": function () {},
  "scrollbar": function () {},
  "setBrowserFocus": function () {},
  "setCursor": function () {},
  "setCursorSvg": function () {},
  "setMarker": function () {},
  "setMarkerSvg": function () {},
  "setResizeHandlerWrapper": function () {},
  "setResizesEnabled": function () {},
  "setScale": function () {},
  "setTheme": function () {},
  "setVisible": function () {},
  "setupDragSurface": function () {},
  "showContextMenu_": function () {},
  "sortObjects_": function () {},
  "startDrag": function () {},
  "startScrollX": function () {},
  "startScrollY": function () {},
  "targetWorkspace": function () {},
  "toolboxCategoryCallbacks_": function () {},
  "toolbox_": function () {},
  "traceOn": function () {},
  "translate": function () {},
  "trashcan": function () {},
  "undo": function () {},
  "updateBlockStyles_": function () {},
  "updateInverseScreenCTM": function () {},
  "updateScreenCalculationsIfScrolled": function () {},
  "updateScreenCalculations_": function () {},
  "updateToolbox": function () {},
  "useWorkspaceDragSurface_": function () {},
  "variableIndexOf": function () {},
  "workspaceDragSurface_": function () {},
  "zoom": function () {},
  "zoomCenter": function () {},
  "zoomToFit": function () {}
};
Blockly.utils.global.Blockly.ZoomControls.prototype = {
  "HEIGHT_": function () {},
  "MARGIN_BOTTOM_": function () {},
  "MARGIN_SIDE_": function () {},
  "WIDTH_": function () {},
  "createDom": function () {},
  "createZoomInSvg_": function () {},
  "createZoomOutSvg_": function () {},
  "createZoomResetSvg_": function () {},
  "dispose": function () {},
  "init": function () {},
  "left_": function () {},
  "position": function () {},
  "svgGroup_": function () {},
  "top_": function () {}
};
Blockly.utils.global.Blockly.blockRendering.BottomRow.prototype = {
  "constructor": function () {},
  "endsWithElemSpacer": function () {},
  "getFirstSpacer": function () {},
  "getLastInput": function () {},
  "getLastSpacer": function () {},
  "hasLeftSquareCorner": function () {},
  "measure": function () {},
  "startsWithElemSpacer": function () {}
};
Blockly.utils.global.Blockly.blockRendering.Connection.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.ConstantProvider.prototype = {
  "init": function () {},
  "makeInsideCorners": function () {},
  "makeJaggedTeeth": function () {},
  "makeNotch": function () {},
  "makeOutsideCorners": function () {},
  "makePuzzleTab": function () {},
  "makeStartHat": function () {},
  "shapeFor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.Drawer.prototype = {
  "draw": function () {},
  "drawBottom_": function () {},
  "drawInlineInput_": function () {},
  "drawInternals_": function () {},
  "drawJaggedEdge_": function () {},
  "drawLeft_": function () {},
  "drawOutline_": function () {},
  "drawRightSideRow_": function () {},
  "drawStatementInput_": function () {},
  "drawTop_": function () {},
  "drawValueInput_": function () {},
  "hideHiddenIcons_": function () {},
  "layoutField_": function () {},
  "positionExternalValueConnection_": function () {},
  "positionInlineInputConnection_": function () {},
  "positionNextConnection_": function () {},
  "positionOutputConnection_": function () {},
  "positionPreviousConnection_": function () {},
  "positionStatementInputConnection_": function () {},
  "recordSizeOnBlock_": function () {}
};
Blockly.utils.global.Blockly.blockRendering.ExternalValueInput.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.ExternalValueInput.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.ExternalValueInput.superClass_.constructor.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.Field.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.Hat.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.Icon.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.InRowSpacer.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.InlineInput.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.InlineInput.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.InlineInput.superClass_.constructor.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.InputConnection.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.InputConnection.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.InputRow.prototype = {
  "constructor": function () {},
  "endsWithElemSpacer": function () {},
  "getFirstSpacer": function () {},
  "getLastInput": function () {},
  "getLastSpacer": function () {},
  "measure": function () {},
  "startsWithElemSpacer": function () {}
};
Blockly.utils.global.Blockly.blockRendering.JaggedEdge.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.Measurable.prototype = {
  "closure_uid_118192521": function () {}
};
Blockly.utils.global.Blockly.blockRendering.NextConnection.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.NextConnection.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.OutputConnection.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {},
  "isDynamic": function () {}
};
Blockly.utils.global.Blockly.blockRendering.OutputConnection.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.PathObject.prototype = {
  "flipRTL": function () {},
  "setPaths": function () {}
};
Blockly.utils.global.Blockly.blockRendering.PreviousConnection.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.PreviousConnection.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.RenderInfo.prototype = {
  "addAlignmentPadding_": function () {},
  "addElemSpacing_": function () {},
  "addInput_": function () {},
  "addRowSpacing_": function () {},
  "alignRowElements_": function () {},
  "alignStatementRow_": function () {},
  "computeBounds_": function () {},
  "createRows_": function () {},
  "finalize_": function () {},
  "getElemCenterline_": function () {},
  "getInRowSpacing_": function () {},
  "getRenderer": function () {},
  "getSpacerRowHeight_": function () {},
  "getSpacerRowWidth_": function () {},
  "makeSpacerRow_": function () {},
  "measure": function () {},
  "populateBottomRow_": function () {},
  "populateTopRow_": function () {},
  "recordElemPositions_": function () {},
  "shouldStartNewRow_": function () {}
};
Blockly.utils.global.Blockly.blockRendering.Renderer.prototype = {
  "getConstants": function () {},
  "init": function () {},
  "makeConstants_": function () {},
  "makeCursorDrawer": function () {},
  "makeDebugger_": function () {},
  "makeDrawer_": function () {},
  "makeHighlightConstants_": function () {},
  "makePathObject": function () {},
  "makeRenderInfo_": function () {},
  "render": function () {}
};
Blockly.utils.global.Blockly.blockRendering.RoundCorner.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.Row.prototype = {
  "endsWithElemSpacer": function () {},
  "getFirstSpacer": function () {},
  "getLastInput": function () {},
  "getLastSpacer": function () {},
  "measure": function () {},
  "startsWithElemSpacer": function () {}
};
Blockly.utils.global.Blockly.blockRendering.SpacerRow.prototype = {
  "constructor": function () {},
  "endsWithElemSpacer": function () {},
  "getFirstSpacer": function () {},
  "getLastInput": function () {},
  "getLastSpacer": function () {},
  "measure": function () {},
  "startsWithElemSpacer": function () {}
};
Blockly.utils.global.Blockly.blockRendering.SquareCorner.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.StatementInput.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.StatementInput.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.StatementInput.superClass_.constructor.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.blockRendering.TopRow.prototype = {
  "constructor": function () {},
  "endsWithElemSpacer": function () {},
  "getFirstSpacer": function () {},
  "getLastInput": function () {},
  "getLastSpacer": function () {},
  "hasLeftSquareCorner": function () {},
  "measure": function () {},
  "startsWithElemSpacer": function () {}
};
Blockly.utils.global.Blockly.blockRendering.rendererMap_.geras.prototype = {
  "constructor": function () {},
  "getConstants": function () {},
  "getHighlightConstants": function () {},
  "init": function () {},
  "makeConstants_": function () {},
  "makeCursorDrawer": function () {},
  "makeDebugger_": function () {},
  "makeDrawer_": function () {},
  "makeHighlightConstants_": function () {},
  "makePathObject": function () {},
  "makeRenderInfo_": function () {},
  "render": function () {}
};
Blockly.utils.global.Blockly.fieldRegistry.typeMap_.field_angle.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "displayMouseOrKeyboardValue_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "hide_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "onMouseMove": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateGraph_": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {},
  "wrapValue_": function () {}
};
Blockly.utils.global.Blockly.fieldRegistry.typeMap_.field_angle.superClass_.constructor.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.utils.global.Blockly.fieldRegistry.typeMap_.field_checkbox.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "closure_uid_118192521": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "convertValueToBool_": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueBoolean": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setCheckCharacter": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.fieldRegistry.typeMap_.field_colour.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "closure_uid_118192521": function () {},
  "colours_": function () {},
  "columns_": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getHighlighted_": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "moveHighlightBy_": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onClick_": function () {},
  "onKeyDown_": function () {},
  "onMouseDown_": function () {},
  "onMouseEnter_": function () {},
  "onMouseLeave_": function () {},
  "onMouseMove_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setColours": function () {},
  "setColumns": function () {},
  "setCursorSvg": function () {},
  "setHighlightedCell_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "titles_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.fieldRegistry.typeMap_.field_dropdown.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "closure_uid_118192521": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getOptions": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "handleMenuActionEvent_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isOptionListDynamic": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onItemSelected": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "renderSelectedImage_": function () {},
  "renderSelectedText_": function () {},
  "render_": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "trimOptions_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.fieldRegistry.typeMap_.field_image.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "closure_uid_118192521": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setAlt": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setOnClickHandler": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.fieldRegistry.typeMap_.field_input.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "closure_uid_118192521": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.utils.global.Blockly.fieldRegistry.typeMap_.field_label.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "closure_uid_118192521": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setClass": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.fieldRegistry.typeMap_.field_label_serializable.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "closure_uid_118192521": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setClass": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.fieldRegistry.typeMap_.field_label_serializable.superClass_.constructor.prototype = {
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "closure_uid_118192521": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "setClass": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.fieldRegistry.typeMap_.field_multilinetext.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "closure_uid_118192521": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.utils.global.Blockly.fieldRegistry.typeMap_.field_multilinetext.superClass_.constructor.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "closure_uid_118192521": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.utils.global.Blockly.fieldRegistry.typeMap_.field_number.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "closure_uid_118192521": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getMax": function () {},
  "getMin": function () {},
  "getParentInput": function () {},
  "getPrecision": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setConstraints": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setMax": function () {},
  "setMaxInternal_": function () {},
  "setMin": function () {},
  "setMinInternal_": function () {},
  "setPrecision": function () {},
  "setPrecisionInternal_": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.utils.global.Blockly.fieldRegistry.typeMap_.field_number.superClass_.constructor.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "bindInputEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "closure_uid_118192521": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getEditorText_": function () {},
  "getFlipRtl": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getValueFromEditorText_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onHtmlInputChange_": function () {},
  "onHtmlInputKeyDown_": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "render_": function () {},
  "resizeEditor_": function () {},
  "setCursorSvg": function () {},
  "setEditorValue_": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setSpellcheck": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "showInlineEditor_": function () {},
  "showPromptEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "unbindInputEvents_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "widgetCreate_": function () {},
  "widgetDispose_": function () {}
};
Blockly.utils.global.Blockly.fieldRegistry.typeMap_.field_variable.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "closure_uid_118192521": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getOptions": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "getVariable": function () {},
  "getVariableTypes_": function () {},
  "handleMenuActionEvent_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isOptionListDynamic": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onItemSelected": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "refreshVariableName": function () {},
  "renderSelectedImage_": function () {},
  "renderSelectedText_": function () {},
  "render_": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setTypes_": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "trimOptions_": function () {},
  "typeIsAllowed_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {},
  "workspace_": function () {}
};
Blockly.utils.global.Blockly.fieldRegistry.typeMap_.field_variable.superClass_.constructor.prototype = {
  "CURSOR": function () {},
  "EDITABLE": function () {},
  "SERIALIZABLE": function () {},
  "bindEvents_": function () {},
  "callValidator": function () {},
  "classValidator": function () {},
  "clickTarget_": function () {},
  "closure_uid_118192521": function () {},
  "configure_": function () {},
  "constructor": function () {},
  "createBorderRect_": function () {},
  "createTextElement_": function () {},
  "dispose": function () {},
  "disposed": function () {},
  "doClassValidation_": function () {},
  "doValueInvalid_": function () {},
  "doValueUpdate_": function () {},
  "dropdownCreate_": function () {},
  "dropdownDispose_": function () {},
  "forceRerender": function () {},
  "fromXml": function () {},
  "getAbsoluteXY_": function () {},
  "getClickTarget_": function () {},
  "getDisplayText_": function () {},
  "getFlipRtl": function () {},
  "getOptions": function () {},
  "getParentInput": function () {},
  "getScaledBBox_": function () {},
  "getSize": function () {},
  "getSourceBlock": function () {},
  "getSvgRoot": function () {},
  "getText": function () {},
  "getText_": function () {},
  "getValidator": function () {},
  "getValue": function () {},
  "handleMenuActionEvent_": function () {},
  "init": function () {},
  "initModel": function () {},
  "initView": function () {},
  "isClickable": function () {},
  "isCurrentlyEditable": function () {},
  "isDirty_": function () {},
  "isOptionListDynamic": function () {},
  "isSerializable": function () {},
  "isTabNavigable": function () {},
  "isVisible": function () {},
  "markDirty": function () {},
  "maxDisplayLength": function () {},
  "name": function () {},
  "onBlocklyAction": function () {},
  "onItemSelected": function () {},
  "onMouseDown_": function () {},
  "processValidation_": function () {},
  "referencesVariables": function () {},
  "renderSelectedImage_": function () {},
  "renderSelectedText_": function () {},
  "render_": function () {},
  "setCursorSvg": function () {},
  "setMarkerSvg": function () {},
  "setSourceBlock": function () {},
  "setText": function () {},
  "setTooltip": function () {},
  "setValidator": function () {},
  "setValue": function () {},
  "setVisible": function () {},
  "showEditor_": function () {},
  "sourceBlock_": function () {},
  "toXml": function () {},
  "trimOptions_": function () {},
  "updateColour": function () {},
  "updateEditable": function () {},
  "updateSize_": function () {},
  "updateWidth": function () {},
  "visible_": function () {}
};
Blockly.utils.global.Blockly.geras.ConstantProvider.prototype = {
  "constructor": function () {},
  "init": function () {},
  "makeInsideCorners": function () {},
  "makeJaggedTeeth": function () {},
  "makeNotch": function () {},
  "makeOutsideCorners": function () {},
  "makePuzzleTab": function () {},
  "makeStartHat": function () {},
  "shapeFor": function () {}
};
Blockly.utils.global.Blockly.geras.Drawer.prototype = {
  "constructor": function () {},
  "draw": function () {},
  "drawBottom_": function () {},
  "drawInlineInput_": function () {},
  "drawInternals_": function () {},
  "drawJaggedEdge_": function () {},
  "drawLeft_": function () {},
  "drawOutline_": function () {},
  "drawRightSideRow_": function () {},
  "drawStatementInput_": function () {},
  "drawTop_": function () {},
  "drawValueInput_": function () {},
  "hideHiddenIcons_": function () {},
  "layoutField_": function () {},
  "positionExternalValueConnection_": function () {},
  "positionInlineInputConnection_": function () {},
  "positionNextConnection_": function () {},
  "positionOutputConnection_": function () {},
  "positionPreviousConnection_": function () {},
  "positionStatementInputConnection_": function () {},
  "recordSizeOnBlock_": function () {}
};
Blockly.utils.global.Blockly.geras.HighlightConstantProvider.prototype = {
  "makeInsideCorner": function () {},
  "makeJaggedTeeth": function () {},
  "makeNotch": function () {},
  "makeOutsideCorner": function () {},
  "makePuzzleTab": function () {},
  "makeStartHat": function () {}
};
Blockly.utils.global.Blockly.geras.Highlighter.prototype = {
  "drawBottomRow": function () {},
  "drawInlineInput": function () {},
  "drawJaggedEdge_": function () {},
  "drawLeft": function () {},
  "drawRightSideRow": function () {},
  "drawStatementInput": function () {},
  "drawTopCorner": function () {},
  "drawValueInput": function () {},
  "getPath": function () {}
};
Blockly.utils.global.Blockly.geras.InlineInput.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.geras.InlineInput.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.geras.InlineInput.superClass_.constructor.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.geras.InlineInput.superClass_.constructor.superClass_.constructor.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.geras.PathObject.prototype = {
  "flipRTL": function () {},
  "setPaths": function () {}
};
Blockly.utils.global.Blockly.geras.RenderInfo.prototype = {
  "addAlignmentPadding_": function () {},
  "addElemSpacing_": function () {},
  "addInput_": function () {},
  "addRowSpacing_": function () {},
  "alignRowElements_": function () {},
  "alignStatementRow_": function () {},
  "computeBounds_": function () {},
  "constructor": function () {},
  "createRows_": function () {},
  "finalize_": function () {},
  "getElemCenterline_": function () {},
  "getInRowSpacing_": function () {},
  "getRenderer": function () {},
  "getSpacerRowHeight_": function () {},
  "getSpacerRowWidth_": function () {},
  "makeSpacerRow_": function () {},
  "measure": function () {},
  "populateBottomRow_": function () {},
  "populateTopRow_": function () {},
  "recordElemPositions_": function () {},
  "shouldStartNewRow_": function () {}
};
Blockly.utils.global.Blockly.geras.Renderer.prototype = {
  "constructor": function () {},
  "getConstants": function () {},
  "getHighlightConstants": function () {},
  "init": function () {},
  "makeConstants_": function () {},
  "makeCursorDrawer": function () {},
  "makeDebugger_": function () {},
  "makeDrawer_": function () {},
  "makeHighlightConstants_": function () {},
  "makePathObject": function () {},
  "makeRenderInfo_": function () {},
  "render": function () {}
};
Blockly.utils.global.Blockly.geras.StatementInput.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.geras.StatementInput.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.geras.StatementInput.superClass_.constructor.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.geras.StatementInput.superClass_.constructor.superClass_.constructor.superClass_.constructor.prototype = {
  "closure_uid_118192521": function () {},
  "constructor": function () {}
};
Blockly.utils.global.Blockly.tree.BaseNode.prototype = {
  "add": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "closure_uid_118192521": function () {},
  "computeDepth_": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "doNodeCollapsed": function () {},
  "doNodeExpanded": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getBackgroundPosition": function () {},
  "getCalculatedIconClass": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getChildren": function () {},
  "getChildrenElement": function () {},
  "getConfig": function () {},
  "getContentElement": function () {},
  "getDepth": function () {},
  "getElement": function () {},
  "getExpanded": function () {},
  "getExpandedIconClass": function () {},
  "getFirstChild": function () {},
  "getIconClass": function () {},
  "getIconDom": function () {},
  "getIconElement": function () {},
  "getId": function () {},
  "getLabelDom": function () {},
  "getLabelElement": function () {},
  "getLastChild": function () {},
  "getLastShownDescendant": function () {},
  "getNextShownNode": function () {},
  "getNextSibling": function () {},
  "getParent": function () {},
  "getPixelIndent_": function () {},
  "getPreviousShownNode": function () {},
  "getPreviousSibling": function () {},
  "getRowClassName": function () {},
  "getRowDom": function () {},
  "getRowElement": function () {},
  "getText": function () {},
  "getTree": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "initAccessibility": function () {},
  "isInDocument": function () {},
  "isLastSibling": function () {},
  "isRightToLeft": function () {},
  "isSelected": function () {},
  "isUserCollapsible": function () {},
  "onClick_": function () {},
  "onKeyDown": function () {},
  "onMouseDown": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "select": function () {},
  "selectChild": function () {},
  "selectFirst": function () {},
  "selectNext": function () {},
  "selectParent": function () {},
  "selectPrevious": function () {},
  "setDepth_": function () {},
  "setElementInternal": function () {},
  "setExpanded": function () {},
  "setExpandedInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setSelectedInternal": function () {},
  "setText": function () {},
  "setTreeInternal": function () {},
  "toDom": function () {},
  "toggle": function () {},
  "updateExpandIcon": function () {},
  "updateIcon_": function () {},
  "updateRow": function () {}
};
Blockly.utils.global.Blockly.tree.TreeControl.prototype = {
  "add": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "attachEvents_": function () {},
  "closure_uid_118192521": function () {},
  "computeDepth_": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createDom": function () {},
  "createNode": function () {},
  "detachEvents_": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "doNodeCollapsed": function () {},
  "doNodeExpanded": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getBackgroundPosition": function () {},
  "getCalculatedIconClass": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getChildren": function () {},
  "getChildrenElement": function () {},
  "getConfig": function () {},
  "getContentElement": function () {},
  "getDepth": function () {},
  "getElement": function () {},
  "getExpanded": function () {},
  "getExpandedIconClass": function () {},
  "getFirstChild": function () {},
  "getIconClass": function () {},
  "getIconDom": function () {},
  "getIconElement": function () {},
  "getId": function () {},
  "getLabelDom": function () {},
  "getLabelElement": function () {},
  "getLastChild": function () {},
  "getLastShownDescendant": function () {},
  "getNextShownNode": function () {},
  "getNextSibling": function () {},
  "getNodeFromEvent_": function () {},
  "getParent": function () {},
  "getPixelIndent_": function () {},
  "getPreviousShownNode": function () {},
  "getPreviousSibling": function () {},
  "getRowClassName": function () {},
  "getRowDom": function () {},
  "getRowElement": function () {},
  "getSelectedItem": function () {},
  "getText": function () {},
  "getToolbox": function () {},
  "getTree": function () {},
  "handleBlur_": function () {},
  "handleFocus_": function () {},
  "handleKeyEvent_": function () {},
  "handleMouseEvent_": function () {},
  "hasChildren": function () {},
  "hasFocus": function () {},
  "indexOfChild": function () {},
  "initAccessibility": function () {},
  "isInDocument": function () {},
  "isLastSibling": function () {},
  "isRightToLeft": function () {},
  "isSelected": function () {},
  "isUserCollapsible": function () {},
  "onAfterSelected": function () {},
  "onBeforeSelected": function () {},
  "onClick_": function () {},
  "onKeyDown": function () {},
  "onMouseDown": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "select": function () {},
  "selectChild": function () {},
  "selectFirst": function () {},
  "selectNext": function () {},
  "selectParent": function () {},
  "selectPrevious": function () {},
  "setDepth_": function () {},
  "setElementInternal": function () {},
  "setExpanded": function () {},
  "setExpandedInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setSelectedInternal": function () {},
  "setSelectedItem": function () {},
  "setText": function () {},
  "setTreeInternal": function () {},
  "toDom": function () {},
  "toggle": function () {},
  "updateExpandIcon": function () {},
  "updateIcon_": function () {},
  "updateRow": function () {}
};
Blockly.utils.global.Blockly.tree.TreeControl.superClass_.constructor.prototype = {
  "add": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "closure_uid_118192521": function () {},
  "computeDepth_": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "doNodeCollapsed": function () {},
  "doNodeExpanded": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getBackgroundPosition": function () {},
  "getCalculatedIconClass": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getChildren": function () {},
  "getChildrenElement": function () {},
  "getConfig": function () {},
  "getContentElement": function () {},
  "getDepth": function () {},
  "getElement": function () {},
  "getExpanded": function () {},
  "getExpandedIconClass": function () {},
  "getFirstChild": function () {},
  "getIconClass": function () {},
  "getIconDom": function () {},
  "getIconElement": function () {},
  "getId": function () {},
  "getLabelDom": function () {},
  "getLabelElement": function () {},
  "getLastChild": function () {},
  "getLastShownDescendant": function () {},
  "getNextShownNode": function () {},
  "getNextSibling": function () {},
  "getParent": function () {},
  "getPixelIndent_": function () {},
  "getPreviousShownNode": function () {},
  "getPreviousSibling": function () {},
  "getRowClassName": function () {},
  "getRowDom": function () {},
  "getRowElement": function () {},
  "getText": function () {},
  "getTree": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "initAccessibility": function () {},
  "isInDocument": function () {},
  "isLastSibling": function () {},
  "isRightToLeft": function () {},
  "isSelected": function () {},
  "isUserCollapsible": function () {},
  "onClick_": function () {},
  "onKeyDown": function () {},
  "onMouseDown": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "select": function () {},
  "selectChild": function () {},
  "selectFirst": function () {},
  "selectNext": function () {},
  "selectParent": function () {},
  "selectPrevious": function () {},
  "setDepth_": function () {},
  "setElementInternal": function () {},
  "setExpanded": function () {},
  "setExpandedInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setSelectedInternal": function () {},
  "setText": function () {},
  "setTreeInternal": function () {},
  "toDom": function () {},
  "toggle": function () {},
  "updateExpandIcon": function () {},
  "updateIcon_": function () {},
  "updateRow": function () {}
};
Blockly.utils.global.Blockly.tree.TreeNode.prototype = {
  "add": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "closure_uid_118192521": function () {},
  "computeDepth_": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "doNodeCollapsed": function () {},
  "doNodeExpanded": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getBackgroundPosition": function () {},
  "getCalculatedIconClass": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getChildren": function () {},
  "getChildrenElement": function () {},
  "getConfig": function () {},
  "getContentElement": function () {},
  "getDepth": function () {},
  "getElement": function () {},
  "getExpanded": function () {},
  "getExpandedIconClass": function () {},
  "getFirstChild": function () {},
  "getIconClass": function () {},
  "getIconDom": function () {},
  "getIconElement": function () {},
  "getId": function () {},
  "getLabelDom": function () {},
  "getLabelElement": function () {},
  "getLastChild": function () {},
  "getLastShownDescendant": function () {},
  "getNextShownNode": function () {},
  "getNextSibling": function () {},
  "getParent": function () {},
  "getPixelIndent_": function () {},
  "getPreviousShownNode": function () {},
  "getPreviousSibling": function () {},
  "getRowClassName": function () {},
  "getRowDom": function () {},
  "getRowElement": function () {},
  "getText": function () {},
  "getTree": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "initAccessibility": function () {},
  "isInDocument": function () {},
  "isLastSibling": function () {},
  "isRightToLeft": function () {},
  "isSelected": function () {},
  "isUserCollapsible": function () {},
  "onClick_": function () {},
  "onKeyDown": function () {},
  "onMouseDown": function () {},
  "onSizeChanged": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "resizeToolbox_": function () {},
  "select": function () {},
  "selectChild": function () {},
  "selectFirst": function () {},
  "selectNext": function () {},
  "selectParent": function () {},
  "selectPrevious": function () {},
  "setDepth_": function () {},
  "setElementInternal": function () {},
  "setExpanded": function () {},
  "setExpandedInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setSelectedInternal": function () {},
  "setText": function () {},
  "setTreeInternal": function () {},
  "toDom": function () {},
  "toggle": function () {},
  "updateExpandIcon": function () {},
  "updateIcon_": function () {},
  "updateRow": function () {}
};
Blockly.utils.global.Blockly.tree.TreeNode.superClass_.constructor.prototype = {
  "add": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "closure_uid_118192521": function () {},
  "computeDepth_": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createDom": function () {},
  "dispose": function () {},
  "disposeInternal": function () {},
  "doNodeCollapsed": function () {},
  "doNodeExpanded": function () {},
  "enterDocument": function () {},
  "exitDocument": function () {},
  "forEachChild": function () {},
  "getBackgroundPosition": function () {},
  "getCalculatedIconClass": function () {},
  "getChild": function () {},
  "getChildAt": function () {},
  "getChildCount": function () {},
  "getChildren": function () {},
  "getChildrenElement": function () {},
  "getConfig": function () {},
  "getContentElement": function () {},
  "getDepth": function () {},
  "getElement": function () {},
  "getExpanded": function () {},
  "getExpandedIconClass": function () {},
  "getFirstChild": function () {},
  "getIconClass": function () {},
  "getIconDom": function () {},
  "getIconElement": function () {},
  "getId": function () {},
  "getLabelDom": function () {},
  "getLabelElement": function () {},
  "getLastChild": function () {},
  "getLastShownDescendant": function () {},
  "getNextShownNode": function () {},
  "getNextSibling": function () {},
  "getParent": function () {},
  "getPixelIndent_": function () {},
  "getPreviousShownNode": function () {},
  "getPreviousSibling": function () {},
  "getRowClassName": function () {},
  "getRowDom": function () {},
  "getRowElement": function () {},
  "getText": function () {},
  "getTree": function () {},
  "hasChildren": function () {},
  "indexOfChild": function () {},
  "initAccessibility": function () {},
  "isInDocument": function () {},
  "isLastSibling": function () {},
  "isRightToLeft": function () {},
  "isSelected": function () {},
  "isUserCollapsible": function () {},
  "onClick_": function () {},
  "onKeyDown": function () {},
  "onMouseDown": function () {},
  "render": function () {},
  "renderBefore": function () {},
  "render_": function () {},
  "select": function () {},
  "selectChild": function () {},
  "selectFirst": function () {},
  "selectNext": function () {},
  "selectParent": function () {},
  "selectPrevious": function () {},
  "setDepth_": function () {},
  "setElementInternal": function () {},
  "setExpanded": function () {},
  "setExpandedInternal": function () {},
  "setParent": function () {},
  "setRightToLeft": function () {},
  "setSelectedInternal": function () {},
  "setText": function () {},
  "setTreeInternal": function () {},
  "toDom": function () {},
  "toggle": function () {},
  "updateExpandIcon": function () {},
  "updateIcon_": function () {},
  "updateRow": function () {}
};
Blockly.utils.global.FileReader.prototype = {
  "DONE": function () {},
  "EMPTY": function () {},
  "LOADING": function () {},
  "abort": function () {},
  "addEventListener": function () {},
  "constructor": function () {},
  "dispatchEvent": function () {},
  "error": function () {},
  "onabort": function () {},
  "onerror": function () {},
  "onload": function () {},
  "onloadend": function () {},
  "onloadstart": function () {},
  "onprogress": function () {},
  "readAsArrayBuffer": function () {},
  "readAsDataURL": function () {},
  "readAsText": function () {},
  "readyState": function () {},
  "removeEventListener": function () {},
  "result": function () {},
  "toString": function () {}
};
Blockly.utils.global.XMLHttpRequest.prototype = {
  "DONE": function () {},
  "HEADERS_RECEIVED": function () {},
  "LOADING": function () {},
  "OPENED": function () {},
  "UNSENT": function () {},
  "addEventListener": function () {},
  "dispatchEvent": function () {},
  "removeEventListener": function () {}
};
Blockly.utils.global._core.Attr.prototype = {
  "localName": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nodeName": function () {},
  "nodeValue": function () {},
  "ownerElement": function () {},
  "prefix": function () {},
  "specified": function () {},
  "textContent": function () {},
  "toString": function () {},
  "value": function () {}
};
Blockly.utils.global._core.Blob.prototype = {
  "close": function () {},
  "isClosed": function () {},
  "size": function () {},
  "slice": function () {},
  "toString": function () {},
  "type": function () {}
};
Blockly.utils.global._core.CDATASection.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "appendData": function () {},
  "baseURI": function () {},
  "childNodes": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "data": function () {},
  "deleteData": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "hasChildNodes": function () {},
  "insertBefore": function () {},
  "insertData": function () {},
  "isEqualNode": function () {},
  "lastChild": function () {},
  "length": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "remove": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "replaceData": function () {},
  "splitText": function () {},
  "substringData": function () {},
  "textContent": function () {},
  "toString": function () {},
  "wholeText": function () {}
};
Blockly.utils.global._core.CSSImportRule.prototype = {
  "constructor": function () {},
  "parentRule": function () {},
  "parentStyleSheet": function () {},
  "type": function () {}
};
Blockly.utils.global._core.CSSMediaRule.prototype = {
  "constructor": function () {},
  "parentRule": function () {},
  "parentStyleSheet": function () {},
  "type": function () {}
};
Blockly.utils.global._core.CSSRule.prototype = {
  "constructor": function () {}
};
Blockly.utils.global._core.CSSStyleDeclaration.prototype = {
  "_setProperty": function () {},
  "alignment-baseline": function () {},
  "alignmentBaseline": function () {},
  "azimuth": function () {},
  "background": function () {},
  "background-attachment": function () {},
  "background-clip": function () {},
  "background-color": function () {},
  "background-image": function () {},
  "background-origin": function () {},
  "background-position": function () {},
  "background-position-x": function () {},
  "background-position-y": function () {},
  "background-repeat": function () {},
  "background-repeat-x": function () {},
  "background-repeat-y": function () {},
  "background-size": function () {},
  "backgroundAttachment": function () {},
  "backgroundClip": function () {},
  "backgroundColor": function () {},
  "backgroundImage": function () {},
  "backgroundOrigin": function () {},
  "backgroundPosition": function () {},
  "backgroundPositionX": function () {},
  "backgroundPositionY": function () {},
  "backgroundRepeat": function () {},
  "backgroundRepeatX": function () {},
  "backgroundRepeatY": function () {},
  "backgroundSize": function () {},
  "baseline-shift": function () {},
  "baselineShift": function () {},
  "border": function () {},
  "border-bottom": function () {},
  "border-bottom-color": function () {},
  "border-bottom-left-radius": function () {},
  "border-bottom-right-radius": function () {},
  "border-bottom-style": function () {},
  "border-bottom-width": function () {},
  "border-collapse": function () {},
  "border-color": function () {},
  "border-image": function () {},
  "border-image-outset": function () {},
  "border-image-repeat": function () {},
  "border-image-slice": function () {},
  "border-image-source": function () {},
  "border-image-width": function () {},
  "border-left": function () {},
  "border-left-color": function () {},
  "border-left-style": function () {},
  "border-left-width": function () {},
  "border-radius": function () {},
  "border-right": function () {},
  "border-right-color": function () {},
  "border-right-style": function () {},
  "border-right-width": function () {},
  "border-spacing": function () {},
  "border-style": function () {},
  "border-top": function () {},
  "border-top-color": function () {},
  "border-top-left-radius": function () {},
  "border-top-right-radius": function () {},
  "border-top-style": function () {},
  "border-top-width": function () {},
  "border-width": function () {},
  "borderBottom": function () {},
  "borderBottomColor": function () {},
  "borderBottomLeftRadius": function () {},
  "borderBottomRightRadius": function () {},
  "borderBottomStyle": function () {},
  "borderBottomWidth": function () {},
  "borderCollapse": function () {},
  "borderColor": function () {},
  "borderImage": function () {},
  "borderImageOutset": function () {},
  "borderImageRepeat": function () {},
  "borderImageSlice": function () {},
  "borderImageSource": function () {},
  "borderImageWidth": function () {},
  "borderLeft": function () {},
  "borderLeftColor": function () {},
  "borderLeftStyle": function () {},
  "borderLeftWidth": function () {},
  "borderRadius": function () {},
  "borderRight": function () {},
  "borderRightColor": function () {},
  "borderRightStyle": function () {},
  "borderRightWidth": function () {},
  "borderSpacing": function () {},
  "borderStyle": function () {},
  "borderTop": function () {},
  "borderTopColor": function () {},
  "borderTopLeftRadius": function () {},
  "borderTopRightRadius": function () {},
  "borderTopStyle": function () {},
  "borderTopWidth": function () {},
  "borderWidth": function () {},
  "bottom": function () {},
  "box-shadow": function () {},
  "box-sizing": function () {},
  "boxShadow": function () {},
  "boxSizing": function () {},
  "caption-side": function () {},
  "captionSide": function () {},
  "clear": function () {},
  "clip": function () {},
  "color": function () {},
  "color-interpolation": function () {},
  "color-interpolation-filters": function () {},
  "color-profile": function () {},
  "color-rendering": function () {},
  "colorInterpolation": function () {},
  "colorInterpolationFilters": function () {},
  "colorProfile": function () {},
  "colorRendering": function () {},
  "constructor": function () {},
  "content": function () {},
  "counter-increment": function () {},
  "counter-reset": function () {},
  "counterIncrement": function () {},
  "counterReset": function () {},
  "css-float": function () {},
  "cssFloat": function () {},
  "cssText": function () {},
  "cue": function () {},
  "cue-after": function () {},
  "cue-before": function () {},
  "cueAfter": function () {},
  "cueBefore": function () {},
  "cursor": function () {},
  "direction": function () {},
  "display": function () {},
  "dominant-baseline": function () {},
  "dominantBaseline": function () {},
  "elevation": function () {},
  "empty-cells": function () {},
  "emptyCells": function () {},
  "enable-background": function () {},
  "enableBackground": function () {},
  "fill": function () {},
  "fill-opacity": function () {},
  "fill-rule": function () {},
  "fillOpacity": function () {},
  "fillRule": function () {},
  "filter": function () {},
  "float": function () {},
  "flood-color": function () {},
  "flood-opacity": function () {},
  "floodColor": function () {},
  "floodOpacity": function () {},
  "font": function () {},
  "font-family": function () {},
  "font-size": function () {},
  "font-size-adjust": function () {},
  "font-stretch": function () {},
  "font-style": function () {},
  "font-variant": function () {},
  "font-weight": function () {},
  "fontFamily": function () {},
  "fontSize": function () {},
  "fontSizeAdjust": function () {},
  "fontStretch": function () {},
  "fontStyle": function () {},
  "fontVariant": function () {},
  "fontWeight": function () {},
  "getPropertyCSSValue": function () {},
  "getPropertyPriority": function () {},
  "getPropertyShorthand": function () {},
  "getPropertyValue": function () {},
  "glyph-orientation-horizontal": function () {},
  "glyph-orientation-vertical": function () {},
  "glyphOrientationHorizontal": function () {},
  "glyphOrientationVertical": function () {},
  "height": function () {},
  "image-rendering": function () {},
  "imageRendering": function () {},
  "isPropertyImplicit": function () {},
  "item": function () {},
  "kerning": function () {},
  "left": function () {},
  "length": function () {},
  "letter-spacing": function () {},
  "letterSpacing": function () {},
  "lighting-color": function () {},
  "lightingColor": function () {},
  "line-height": function () {},
  "lineHeight": function () {},
  "list-style": function () {},
  "list-style-image": function () {},
  "list-style-position": function () {},
  "list-style-type": function () {},
  "listStyle": function () {},
  "listStyleImage": function () {},
  "listStylePosition": function () {},
  "listStyleType": function () {},
  "margin": function () {},
  "margin-bottom": function () {},
  "margin-left": function () {},
  "margin-right": function () {},
  "margin-top": function () {},
  "marginBottom": function () {},
  "marginLeft": function () {},
  "marginRight": function () {},
  "marginTop": function () {},
  "marker": function () {},
  "marker-end": function () {},
  "marker-mid": function () {},
  "marker-offset": function () {},
  "marker-start": function () {},
  "markerEnd": function () {},
  "markerMid": function () {},
  "markerOffset": function () {},
  "markerStart": function () {},
  "marks": function () {},
  "mask": function () {},
  "max-height": function () {},
  "max-width": function () {},
  "maxHeight": function () {},
  "maxWidth": function () {},
  "min-height": function () {},
  "min-width": function () {},
  "minHeight": function () {},
  "minWidth": function () {},
  "opacity": function () {},
  "orphans": function () {},
  "outline": function () {},
  "outline-color": function () {},
  "outline-offset": function () {},
  "outline-style": function () {},
  "outline-width": function () {},
  "outlineColor": function () {},
  "outlineOffset": function () {},
  "outlineStyle": function () {},
  "outlineWidth": function () {},
  "overflow": function () {},
  "overflow-x": function () {},
  "overflow-y": function () {},
  "overflowX": function () {},
  "overflowY": function () {},
  "padding": function () {},
  "padding-bottom": function () {},
  "padding-left": function () {},
  "padding-right": function () {},
  "padding-top": function () {},
  "paddingBottom": function () {},
  "paddingLeft": function () {},
  "paddingRight": function () {},
  "paddingTop": function () {},
  "page": function () {},
  "page-break-after": function () {},
  "page-break-before": function () {},
  "page-break-inside": function () {},
  "pageBreakAfter": function () {},
  "pageBreakBefore": function () {},
  "pageBreakInside": function () {},
  "parentRule": function () {},
  "pause": function () {},
  "pause-after": function () {},
  "pause-before": function () {},
  "pauseAfter": function () {},
  "pauseBefore": function () {},
  "pitch": function () {},
  "pitch-range": function () {},
  "pitchRange": function () {},
  "play-during": function () {},
  "playDuring": function () {},
  "pointer-events": function () {},
  "pointerEvents": function () {},
  "position": function () {},
  "quotes": function () {},
  "removeProperty": function () {},
  "resize": function () {},
  "richness": function () {},
  "right": function () {},
  "setProperty": function () {},
  "shape-rendering": function () {},
  "shapeRendering": function () {},
  "size": function () {},
  "speak": function () {},
  "speak-header": function () {},
  "speak-numeral": function () {},
  "speak-punctuation": function () {},
  "speakHeader": function () {},
  "speakNumeral": function () {},
  "speakPunctuation": function () {},
  "speech-rate": function () {},
  "speechRate": function () {},
  "src": function () {},
  "stop-color": function () {},
  "stop-opacity": function () {},
  "stopColor": function () {},
  "stopOpacity": function () {},
  "stress": function () {},
  "stroke": function () {},
  "stroke-dasharray": function () {},
  "stroke-dashoffset": function () {},
  "stroke-linecap": function () {},
  "stroke-linejoin": function () {},
  "stroke-miterlimit": function () {},
  "stroke-opacity": function () {},
  "stroke-width": function () {},
  "strokeDasharray": function () {},
  "strokeDashoffset": function () {},
  "strokeLinecap": function () {},
  "strokeLinejoin": function () {},
  "strokeMiterlimit": function () {},
  "strokeOpacity": function () {},
  "strokeWidth": function () {},
  "table-layout": function () {},
  "tableLayout": function () {},
  "text-align": function () {},
  "text-anchor": function () {},
  "text-decoration": function () {},
  "text-indent": function () {},
  "text-line-through": function () {},
  "text-line-through-color": function () {},
  "text-line-through-mode": function () {},
  "text-line-through-style": function () {},
  "text-line-through-width": function () {},
  "text-overflow": function () {},
  "text-overline": function () {},
  "text-overline-color": function () {},
  "text-overline-mode": function () {},
  "text-overline-style": function () {},
  "text-overline-width": function () {},
  "text-rendering": function () {},
  "text-shadow": function () {},
  "text-transform": function () {},
  "text-underline": function () {},
  "text-underline-color": function () {},
  "text-underline-mode": function () {},
  "text-underline-style": function () {},
  "text-underline-width": function () {},
  "textAlign": function () {},
  "textAnchor": function () {},
  "textDecoration": function () {},
  "textIndent": function () {},
  "textLineThrough": function () {},
  "textLineThroughColor": function () {},
  "textLineThroughMode": function () {},
  "textLineThroughStyle": function () {},
  "textLineThroughWidth": function () {},
  "textOverflow": function () {},
  "textOverline": function () {},
  "textOverlineColor": function () {},
  "textOverlineMode": function () {},
  "textOverlineStyle": function () {},
  "textOverlineWidth": function () {},
  "textRendering": function () {},
  "textShadow": function () {},
  "textTransform": function () {},
  "textUnderline": function () {},
  "textUnderlineColor": function () {},
  "textUnderlineMode": function () {},
  "textUnderlineStyle": function () {},
  "textUnderlineWidth": function () {},
  "top": function () {},
  "unicode-bidi": function () {},
  "unicode-range": function () {},
  "unicodeBidi": function () {},
  "unicodeRange": function () {},
  "vector-effect": function () {},
  "vectorEffect": function () {},
  "vertical-align": function () {},
  "verticalAlign": function () {},
  "visibility": function () {},
  "voice-family": function () {},
  "voiceFamily": function () {},
  "volume": function () {},
  "webkit-animation": function () {},
  "webkit-animation-delay": function () {},
  "webkit-animation-direction": function () {},
  "webkit-animation-duration": function () {},
  "webkit-animation-fill-mode": function () {},
  "webkit-animation-iteration-count": function () {},
  "webkit-animation-name": function () {},
  "webkit-animation-play-state": function () {},
  "webkit-animation-timing-function": function () {},
  "webkit-appearance": function () {},
  "webkit-aspect-ratio": function () {},
  "webkit-backface-visibility": function () {},
  "webkit-background-clip": function () {},
  "webkit-background-composite": function () {},
  "webkit-background-origin": function () {},
  "webkit-background-size": function () {},
  "webkit-border-after": function () {},
  "webkit-border-after-color": function () {},
  "webkit-border-after-style": function () {},
  "webkit-border-after-width": function () {},
  "webkit-border-before": function () {},
  "webkit-border-before-color": function () {},
  "webkit-border-before-style": function () {},
  "webkit-border-before-width": function () {},
  "webkit-border-end": function () {},
  "webkit-border-end-color": function () {},
  "webkit-border-end-style": function () {},
  "webkit-border-end-width": function () {},
  "webkit-border-fit": function () {},
  "webkit-border-horizontal-spacing": function () {},
  "webkit-border-image": function () {},
  "webkit-border-radius": function () {},
  "webkit-border-start": function () {},
  "webkit-border-start-color": function () {},
  "webkit-border-start-style": function () {},
  "webkit-border-start-width": function () {},
  "webkit-border-vertical-spacing": function () {},
  "webkit-box-align": function () {},
  "webkit-box-direction": function () {},
  "webkit-box-flex": function () {},
  "webkit-box-flex-group": function () {},
  "webkit-box-lines": function () {},
  "webkit-box-ordinal-group": function () {},
  "webkit-box-orient": function () {},
  "webkit-box-pack": function () {},
  "webkit-box-reflect": function () {},
  "webkit-box-shadow": function () {},
  "webkit-color-correction": function () {},
  "webkit-column-axis": function () {},
  "webkit-column-break-after": function () {},
  "webkit-column-break-before": function () {},
  "webkit-column-break-inside": function () {},
  "webkit-column-count": function () {},
  "webkit-column-gap": function () {},
  "webkit-column-rule": function () {},
  "webkit-column-rule-color": function () {},
  "webkit-column-rule-style": function () {},
  "webkit-column-rule-width": function () {},
  "webkit-column-span": function () {},
  "webkit-column-width": function () {},
  "webkit-columns": function () {},
  "webkit-filter": function () {},
  "webkit-flex-align": function () {},
  "webkit-flex-direction": function () {},
  "webkit-flex-flow": function () {},
  "webkit-flex-item-align": function () {},
  "webkit-flex-line-pack": function () {},
  "webkit-flex-order": function () {},
  "webkit-flex-pack": function () {},
  "webkit-flex-wrap": function () {},
  "webkit-flow-from": function () {},
  "webkit-flow-into": function () {},
  "webkit-font-feature-settings": function () {},
  "webkit-font-kerning": function () {},
  "webkit-font-size-delta": function () {},
  "webkit-font-smoothing": function () {},
  "webkit-font-variant-ligatures": function () {},
  "webkit-highlight": function () {},
  "webkit-hyphenate-character": function () {},
  "webkit-hyphenate-limit-after": function () {},
  "webkit-hyphenate-limit-before": function () {},
  "webkit-hyphenate-limit-lines": function () {},
  "webkit-hyphens": function () {},
  "webkit-line-align": function () {},
  "webkit-line-box-contain": function () {},
  "webkit-line-break": function () {},
  "webkit-line-clamp": function () {},
  "webkit-line-grid": function () {},
  "webkit-line-snap": function () {},
  "webkit-locale": function () {},
  "webkit-logical-height": function () {},
  "webkit-logical-width": function () {},
  "webkit-margin-after": function () {},
  "webkit-margin-after-collapse": function () {},
  "webkit-margin-before": function () {},
  "webkit-margin-before-collapse": function () {},
  "webkit-margin-bottom-collapse": function () {},
  "webkit-margin-collapse": function () {},
  "webkit-margin-end": function () {},
  "webkit-margin-start": function () {},
  "webkit-margin-top-collapse": function () {},
  "webkit-marquee": function () {},
  "webkit-marquee-direction": function () {},
  "webkit-marquee-increment": function () {},
  "webkit-marquee-repetition": function () {},
  "webkit-marquee-speed": function () {},
  "webkit-marquee-style": function () {},
  "webkit-mask": function () {},
  "webkit-mask-attachment": function () {},
  "webkit-mask-box-image": function () {},
  "webkit-mask-box-image-outset": function () {},
  "webkit-mask-box-image-repeat": function () {},
  "webkit-mask-box-image-slice": function () {},
  "webkit-mask-box-image-source": function () {},
  "webkit-mask-box-image-width": function () {},
  "webkit-mask-clip": function () {},
  "webkit-mask-composite": function () {},
  "webkit-mask-image": function () {},
  "webkit-mask-origin": function () {},
  "webkit-mask-position": function () {},
  "webkit-mask-position-x": function () {},
  "webkit-mask-position-y": function () {},
  "webkit-mask-repeat": function () {},
  "webkit-mask-repeat-x": function () {},
  "webkit-mask-repeat-y": function () {},
  "webkit-mask-size": function () {},
  "webkit-match-nearest-mail-blockquote-color": function () {},
  "webkit-max-logical-height": function () {},
  "webkit-max-logical-width": function () {},
  "webkit-min-logical-height": function () {},
  "webkit-min-logical-width": function () {},
  "webkit-nbsp-mode": function () {},
  "webkit-overflow-scrolling": function () {},
  "webkit-padding-after": function () {},
  "webkit-padding-before": function () {},
  "webkit-padding-end": function () {},
  "webkit-padding-start": function () {},
  "webkit-perspective": function () {},
  "webkit-perspective-origin": function () {},
  "webkit-perspective-origin-x": function () {},
  "webkit-perspective-origin-y": function () {},
  "webkit-print-color-adjust": function () {},
  "webkit-region-break-after": function () {},
  "webkit-region-break-before": function () {},
  "webkit-region-break-inside": function () {},
  "webkit-region-overflow": function () {},
  "webkit-rtl-ordering": function () {},
  "webkit-svg-shadow": function () {},
  "webkit-tap-highlight-color": function () {},
  "webkit-text-combine": function () {},
  "webkit-text-decorations-in-effect": function () {},
  "webkit-text-emphasis": function () {},
  "webkit-text-emphasis-color": function () {},
  "webkit-text-emphasis-position": function () {},
  "webkit-text-emphasis-style": function () {},
  "webkit-text-fill-color": function () {},
  "webkit-text-orientation": function () {},
  "webkit-text-security": function () {},
  "webkit-text-size-adjust": function () {},
  "webkit-text-stroke": function () {},
  "webkit-text-stroke-color": function () {},
  "webkit-text-stroke-width": function () {},
  "webkit-transform": function () {},
  "webkit-transform-origin": function () {},
  "webkit-transform-origin-x": function () {},
  "webkit-transform-origin-y": function () {},
  "webkit-transform-origin-z": function () {},
  "webkit-transform-style": function () {},
  "webkit-transition": function () {},
  "webkit-transition-delay": function () {},
  "webkit-transition-duration": function () {},
  "webkit-transition-property": function () {},
  "webkit-transition-timing-function": function () {},
  "webkit-user-drag": function () {},
  "webkit-user-modify": function () {},
  "webkit-user-select": function () {},
  "webkit-wrap": function () {},
  "webkit-wrap-flow": function () {},
  "webkit-wrap-margin": function () {},
  "webkit-wrap-padding": function () {},
  "webkit-wrap-shape-inside": function () {},
  "webkit-wrap-shape-outside": function () {},
  "webkit-wrap-through": function () {},
  "webkit-writing-mode": function () {},
  "webkitAnimation": function () {},
  "webkitAnimationDelay": function () {},
  "webkitAnimationDirection": function () {},
  "webkitAnimationDuration": function () {},
  "webkitAnimationFillMode": function () {},
  "webkitAnimationIterationCount": function () {},
  "webkitAnimationName": function () {},
  "webkitAnimationPlayState": function () {},
  "webkitAnimationTimingFunction": function () {},
  "webkitAppearance": function () {},
  "webkitAspectRatio": function () {},
  "webkitBackfaceVisibility": function () {},
  "webkitBackgroundClip": function () {},
  "webkitBackgroundComposite": function () {},
  "webkitBackgroundOrigin": function () {},
  "webkitBackgroundSize": function () {},
  "webkitBorderAfter": function () {},
  "webkitBorderAfterColor": function () {},
  "webkitBorderAfterStyle": function () {},
  "webkitBorderAfterWidth": function () {},
  "webkitBorderBefore": function () {},
  "webkitBorderBeforeColor": function () {},
  "webkitBorderBeforeStyle": function () {},
  "webkitBorderBeforeWidth": function () {},
  "webkitBorderEnd": function () {},
  "webkitBorderEndColor": function () {},
  "webkitBorderEndStyle": function () {},
  "webkitBorderEndWidth": function () {},
  "webkitBorderFit": function () {},
  "webkitBorderHorizontalSpacing": function () {},
  "webkitBorderImage": function () {},
  "webkitBorderRadius": function () {},
  "webkitBorderStart": function () {},
  "webkitBorderStartColor": function () {},
  "webkitBorderStartStyle": function () {},
  "webkitBorderStartWidth": function () {},
  "webkitBorderVerticalSpacing": function () {},
  "webkitBoxAlign": function () {},
  "webkitBoxDirection": function () {},
  "webkitBoxFlex": function () {},
  "webkitBoxFlexGroup": function () {},
  "webkitBoxLines": function () {},
  "webkitBoxOrdinalGroup": function () {},
  "webkitBoxOrient": function () {},
  "webkitBoxPack": function () {},
  "webkitBoxReflect": function () {},
  "webkitBoxShadow": function () {},
  "webkitColorCorrection": function () {},
  "webkitColumnAxis": function () {},
  "webkitColumnBreakAfter": function () {},
  "webkitColumnBreakBefore": function () {},
  "webkitColumnBreakInside": function () {},
  "webkitColumnCount": function () {},
  "webkitColumnGap": function () {},
  "webkitColumnRule": function () {},
  "webkitColumnRuleColor": function () {},
  "webkitColumnRuleStyle": function () {},
  "webkitColumnRuleWidth": function () {},
  "webkitColumnSpan": function () {},
  "webkitColumnWidth": function () {},
  "webkitColumns": function () {},
  "webkitFilter": function () {},
  "webkitFlexAlign": function () {},
  "webkitFlexDirection": function () {},
  "webkitFlexFlow": function () {},
  "webkitFlexItemAlign": function () {},
  "webkitFlexLinePack": function () {},
  "webkitFlexOrder": function () {},
  "webkitFlexPack": function () {},
  "webkitFlexWrap": function () {},
  "webkitFlowFrom": function () {},
  "webkitFlowInto": function () {},
  "webkitFontFeatureSettings": function () {},
  "webkitFontKerning": function () {},
  "webkitFontSizeDelta": function () {},
  "webkitFontSmoothing": function () {},
  "webkitFontVariantLigatures": function () {},
  "webkitHighlight": function () {},
  "webkitHyphenateCharacter": function () {},
  "webkitHyphenateLimitAfter": function () {},
  "webkitHyphenateLimitBefore": function () {},
  "webkitHyphenateLimitLines": function () {},
  "webkitHyphens": function () {},
  "webkitLineAlign": function () {},
  "webkitLineBoxContain": function () {},
  "webkitLineBreak": function () {},
  "webkitLineClamp": function () {},
  "webkitLineGrid": function () {},
  "webkitLineSnap": function () {},
  "webkitLocale": function () {},
  "webkitLogicalHeight": function () {},
  "webkitLogicalWidth": function () {},
  "webkitMarginAfter": function () {},
  "webkitMarginAfterCollapse": function () {},
  "webkitMarginBefore": function () {},
  "webkitMarginBeforeCollapse": function () {},
  "webkitMarginBottomCollapse": function () {},
  "webkitMarginCollapse": function () {},
  "webkitMarginEnd": function () {},
  "webkitMarginStart": function () {},
  "webkitMarginTopCollapse": function () {},
  "webkitMarquee": function () {},
  "webkitMarqueeDirection": function () {},
  "webkitMarqueeIncrement": function () {},
  "webkitMarqueeRepetition": function () {},
  "webkitMarqueeSpeed": function () {},
  "webkitMarqueeStyle": function () {},
  "webkitMask": function () {},
  "webkitMaskAttachment": function () {},
  "webkitMaskBoxImage": function () {},
  "webkitMaskBoxImageOutset": function () {},
  "webkitMaskBoxImageRepeat": function () {},
  "webkitMaskBoxImageSlice": function () {},
  "webkitMaskBoxImageSource": function () {},
  "webkitMaskBoxImageWidth": function () {},
  "webkitMaskClip": function () {},
  "webkitMaskComposite": function () {},
  "webkitMaskImage": function () {},
  "webkitMaskOrigin": function () {},
  "webkitMaskPosition": function () {},
  "webkitMaskPositionX": function () {},
  "webkitMaskPositionY": function () {},
  "webkitMaskRepeat": function () {},
  "webkitMaskRepeatX": function () {},
  "webkitMaskRepeatY": function () {},
  "webkitMaskSize": function () {},
  "webkitMatchNearestMailBlockquoteColor": function () {},
  "webkitMaxLogicalHeight": function () {},
  "webkitMaxLogicalWidth": function () {},
  "webkitMinLogicalHeight": function () {},
  "webkitMinLogicalWidth": function () {},
  "webkitNbspMode": function () {},
  "webkitOverflowScrolling": function () {},
  "webkitPaddingAfter": function () {},
  "webkitPaddingBefore": function () {},
  "webkitPaddingEnd": function () {},
  "webkitPaddingStart": function () {},
  "webkitPerspective": function () {},
  "webkitPerspectiveOrigin": function () {},
  "webkitPerspectiveOriginX": function () {},
  "webkitPerspectiveOriginY": function () {},
  "webkitPrintColorAdjust": function () {},
  "webkitRegionBreakAfter": function () {},
  "webkitRegionBreakBefore": function () {},
  "webkitRegionBreakInside": function () {},
  "webkitRegionOverflow": function () {},
  "webkitRtlOrdering": function () {},
  "webkitSvgShadow": function () {},
  "webkitTapHighlightColor": function () {},
  "webkitTextCombine": function () {},
  "webkitTextDecorationsInEffect": function () {},
  "webkitTextEmphasis": function () {},
  "webkitTextEmphasisColor": function () {},
  "webkitTextEmphasisPosition": function () {},
  "webkitTextEmphasisStyle": function () {},
  "webkitTextFillColor": function () {},
  "webkitTextOrientation": function () {},
  "webkitTextSecurity": function () {},
  "webkitTextSizeAdjust": function () {},
  "webkitTextStroke": function () {},
  "webkitTextStrokeColor": function () {},
  "webkitTextStrokeWidth": function () {},
  "webkitTransform": function () {},
  "webkitTransformOrigin": function () {},
  "webkitTransformOriginX": function () {},
  "webkitTransformOriginY": function () {},
  "webkitTransformOriginZ": function () {},
  "webkitTransformStyle": function () {},
  "webkitTransition": function () {},
  "webkitTransitionDelay": function () {},
  "webkitTransitionDuration": function () {},
  "webkitTransitionProperty": function () {},
  "webkitTransitionTimingFunction": function () {},
  "webkitUserDrag": function () {},
  "webkitUserModify": function () {},
  "webkitUserSelect": function () {},
  "webkitWrap": function () {},
  "webkitWrapFlow": function () {},
  "webkitWrapMargin": function () {},
  "webkitWrapPadding": function () {},
  "webkitWrapShapeInside": function () {},
  "webkitWrapShapeOutside": function () {},
  "webkitWrapThrough": function () {},
  "webkitWritingMode": function () {},
  "white-space": function () {},
  "whiteSpace": function () {},
  "widows": function () {},
  "width": function () {},
  "word-break": function () {},
  "word-spacing": function () {},
  "word-wrap": function () {},
  "wordBreak": function () {},
  "wordSpacing": function () {},
  "wordWrap": function () {},
  "writing-mode": function () {},
  "writingMode": function () {},
  "z-index": function () {},
  "zIndex": function () {},
  "zoom": function () {}
};
Blockly.utils.global._core.CSSStyleRule.prototype = {
  "constructor": function () {},
  "parentRule": function () {},
  "parentStyleSheet": function () {},
  "type": function () {}
};
Blockly.utils.global._core.CSSStyleSheet.prototype = {
  "constructor": function () {},
  "deleteRule": function () {},
  "insertRule": function () {},
  "parentStyleSheet": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.CharacterData.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "appendData": function () {},
  "baseURI": function () {},
  "childNodes": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "data": function () {},
  "deleteData": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "hasChildNodes": function () {},
  "insertBefore": function () {},
  "insertData": function () {},
  "isEqualNode": function () {},
  "lastChild": function () {},
  "length": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "remove": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "replaceData": function () {},
  "substringData": function () {},
  "textContent": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.Comment.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "appendData": function () {},
  "baseURI": function () {},
  "childNodes": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "data": function () {},
  "deleteData": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "hasChildNodes": function () {},
  "insertBefore": function () {},
  "insertData": function () {},
  "isEqualNode": function () {},
  "lastChild": function () {},
  "length": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "remove": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "replaceData": function () {},
  "substringData": function () {},
  "textContent": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.CustomEvent.prototype = {
  "AT_TARGET": function () {},
  "BUBBLING_PHASE": function () {},
  "CAPTURING_PHASE": function () {},
  "NONE": function () {},
  "bubbles": function () {},
  "cancelBubble": function () {},
  "cancelable": function () {},
  "constructor": function () {},
  "currentTarget": function () {},
  "defaultPrevented": function () {},
  "detail": function () {},
  "eventPhase": function () {},
  "initCustomEvent": function () {},
  "initEvent": function () {},
  "preventDefault": function () {},
  "stopImmediatePropagation": function () {},
  "stopPropagation": function () {},
  "target": function () {},
  "timeStamp": function () {},
  "toString": function () {},
  "type": function () {}
};
Blockly.utils.global._core.DOMException.prototype = {
  "ABORT_ERR": function () {},
  "DATA_CLONE_ERR": function () {},
  "HIERARCHY_REQUEST_ERR": function () {},
  "INDEX_SIZE_ERR": function () {},
  "INUSE_ATTRIBUTE_ERR": function () {},
  "INVALID_ACCESS_ERR": function () {},
  "INVALID_CHARACTER_ERR": function () {},
  "INVALID_MODIFICATION_ERR": function () {},
  "INVALID_NODE_TYPE_ERR": function () {},
  "INVALID_STATE_ERR": function () {},
  "NAMESPACE_ERR": function () {},
  "NETWORK_ERR": function () {},
  "NOT_FOUND_ERR": function () {},
  "NOT_SUPPORTED_ERR": function () {},
  "NO_MODIFICATION_ALLOWED_ERR": function () {},
  "QUOTA_EXCEEDED_ERR": function () {},
  "SECURITY_ERR": function () {},
  "SYNTAX_ERR": function () {},
  "TIMEOUT_ERR": function () {},
  "URL_MISMATCH_ERR": function () {},
  "WRONG_DOCUMENT_ERR": function () {}
};
Blockly.utils.global._core.DOMImplementation.prototype = {
  "createDocument": function () {},
  "createDocumentType": function () {},
  "createHTMLDocument": function () {},
  "hasFeature": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.DOMParser.prototype = {
  "parseFromString": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.Document.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "URL": function () {},
  "activeElement": function () {},
  "addEventListener": function () {},
  "adoptNode": function () {},
  "anchors": function () {},
  "appendChild": function () {},
  "applets": function () {},
  "baseURI": function () {},
  "body": function () {},
  "characterSet": function () {},
  "charset": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "cloneNode": function () {},
  "close": function () {},
  "compareDocumentPosition": function () {},
  "compatMode": function () {},
  "constructor": function () {},
  "contains": function () {},
  "contentType": function () {},
  "cookie": function () {},
  "createAttribute": function () {},
  "createAttributeNS": function () {},
  "createCDATASection": function () {},
  "createComment": function () {},
  "createDocumentFragment": function () {},
  "createElement": function () {},
  "createElementNS": function () {},
  "createEvent": function () {},
  "createExpression": function () {},
  "createNSResolver": function () {},
  "createNodeIterator": function () {},
  "createProcessingInstruction": function () {},
  "createTextNode": function () {},
  "createTreeWalker": function () {},
  "currentScript": function () {},
  "defaultView": function () {},
  "dispatchEvent": function () {},
  "doctype": function () {},
  "documentElement": function () {},
  "documentURI": function () {},
  "embeds": function () {},
  "evaluate": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "forms": function () {},
  "getElementById": function () {},
  "getElementsByClassName": function () {},
  "getElementsByName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasChildNodes": function () {},
  "hasFocus": function () {},
  "head": function () {},
  "hidden": function () {},
  "images": function () {},
  "implementation": function () {},
  "importNode": function () {},
  "inputEncoding": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "lastModified": function () {},
  "links": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreadystatechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvisibilitychange": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "open": function () {},
  "origin": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "plugins": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "readyState": function () {},
  "referrer": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scripts": function () {},
  "styleSheets": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "visibilityState": function () {},
  "write": function () {},
  "writeln": function () {}
};
Blockly.utils.global._core.DocumentFragment.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "baseURI": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "hasChildNodes": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "textContent": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.DocumentType.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "baseURI": function () {},
  "childNodes": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "hasChildNodes": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lastChild": function () {},
  "name": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "previousSibling": function () {},
  "publicId": function () {},
  "remove": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "systemId": function () {},
  "textContent": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.Element.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.ErrorEvent.prototype = {
  "AT_TARGET": function () {},
  "BUBBLING_PHASE": function () {},
  "CAPTURING_PHASE": function () {},
  "NONE": function () {},
  "bubbles": function () {},
  "cancelBubble": function () {},
  "cancelable": function () {},
  "colno": function () {},
  "constructor": function () {},
  "currentTarget": function () {},
  "defaultPrevented": function () {},
  "error": function () {},
  "eventPhase": function () {},
  "filename": function () {},
  "initEvent": function () {},
  "lineno": function () {},
  "message": function () {},
  "preventDefault": function () {},
  "stopImmediatePropagation": function () {},
  "stopPropagation": function () {},
  "target": function () {},
  "timeStamp": function () {},
  "toString": function () {},
  "type": function () {}
};
Blockly.utils.global._core.Event.prototype = {
  "AT_TARGET": function () {},
  "BUBBLING_PHASE": function () {},
  "CAPTURING_PHASE": function () {},
  "NONE": function () {},
  "bubbles": function () {},
  "cancelBubble": function () {},
  "cancelable": function () {},
  "currentTarget": function () {},
  "defaultPrevented": function () {},
  "eventPhase": function () {},
  "initEvent": function () {},
  "preventDefault": function () {},
  "stopImmediatePropagation": function () {},
  "stopPropagation": function () {},
  "target": function () {},
  "timeStamp": function () {},
  "toString": function () {},
  "type": function () {}
};
Blockly.utils.global._core.EventTarget.prototype = {
  "addEventListener": function () {},
  "dispatchEvent": function () {},
  "removeEventListener": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.File.prototype = {
  "close": function () {},
  "constructor": function () {},
  "isClosed": function () {},
  "lastModified": function () {},
  "name": function () {},
  "size": function () {},
  "slice": function () {},
  "toString": function () {},
  "type": function () {}
};
Blockly.utils.global._core.FileList.prototype = {
  "item": function () {},
  "length": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.FocusEvent.prototype = {
  "AT_TARGET": function () {},
  "BUBBLING_PHASE": function () {},
  "CAPTURING_PHASE": function () {},
  "NONE": function () {},
  "bubbles": function () {},
  "cancelBubble": function () {},
  "cancelable": function () {},
  "constructor": function () {},
  "currentTarget": function () {},
  "defaultPrevented": function () {},
  "detail": function () {},
  "eventPhase": function () {},
  "initEvent": function () {},
  "initUIEvent": function () {},
  "preventDefault": function () {},
  "relatedTarget": function () {},
  "stopImmediatePropagation": function () {},
  "stopPropagation": function () {},
  "target": function () {},
  "timeStamp": function () {},
  "toString": function () {},
  "type": function () {},
  "view": function () {}
};
Blockly.utils.global._core.FormData.prototype = {
  "append": function () {},
  "delete": function () {},
  "get": function () {},
  "getAll": function () {},
  "has": function () {},
  "set": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.HTMLAnchorElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "charset": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "coords": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "download": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hash": function () {},
  "hidden": function () {},
  "host": function () {},
  "hostname": function () {},
  "href": function () {},
  "hreflang": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "origin": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "password": function () {},
  "pathname": function () {},
  "port": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "protocol": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "rel": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "rev": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "search": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "shape": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "target": function () {},
  "text": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "type": function () {},
  "username": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLAppletElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "alt": function () {},
  "appendChild": function () {},
  "archive": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "code": function () {},
  "codeBase": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "height": function () {},
  "hidden": function () {},
  "hspace": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "object": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "vspace": function () {},
  "webkitMatchesSelector": function () {},
  "width": function () {}
};
Blockly.utils.global._core.HTMLAreaElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "alt": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "coords": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hash": function () {},
  "hidden": function () {},
  "host": function () {},
  "hostname": function () {},
  "href": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "noHref": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "origin": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "password": function () {},
  "pathname": function () {},
  "port": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "protocol": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "rel": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "search": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "shape": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "target": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "username": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLAudioElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "HAVE_CURRENT_DATA": function () {},
  "HAVE_ENOUGH_DATA": function () {},
  "HAVE_FUTURE_DATA": function () {},
  "HAVE_METADATA": function () {},
  "HAVE_NOTHING": function () {},
  "NETWORK_EMPTY": function () {},
  "NETWORK_IDLE": function () {},
  "NETWORK_LOADING": function () {},
  "NETWORK_NO_SOURCE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "addTextTrack": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "audioTracks": function () {},
  "autoplay": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "buffered": function () {},
  "canPlayType": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "controls": function () {},
  "crossOrigin": function () {},
  "currentSrc": function () {},
  "currentTime": function () {},
  "defaultMuted": function () {},
  "defaultPlaybackRate": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "duration": function () {},
  "ended": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "load": function () {},
  "localName": function () {},
  "loop": function () {},
  "matches": function () {},
  "muted": function () {},
  "namespaceURI": function () {},
  "networkState": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "pause": function () {},
  "paused": function () {},
  "play": function () {},
  "playbackRate": function () {},
  "played": function () {},
  "prefix": function () {},
  "preload": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "readyState": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "seekable": function () {},
  "seeking": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "src": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "textTracks": function () {},
  "title": function () {},
  "toString": function () {},
  "videoTracks": function () {},
  "volume": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLBRElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "clear": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLBaseElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "href": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "target": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLBodyElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "aLink": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "background": function () {},
  "baseURI": function () {},
  "bgColor": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "link": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onafterprint": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onbeforeprint": function () {},
  "onbeforeunload": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "onhashchange": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onlanguagechange": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmessage": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onoffline": function () {},
  "ononline": function () {},
  "onpagehide": function () {},
  "onpageshow": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onpopstate": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onrejectionhandled": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onstorage": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onunhandledrejection": function () {},
  "onunload": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "text": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "vLink": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLButtonElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "autofocus": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "disabled": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "form": function () {},
  "formNoValidate": function () {},
  "formTarget": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "type": function () {},
  "value": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLCanvasElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getContext": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "height": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "probablySupportsContext": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "setContext": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toBlob": function () {},
  "toDataURL": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {},
  "width": function () {}
};
Blockly.utils.global._core.HTMLDListElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compact": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLDataElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "value": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLDataListElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLDialogElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "open": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLDirectoryElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compact": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLDivElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLDocument.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "URL": function () {},
  "activeElement": function () {},
  "addEventListener": function () {},
  "adoptNode": function () {},
  "anchors": function () {},
  "appendChild": function () {},
  "applets": function () {},
  "baseURI": function () {},
  "body": function () {},
  "characterSet": function () {},
  "charset": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "cloneNode": function () {},
  "close": function () {},
  "compareDocumentPosition": function () {},
  "compatMode": function () {},
  "constructor": function () {},
  "contains": function () {},
  "contentType": function () {},
  "cookie": function () {},
  "createAttribute": function () {},
  "createAttributeNS": function () {},
  "createCDATASection": function () {},
  "createComment": function () {},
  "createDocumentFragment": function () {},
  "createElement": function () {},
  "createElementNS": function () {},
  "createEvent": function () {},
  "createExpression": function () {},
  "createNSResolver": function () {},
  "createNodeIterator": function () {},
  "createProcessingInstruction": function () {},
  "createTextNode": function () {},
  "createTreeWalker": function () {},
  "currentScript": function () {},
  "defaultView": function () {},
  "dispatchEvent": function () {},
  "doctype": function () {},
  "documentElement": function () {},
  "documentURI": function () {},
  "embeds": function () {},
  "evaluate": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "forms": function () {},
  "getElementById": function () {},
  "getElementsByClassName": function () {},
  "getElementsByName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasChildNodes": function () {},
  "hasFocus": function () {},
  "head": function () {},
  "hidden": function () {},
  "images": function () {},
  "implementation": function () {},
  "importNode": function () {},
  "inputEncoding": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "lastModified": function () {},
  "links": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreadystatechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvisibilitychange": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "open": function () {},
  "origin": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "plugins": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "readyState": function () {},
  "referrer": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scripts": function () {},
  "styleSheets": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "visibilityState": function () {},
  "write": function () {},
  "writeln": function () {}
};
Blockly.utils.global._core.HTMLElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLEmbedElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "height": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "src": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "type": function () {},
  "webkitMatchesSelector": function () {},
  "width": function () {}
};
Blockly.utils.global._core.HTMLFieldSetElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "disabled": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "form": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLFontElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "color": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "face": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "size": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLFormElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "acceptCharset": function () {},
  "accessKey": function () {},
  "action": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "elements": function () {},
  "enctype": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "length": function () {},
  "localName": function () {},
  "matches": function () {},
  "method": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "noValidate": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "reset": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "submit": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "target": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLFrameElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "contentDocument": function () {},
  "contentWindow": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "frameBorder": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "longDesc": function () {},
  "marginHeight": function () {},
  "marginWidth": function () {},
  "matches": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "noResize": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "scrolling": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "src": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLFrameSetElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "cols": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onafterprint": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onbeforeprint": function () {},
  "onbeforeunload": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "onhashchange": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onlanguagechange": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmessage": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onoffline": function () {},
  "ononline": function () {},
  "onpagehide": function () {},
  "onpageshow": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onpopstate": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onrejectionhandled": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onstorage": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onunhandledrejection": function () {},
  "onunload": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "rows": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLHRElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "color": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "noShade": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "size": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {},
  "width": function () {}
};
Blockly.utils.global._core.HTMLHeadElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLHeadingElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLHtmlElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "version": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLIFrameElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "allowFullscreen": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "contentDocument": function () {},
  "contentWindow": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "frameBorder": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "getSVGDocument": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "height": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "longDesc": function () {},
  "marginHeight": function () {},
  "marginWidth": function () {},
  "matches": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "scrolling": function () {},
  "seamless": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "src": function () {},
  "srcdoc": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {},
  "width": function () {}
};
Blockly.utils.global._core.HTMLImageElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "alt": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "border": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "complete": function () {},
  "constructor": function () {},
  "contains": function () {},
  "crossOrigin": function () {},
  "currentSrc": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "height": function () {},
  "hidden": function () {},
  "hspace": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "isMap": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "longDesc": function () {},
  "lowsrc": function () {},
  "matches": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "naturalHeight": function () {},
  "naturalWidth": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "sizes": function () {},
  "src": function () {},
  "srcset": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "useMap": function () {},
  "vspace": function () {},
  "webkitMatchesSelector": function () {},
  "width": function () {}
};
Blockly.utils.global._core.HTMLInputElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accept": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "alt": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "autocomplete": function () {},
  "autofocus": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "checked": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "defaultChecked": function () {},
  "defaultValue": function () {},
  "dir": function () {},
  "dirName": function () {},
  "disabled": function () {},
  "dispatchEvent": function () {},
  "files": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "form": function () {},
  "formNoValidate": function () {},
  "formTarget": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "inputMode": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "max": function () {},
  "maxLength": function () {},
  "min": function () {},
  "minLength": function () {},
  "multiple": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "pattern": function () {},
  "placeholder": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "readOnly": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "required": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "select": function () {},
  "selectionDirection": function () {},
  "selectionEnd": function () {},
  "selectionStart": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "setRangeText": function () {},
  "setSelectionRange": function () {},
  "size": function () {},
  "src": function () {},
  "step": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "type": function () {},
  "useMap": function () {},
  "value": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLLIElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "type": function () {},
  "value": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLLabelElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "form": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "htmlFor": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLLegendElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "form": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLLinkElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "charset": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "crossOrigin": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "href": function () {},
  "hreflang": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "media": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "rel": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "rev": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "sheet": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "target": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "type": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLMapElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "areas": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLMediaElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "HAVE_CURRENT_DATA": function () {},
  "HAVE_ENOUGH_DATA": function () {},
  "HAVE_FUTURE_DATA": function () {},
  "HAVE_METADATA": function () {},
  "HAVE_NOTHING": function () {},
  "NETWORK_EMPTY": function () {},
  "NETWORK_IDLE": function () {},
  "NETWORK_LOADING": function () {},
  "NETWORK_NO_SOURCE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "addTextTrack": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "audioTracks": function () {},
  "autoplay": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "buffered": function () {},
  "canPlayType": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "controls": function () {},
  "crossOrigin": function () {},
  "currentSrc": function () {},
  "currentTime": function () {},
  "defaultMuted": function () {},
  "defaultPlaybackRate": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "duration": function () {},
  "ended": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "load": function () {},
  "localName": function () {},
  "loop": function () {},
  "matches": function () {},
  "muted": function () {},
  "namespaceURI": function () {},
  "networkState": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "pause": function () {},
  "paused": function () {},
  "play": function () {},
  "playbackRate": function () {},
  "played": function () {},
  "prefix": function () {},
  "preload": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "readyState": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "seekable": function () {},
  "seeking": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "src": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "textTracks": function () {},
  "title": function () {},
  "toString": function () {},
  "videoTracks": function () {},
  "volume": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLMenuElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compact": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "label": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "type": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLMetaElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "content": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "httpEquiv": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scheme": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLMeterElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLModElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "cite": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dateTime": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLOListElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compact": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "reversed": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "start": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "type": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLObjectElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "appendChild": function () {},
  "archive": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "border": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "code": function () {},
  "codeBase": function () {},
  "codeType": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "contentDocument": function () {},
  "data": function () {},
  "declare": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "form": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "height": function () {},
  "hidden": function () {},
  "hspace": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "standby": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "type": function () {},
  "useMap": function () {},
  "vspace": function () {},
  "webkitMatchesSelector": function () {},
  "width": function () {}
};
Blockly.utils.global._core.HTMLOptGroupElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "disabled": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "label": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLOptionElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "defaultSelected": function () {},
  "dir": function () {},
  "disabled": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "form": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "index": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "label": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "selected": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "text": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "value": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLOutputElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLParagraphElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLParamElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "type": function () {},
  "value": function () {},
  "valueType": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLPreElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {},
  "width": function () {}
};
Blockly.utils.global._core.HTMLProgressElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLQuoteElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "cite": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLScriptElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "charset": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "crossOrigin": function () {},
  "defer": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "event": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "htmlFor": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "nonce": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "src": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "text": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "type": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLSelectElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "add": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "autofocus": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "disabled": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "form": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "length": function () {},
  "localName": function () {},
  "matches": function () {},
  "multiple": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "options": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "required": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "selectedIndex": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "size": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "type": function () {},
  "value": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLSourceElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "media": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "sizes": function () {},
  "src": function () {},
  "srcset": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "type": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLSpanElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLStyleElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "media": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "nonce": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "sheet": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "type": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLTableCaptionElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLTableCellElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "axis": function () {},
  "baseURI": function () {},
  "bgColor": function () {},
  "blur": function () {},
  "cellIndex": function () {},
  "ch": function () {},
  "chOff": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "colSpan": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "headers": function () {},
  "height": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "noWrap": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "rowSpan": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "vAlign": function () {},
  "webkitMatchesSelector": function () {},
  "width": function () {}
};
Blockly.utils.global._core.HTMLTableColElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "ch": function () {},
  "chOff": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "span": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "vAlign": function () {},
  "webkitMatchesSelector": function () {},
  "width": function () {}
};
Blockly.utils.global._core.HTMLTableDataCellElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "abbr": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "axis": function () {},
  "baseURI": function () {},
  "bgColor": function () {},
  "blur": function () {},
  "cellIndex": function () {},
  "ch": function () {},
  "chOff": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "colSpan": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "headers": function () {},
  "height": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "noWrap": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "rowSpan": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "vAlign": function () {},
  "webkitMatchesSelector": function () {},
  "width": function () {}
};
Blockly.utils.global._core.HTMLTableElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "bgColor": function () {},
  "blur": function () {},
  "border": function () {},
  "caption": function () {},
  "cellPadding": function () {},
  "cellSpacing": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "createCaption": function () {},
  "createTFoot": function () {},
  "createTHead": function () {},
  "deleteCaption": function () {},
  "deleteRow": function () {},
  "deleteTFoot": function () {},
  "deleteTHead": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "frame": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "insertRow": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "rows": function () {},
  "rules": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "summary": function () {},
  "tBodies": function () {},
  "tFoot": function () {},
  "tHead": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {},
  "width": function () {}
};
Blockly.utils.global._core.HTMLTableHeaderCellElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "abbr": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "axis": function () {},
  "baseURI": function () {},
  "bgColor": function () {},
  "blur": function () {},
  "cellIndex": function () {},
  "ch": function () {},
  "chOff": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "colSpan": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "headers": function () {},
  "height": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "noWrap": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "rowSpan": function () {},
  "scope": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "sorted": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "vAlign": function () {},
  "webkitMatchesSelector": function () {},
  "width": function () {}
};
Blockly.utils.global._core.HTMLTableRowElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "bgColor": function () {},
  "blur": function () {},
  "cells": function () {},
  "ch": function () {},
  "chOff": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "deleteCell": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "insertCell": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "rowIndex": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "sectionRowIndex": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "vAlign": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLTableSectionElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "align": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "ch": function () {},
  "chOff": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "deleteRow": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "insertRow": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "rows": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "vAlign": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLTemplateElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "content": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLTextAreaElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "autocomplete": function () {},
  "autofocus": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "cols": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "defaultValue": function () {},
  "dir": function () {},
  "dirName": function () {},
  "disabled": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "form": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "inputMode": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "maxLength": function () {},
  "minLength": function () {},
  "name": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "placeholder": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "readOnly": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "required": function () {},
  "rows": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "select": function () {},
  "selectionDirection": function () {},
  "selectionEnd": function () {},
  "selectionStart": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "setRangeText": function () {},
  "setSelectionRange": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "textLength": function () {},
  "title": function () {},
  "toString": function () {},
  "type": function () {},
  "value": function () {},
  "webkitMatchesSelector": function () {},
  "wrap": function () {}
};
Blockly.utils.global._core.HTMLTimeElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dateTime": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLTitleElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "text": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLTrackElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "ERROR": function () {},
  "LOADED": function () {},
  "LOADING": function () {},
  "NONE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "default": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "kind": function () {},
  "label": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "readyState": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "src": function () {},
  "srclang": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLUListElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compact": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "type": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLUnknownElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "localName": function () {},
  "matches": function () {},
  "namespaceURI": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "prefix": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "webkitMatchesSelector": function () {}
};
Blockly.utils.global._core.HTMLVideoElement.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "HAVE_CURRENT_DATA": function () {},
  "HAVE_ENOUGH_DATA": function () {},
  "HAVE_FUTURE_DATA": function () {},
  "HAVE_METADATA": function () {},
  "HAVE_NOTHING": function () {},
  "NETWORK_EMPTY": function () {},
  "NETWORK_IDLE": function () {},
  "NETWORK_LOADING": function () {},
  "NETWORK_NO_SOURCE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "accessKey": function () {},
  "addEventListener": function () {},
  "addTextTrack": function () {},
  "appendChild": function () {},
  "attributes": function () {},
  "audioTracks": function () {},
  "autoplay": function () {},
  "baseURI": function () {},
  "blur": function () {},
  "buffered": function () {},
  "canPlayType": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "classList": function () {},
  "className": function () {},
  "click": function () {},
  "clientHeight": function () {},
  "clientLeft": function () {},
  "clientTop": function () {},
  "clientWidth": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "controls": function () {},
  "crossOrigin": function () {},
  "currentSrc": function () {},
  "currentTime": function () {},
  "defaultMuted": function () {},
  "defaultPlaybackRate": function () {},
  "dir": function () {},
  "dispatchEvent": function () {},
  "duration": function () {},
  "ended": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "focus": function () {},
  "getAttribute": function () {},
  "getAttributeNS": function () {},
  "getAttributeNames": function () {},
  "getAttributeNode": function () {},
  "getAttributeNodeNS": function () {},
  "getBoundingClientRect": function () {},
  "getClientRects": function () {},
  "getElementsByClassName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasAttribute": function () {},
  "hasAttributeNS": function () {},
  "hasAttributes": function () {},
  "hasChildNodes": function () {},
  "height": function () {},
  "hidden": function () {},
  "id": function () {},
  "innerHTML": function () {},
  "insertAdjacentHTML": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lang": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "load": function () {},
  "localName": function () {},
  "loop": function () {},
  "matches": function () {},
  "muted": function () {},
  "namespaceURI": function () {},
  "networkState": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "offsetHeight": function () {},
  "offsetLeft": function () {},
  "offsetParent": function () {},
  "offsetTop": function () {},
  "offsetWidth": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "outerHTML": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "pause": function () {},
  "paused": function () {},
  "play": function () {},
  "playbackRate": function () {},
  "played": function () {},
  "poster": function () {},
  "prefix": function () {},
  "preload": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "readyState": function () {},
  "remove": function () {},
  "removeAttribute": function () {},
  "removeAttributeNS": function () {},
  "removeAttributeNode": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scrollHeight": function () {},
  "scrollLeft": function () {},
  "scrollTop": function () {},
  "scrollWidth": function () {},
  "seekable": function () {},
  "seeking": function () {},
  "setAttribute": function () {},
  "setAttributeNS": function () {},
  "setAttributeNode": function () {},
  "setAttributeNodeNS": function () {},
  "src": function () {},
  "style": function () {},
  "tabIndex": function () {},
  "tagName": function () {},
  "textContent": function () {},
  "textTracks": function () {},
  "title": function () {},
  "toString": function () {},
  "videoHeight": function () {},
  "videoTracks": function () {},
  "videoWidth": function () {},
  "volume": function () {},
  "webkitMatchesSelector": function () {},
  "width": function () {}
};
Blockly.utils.global._core.HashChangeEvent.prototype = {
  "AT_TARGET": function () {},
  "BUBBLING_PHASE": function () {},
  "CAPTURING_PHASE": function () {},
  "NONE": function () {},
  "bubbles": function () {},
  "cancelBubble": function () {},
  "cancelable": function () {},
  "constructor": function () {},
  "currentTarget": function () {},
  "defaultPrevented": function () {},
  "eventPhase": function () {},
  "initEvent": function () {},
  "newURL": function () {},
  "oldURL": function () {},
  "preventDefault": function () {},
  "stopImmediatePropagation": function () {},
  "stopPropagation": function () {},
  "target": function () {},
  "timeStamp": function () {},
  "toString": function () {},
  "type": function () {}
};
Blockly.utils.global._core.History.prototype = {
  "back": function () {},
  "forward": function () {},
  "go": function () {},
  "length": function () {},
  "pushState": function () {},
  "replaceState": function () {},
  "state": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.KeyboardEvent.prototype = {
  "AT_TARGET": function () {},
  "BUBBLING_PHASE": function () {},
  "CAPTURING_PHASE": function () {},
  "DOM_KEY_LOCATION_LEFT": function () {},
  "DOM_KEY_LOCATION_NUMPAD": function () {},
  "DOM_KEY_LOCATION_RIGHT": function () {},
  "DOM_KEY_LOCATION_STANDARD": function () {},
  "NONE": function () {},
  "altKey": function () {},
  "bubbles": function () {},
  "cancelBubble": function () {},
  "cancelable": function () {},
  "charCode": function () {},
  "code": function () {},
  "constructor": function () {},
  "ctrlKey": function () {},
  "currentTarget": function () {},
  "defaultPrevented": function () {},
  "detail": function () {},
  "eventPhase": function () {},
  "getModifierState": function () {},
  "initEvent": function () {},
  "initKeyboardEvent": function () {},
  "initUIEvent": function () {},
  "isComposing": function () {},
  "key": function () {},
  "keyCode": function () {},
  "location": function () {},
  "metaKey": function () {},
  "preventDefault": function () {},
  "repeat": function () {},
  "shiftKey": function () {},
  "stopImmediatePropagation": function () {},
  "stopPropagation": function () {},
  "target": function () {},
  "timeStamp": function () {},
  "toString": function () {},
  "type": function () {},
  "view": function () {},
  "which": function () {}
};
Blockly.utils.global._core.Location.prototype = {
  "assign": function () {},
  "hash": function () {},
  "host": function () {},
  "hostname": function () {},
  "href": function () {},
  "origin": function () {},
  "pathname": function () {},
  "port": function () {},
  "protocol": function () {},
  "reload": function () {},
  "replace": function () {},
  "search": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.MediaList.prototype = {
  "appendMedium": function () {},
  "constructor": function () {},
  "deleteMedium": function () {},
  "mediaText": function () {}
};
Blockly.utils.global._core.MessageEvent.prototype = {
  "AT_TARGET": function () {},
  "BUBBLING_PHASE": function () {},
  "CAPTURING_PHASE": function () {},
  "NONE": function () {},
  "bubbles": function () {},
  "cancelBubble": function () {},
  "cancelable": function () {},
  "constructor": function () {},
  "currentTarget": function () {},
  "data": function () {},
  "defaultPrevented": function () {},
  "eventPhase": function () {},
  "initEvent": function () {},
  "initMessageEvent": function () {},
  "lastEventId": function () {},
  "origin": function () {},
  "ports": function () {},
  "preventDefault": function () {},
  "source": function () {},
  "stopImmediatePropagation": function () {},
  "stopPropagation": function () {},
  "target": function () {},
  "timeStamp": function () {},
  "toString": function () {},
  "type": function () {}
};
Blockly.utils.global._core.MouseEvent.prototype = {
  "AT_TARGET": function () {},
  "BUBBLING_PHASE": function () {},
  "CAPTURING_PHASE": function () {},
  "NONE": function () {},
  "altKey": function () {},
  "bubbles": function () {},
  "button": function () {},
  "buttons": function () {},
  "cancelBubble": function () {},
  "cancelable": function () {},
  "clientX": function () {},
  "clientY": function () {},
  "constructor": function () {},
  "ctrlKey": function () {},
  "currentTarget": function () {},
  "defaultPrevented": function () {},
  "detail": function () {},
  "eventPhase": function () {},
  "getModifierState": function () {},
  "initEvent": function () {},
  "initMouseEvent": function () {},
  "initUIEvent": function () {},
  "metaKey": function () {},
  "preventDefault": function () {},
  "relatedTarget": function () {},
  "screenX": function () {},
  "screenY": function () {},
  "shiftKey": function () {},
  "stopImmediatePropagation": function () {},
  "stopPropagation": function () {},
  "target": function () {},
  "timeStamp": function () {},
  "toString": function () {},
  "type": function () {},
  "view": function () {}
};
Blockly.utils.global._core.NamedNodeMap.prototype = {
  "getNamedItem": function () {},
  "getNamedItemNS": function () {},
  "item": function () {},
  "length": function () {},
  "removeNamedItem": function () {},
  "removeNamedItemNS": function () {},
  "setNamedItem": function () {},
  "setNamedItemNS": function () {}
};
Blockly.utils.global._core.Node.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "baseURI": function () {},
  "childNodes": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "hasChildNodes": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lastChild": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "previousSibling": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "textContent": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.NodeFilter.prototype = {
  "FILTER_ACCEPT": function () {},
  "FILTER_REJECT": function () {},
  "FILTER_SKIP": function () {},
  "SHOW_ALL": function () {},
  "SHOW_ATTRIBUTE": function () {},
  "SHOW_CDATA_SECTION": function () {},
  "SHOW_COMMENT": function () {},
  "SHOW_DOCUMENT": function () {},
  "SHOW_DOCUMENT_FRAGMENT": function () {},
  "SHOW_DOCUMENT_TYPE": function () {},
  "SHOW_ELEMENT": function () {},
  "SHOW_ENTITY": function () {},
  "SHOW_ENTITY_REFERENCE": function () {},
  "SHOW_NOTATION": function () {},
  "SHOW_PROCESSING_INSTRUCTION": function () {},
  "SHOW_TEXT": function () {}
};
Blockly.utils.global._core.NodeIterator.prototype = {
  "detach": function () {},
  "filter": function () {},
  "nextNode": function () {},
  "pointerBeforeReferenceNode": function () {},
  "previousNode": function () {},
  "referenceNode": function () {},
  "root": function () {},
  "toString": function () {},
  "whatToShow": function () {}
};
Blockly.utils.global._core.NodeList.prototype = {
  "values": function () {}
};
Blockly.utils.global._core.PopStateEvent.prototype = {
  "AT_TARGET": function () {},
  "BUBBLING_PHASE": function () {},
  "CAPTURING_PHASE": function () {},
  "NONE": function () {},
  "bubbles": function () {},
  "cancelBubble": function () {},
  "cancelable": function () {},
  "constructor": function () {},
  "currentTarget": function () {},
  "defaultPrevented": function () {},
  "eventPhase": function () {},
  "initEvent": function () {},
  "preventDefault": function () {},
  "state": function () {},
  "stopImmediatePropagation": function () {},
  "stopPropagation": function () {},
  "target": function () {},
  "timeStamp": function () {},
  "toString": function () {},
  "type": function () {}
};
Blockly.utils.global._core.ProcessingInstruction.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "appendData": function () {},
  "baseURI": function () {},
  "childNodes": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "data": function () {},
  "deleteData": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "hasChildNodes": function () {},
  "insertBefore": function () {},
  "insertData": function () {},
  "isEqualNode": function () {},
  "lastChild": function () {},
  "length": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "remove": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "replaceData": function () {},
  "substringData": function () {},
  "target": function () {},
  "textContent": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.ProgressEvent.prototype = {
  "AT_TARGET": function () {},
  "BUBBLING_PHASE": function () {},
  "CAPTURING_PHASE": function () {},
  "NONE": function () {},
  "bubbles": function () {},
  "cancelBubble": function () {},
  "cancelable": function () {},
  "constructor": function () {},
  "currentTarget": function () {},
  "defaultPrevented": function () {},
  "eventPhase": function () {},
  "initEvent": function () {},
  "lengthComputable": function () {},
  "loaded": function () {},
  "preventDefault": function () {},
  "stopImmediatePropagation": function () {},
  "stopPropagation": function () {},
  "target": function () {},
  "timeStamp": function () {},
  "toString": function () {},
  "total": function () {},
  "type": function () {}
};
Blockly.utils.global._core.StyleSheetList.prototype = {
  "item": function () {}
};
Blockly.utils.global._core.Text.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "addEventListener": function () {},
  "appendChild": function () {},
  "appendData": function () {},
  "baseURI": function () {},
  "childNodes": function () {},
  "cloneNode": function () {},
  "compareDocumentPosition": function () {},
  "constructor": function () {},
  "contains": function () {},
  "data": function () {},
  "deleteData": function () {},
  "dispatchEvent": function () {},
  "firstChild": function () {},
  "hasChildNodes": function () {},
  "insertBefore": function () {},
  "insertData": function () {},
  "isEqualNode": function () {},
  "lastChild": function () {},
  "length": function () {},
  "nextElementSibling": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "previousElementSibling": function () {},
  "previousSibling": function () {},
  "remove": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "replaceData": function () {},
  "splitText": function () {},
  "substringData": function () {},
  "textContent": function () {},
  "toString": function () {},
  "wholeText": function () {}
};
Blockly.utils.global._core.TouchEvent.prototype = {
  "AT_TARGET": function () {},
  "BUBBLING_PHASE": function () {},
  "CAPTURING_PHASE": function () {},
  "NONE": function () {},
  "altKey": function () {},
  "bubbles": function () {},
  "cancelBubble": function () {},
  "cancelable": function () {},
  "changedTouches": function () {},
  "constructor": function () {},
  "ctrlKey": function () {},
  "currentTarget": function () {},
  "defaultPrevented": function () {},
  "detail": function () {},
  "eventPhase": function () {},
  "initEvent": function () {},
  "initUIEvent": function () {},
  "metaKey": function () {},
  "preventDefault": function () {},
  "shiftKey": function () {},
  "stopImmediatePropagation": function () {},
  "stopPropagation": function () {},
  "target": function () {},
  "targetTouches": function () {},
  "timeStamp": function () {},
  "toString": function () {},
  "touches": function () {},
  "type": function () {},
  "view": function () {}
};
Blockly.utils.global._core.UIEvent.prototype = {
  "AT_TARGET": function () {},
  "BUBBLING_PHASE": function () {},
  "CAPTURING_PHASE": function () {},
  "NONE": function () {},
  "bubbles": function () {},
  "cancelBubble": function () {},
  "cancelable": function () {},
  "constructor": function () {},
  "currentTarget": function () {},
  "defaultPrevented": function () {},
  "detail": function () {},
  "eventPhase": function () {},
  "initEvent": function () {},
  "initUIEvent": function () {},
  "preventDefault": function () {},
  "stopImmediatePropagation": function () {},
  "stopPropagation": function () {},
  "target": function () {},
  "timeStamp": function () {},
  "toString": function () {},
  "type": function () {},
  "view": function () {}
};
Blockly.utils.global._core.URL.prototype = {
  "hash": function () {},
  "host": function () {},
  "hostname": function () {},
  "href": function () {},
  "origin": function () {},
  "password": function () {},
  "pathname": function () {},
  "port": function () {},
  "protocol": function () {},
  "search": function () {},
  "toJSON": function () {},
  "toString": function () {},
  "username": function () {}
};
Blockly.utils.global._core.Window.prototype = {
  "addEventListener": function () {},
  "dispatchEvent": function () {},
  "removeEventListener": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.XMLDocument.prototype = {
  "ATTRIBUTE_NODE": function () {},
  "CDATA_SECTION_NODE": function () {},
  "COMMENT_NODE": function () {},
  "DOCUMENT_FRAGMENT_NODE": function () {},
  "DOCUMENT_NODE": function () {},
  "DOCUMENT_POSITION_CONTAINED_BY": function () {},
  "DOCUMENT_POSITION_CONTAINS": function () {},
  "DOCUMENT_POSITION_DISCONNECTED": function () {},
  "DOCUMENT_POSITION_FOLLOWING": function () {},
  "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC": function () {},
  "DOCUMENT_POSITION_PRECEDING": function () {},
  "DOCUMENT_TYPE_NODE": function () {},
  "ELEMENT_NODE": function () {},
  "ENTITY_NODE": function () {},
  "ENTITY_REFERENCE_NODE": function () {},
  "NOTATION_NODE": function () {},
  "PROCESSING_INSTRUCTION_NODE": function () {},
  "TEXT_NODE": function () {},
  "URL": function () {},
  "activeElement": function () {},
  "addEventListener": function () {},
  "adoptNode": function () {},
  "anchors": function () {},
  "appendChild": function () {},
  "applets": function () {},
  "baseURI": function () {},
  "body": function () {},
  "characterSet": function () {},
  "charset": function () {},
  "childElementCount": function () {},
  "childNodes": function () {},
  "children": function () {},
  "cloneNode": function () {},
  "close": function () {},
  "compareDocumentPosition": function () {},
  "compatMode": function () {},
  "constructor": function () {},
  "contains": function () {},
  "contentType": function () {},
  "cookie": function () {},
  "createAttribute": function () {},
  "createAttributeNS": function () {},
  "createCDATASection": function () {},
  "createComment": function () {},
  "createDocumentFragment": function () {},
  "createElement": function () {},
  "createElementNS": function () {},
  "createEvent": function () {},
  "createExpression": function () {},
  "createNSResolver": function () {},
  "createNodeIterator": function () {},
  "createProcessingInstruction": function () {},
  "createTextNode": function () {},
  "createTreeWalker": function () {},
  "currentScript": function () {},
  "defaultView": function () {},
  "dispatchEvent": function () {},
  "doctype": function () {},
  "documentElement": function () {},
  "documentURI": function () {},
  "embeds": function () {},
  "evaluate": function () {},
  "firstChild": function () {},
  "firstElementChild": function () {},
  "forms": function () {},
  "getElementById": function () {},
  "getElementsByClassName": function () {},
  "getElementsByName": function () {},
  "getElementsByTagName": function () {},
  "getElementsByTagNameNS": function () {},
  "hasChildNodes": function () {},
  "hasFocus": function () {},
  "head": function () {},
  "hidden": function () {},
  "images": function () {},
  "implementation": function () {},
  "importNode": function () {},
  "inputEncoding": function () {},
  "insertBefore": function () {},
  "isEqualNode": function () {},
  "lastChild": function () {},
  "lastElementChild": function () {},
  "lastModified": function () {},
  "links": function () {},
  "nextSibling": function () {},
  "nodeName": function () {},
  "nodeType": function () {},
  "nodeValue": function () {},
  "normalize": function () {},
  "onabort": function () {},
  "onautocomplete": function () {},
  "onautocompleteerror": function () {},
  "onblur": function () {},
  "oncancel": function () {},
  "oncanplay": function () {},
  "oncanplaythrough": function () {},
  "onchange": function () {},
  "onclick": function () {},
  "onclose": function () {},
  "oncontextmenu": function () {},
  "oncuechange": function () {},
  "ondblclick": function () {},
  "ondrag": function () {},
  "ondragend": function () {},
  "ondragenter": function () {},
  "ondragexit": function () {},
  "ondragleave": function () {},
  "ondragover": function () {},
  "ondragstart": function () {},
  "ondrop": function () {},
  "ondurationchange": function () {},
  "onemptied": function () {},
  "onended": function () {},
  "onerror": function () {},
  "onfocus": function () {},
  "oninput": function () {},
  "oninvalid": function () {},
  "onkeydown": function () {},
  "onkeypress": function () {},
  "onkeyup": function () {},
  "onload": function () {},
  "onloadeddata": function () {},
  "onloadedmetadata": function () {},
  "onloadstart": function () {},
  "onmousedown": function () {},
  "onmouseenter": function () {},
  "onmouseleave": function () {},
  "onmousemove": function () {},
  "onmouseout": function () {},
  "onmouseover": function () {},
  "onmouseup": function () {},
  "onpause": function () {},
  "onplay": function () {},
  "onplaying": function () {},
  "onprogress": function () {},
  "onratechange": function () {},
  "onreadystatechange": function () {},
  "onreset": function () {},
  "onresize": function () {},
  "onscroll": function () {},
  "onseeked": function () {},
  "onseeking": function () {},
  "onselect": function () {},
  "onshow": function () {},
  "onsort": function () {},
  "onstalled": function () {},
  "onsubmit": function () {},
  "onsuspend": function () {},
  "ontimeupdate": function () {},
  "ontoggle": function () {},
  "onvisibilitychange": function () {},
  "onvolumechange": function () {},
  "onwaiting": function () {},
  "onwheel": function () {},
  "open": function () {},
  "origin": function () {},
  "ownerDocument": function () {},
  "parentElement": function () {},
  "parentNode": function () {},
  "plugins": function () {},
  "previousSibling": function () {},
  "querySelector": function () {},
  "querySelectorAll": function () {},
  "readyState": function () {},
  "referrer": function () {},
  "removeChild": function () {},
  "removeEventListener": function () {},
  "replaceChild": function () {},
  "scripts": function () {},
  "styleSheets": function () {},
  "textContent": function () {},
  "title": function () {},
  "toString": function () {},
  "visibilityState": function () {},
  "write": function () {},
  "writeln": function () {}
};
Blockly.utils.global._core.XMLHttpRequestEventTarget.prototype = {
  "addEventListener": function () {},
  "dispatchEvent": function () {},
  "removeEventListener": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.XMLHttpRequestUpload.prototype = {
  "addEventListener": function () {},
  "dispatchEvent": function () {},
  "removeEventListener": function () {},
  "toString": function () {}
};
Blockly.utils.global._core.XPathEvaluator.prototype = {
  "createExpression": function () {},
  "createNSResolver": function () {},
  "evaluate": function () {}
};
Blockly.utils.global._core.XPathExpression.prototype = {
  "evaluate": function () {}
};
Blockly.utils.global._core.XPathResult.prototype = {
  "ANY_TYPE": function () {},
  "ANY_UNORDERED_NODE_TYPE": function () {},
  "BOOLEAN_TYPE": function () {},
  "FIRST_ORDERED_NODE_TYPE": function () {},
  "NUMBER_TYPE": function () {},
  "ORDERED_NODE_ITERATOR_TYPE": function () {},
  "ORDERED_NODE_SNAPSHOT_TYPE": function () {},
  "STRING_TYPE": function () {},
  "UNORDERED_NODE_ITERATOR_TYPE": function () {},
  "UNORDERED_NODE_SNAPSHOT_TYPE": function () {},
  "booleanValue": function () {},
  "invalidIteratorState": function () {},
  "iterateNext": function () {},
  "numberValue": function () {},
  "resultType": function () {},
  "singleNodeValue": function () {},
  "snapshotItem": function () {},
  "snapshotLength": function () {},
  "stringValue": function () {}
};
/**********************************************************************
 * End Generated Extern for Blockly
/**********************************************************************/