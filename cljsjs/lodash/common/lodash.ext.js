// generated by
// http://www.dotnetwise.com/Code/Externs/

var _ = {
    "templateSettings": {
        "escape": function () {},
        "evaluate": function () {},
        "interpolate": function () {},
        "variable": {},
        "imports": {
            "_": function () {}
        }
    },
    "after": function () {},
    "ary": function () {},
    "assign": function () {},
    "assignIn": function () {},
    "assignInWith": function () {},
    "assignWith": function () {},
    "at": function () {},
    "before": function () {},
    "bind": function () {},
    "bindAll": function () {},
    "bindKey": function () {},
    "castArray": function () {},
    "chain": function () {},
    "chunk": function () {},
    "compact": function () {},
    "concat": function () {},
    "cond": function () {},
    "conforms": function () {},
    "constant": function () {},
    "countBy": function () {},
    "create": function () {},
    "curry": function () {},
    "curryRight": function () {},
    "debounce": function () {},
    "defaults": function () {},
    "defaultsDeep": function () {},
    "defer": function () {},
    "delay": function () {},
    "difference": function () {},
    "differenceBy": function () {},
    "differenceWith": function () {},
    "drop": function () {},
    "dropRight": function () {},
    "dropRightWhile": function () {},
    "dropWhile": function () {},
    "fill": function () {},
    "filter": function () {},
    "flatMap": function () {},
    "flatMapDeep": function () {},
    "flatMapDepth": function () {},
    "flatten": function () {},
    "flattenDeep": function () {},
    "flattenDepth": function () {},
    "flip": function () {},
    "flow": function () {},
    "flowRight": function () {},
    "fromPairs": function () {},
    "functions": function () {},
    "functionsIn": function () {},
    "groupBy": function () {},
    "initial": function () {},
    "intersection": function () {},
    "intersectionBy": function () {},
    "intersectionWith": function () {},
    "invert": function () {},
    "invertBy": function () {},
    "invokeMap": function () {},
    "iteratee": function () {},
    "keyBy": function () {},
    "keys": function () {},
    "keysIn": function () {},
    "map": function () {},
    "mapKeys": function () {},
    "mapValues": function () {},
    "matches": function () {},
    "matchesProperty": function () {},
    "memoize": function () {},
    "merge": function () {},
    "mergeWith": function () {},
    "method": function () {},
    "methodOf": function () {},
    "mixin": function () {},
    "negate": function () {},
    "nthArg": function () {},
    "omit": function () {},
    "omitBy": function () {},
    "once": function () {},
    "orderBy": function () {},
    "over": function () {},
    "overArgs": function () {},
    "overEvery": function () {},
    "overSome": function () {},
    "partial": function () {},
    "partialRight": function () {},
    "partition": function () {},
    "pick": function () {},
    "pickBy": function () {},
    "property": function () {},
    "propertyOf": function () {},
    "pull": function () {},
    "pullAll": function () {},
    "pullAllBy": function () {},
    "pullAllWith": function () {},
    "pullAt": function () {},
    "range": function () {},
    "rangeRight": function () {},
    "rearg": function () {},
    "reject": function () {},
    "remove": function () {},
    "rest": function () {},
    "reverse": function () {},
    "sampleSize": function () {},
    "set": function () {},
    "setWith": function () {},
    "shuffle": function () {},
    "slice": function () {},
    "sortBy": function () {},
    "sortedUniq": function () {},
    "sortedUniqBy": function () {},
    "split": function () {},
    "spread": function () {},
    "tail": function () {},
    "take": function () {},
    "takeRight": function () {},
    "takeRightWhile": function () {},
    "takeWhile": function () {},
    "tap": function () {},
    "throttle": function () {},
    "thru": function () {},
    "toArray": function () {},
    "toPairs": function () {},
    "toPairsIn": function () {},
    "toPath": function () {},
    "toPlainObject": function () {},
    "transform": function () {},
    "unary": function () {},
    "union": function () {},
    "unionBy": function () {},
    "unionWith": function () {},
    "uniq": function () {},
    "uniqBy": function () {},
    "uniqWith": function () {},
    "unset": function () {},
    "unzip": function () {},
    "unzipWith": function () {},
    "update": function () {},
    "updateWith": function () {},
    "values": function () {},
    "valuesIn": function () {},
    "without": function () {},
    "words": function () {},
    "wrap": function () {},
    "xor": function () {},
    "xorBy": function () {},
    "xorWith": function () {},
    "zip": function () {},
    "zipObject": function () {},
    "zipObjectDeep": function () {},
    "zipWith": function () {},
    "entries": function () {},
    "entriesIn": function () {},
    "extend": function () {},
    "extendWith": function () {},
    "add": function () {},
    "attempt": function () {},
    "camelCase": function () {},
    "capitalize": function () {},
    "ceil": function () {},
    "clamp": function () {},
    "clone": function () {},
    "cloneDeep": function () {},
    "cloneDeepWith": function () {},
    "cloneWith": function () {},
    "deburr": function () {},
    "divide": function () {},
    "endsWith": function () {},
    "eq": function () {},
    "escape": function () {},
    "escapeRegExp": function () {},
    "every": function () {},
    "find": function () {},
    "findIndex": function () {},
    "findKey": function () {},
    "findLast": function () {},
    "findLastIndex": function () {},
    "findLastKey": function () {},
    "floor": function () {},
    "forEach": function () {},
    "forEachRight": function () {},
    "forIn": function () {},
    "forInRight": function () {},
    "forOwn": function () {},
    "forOwnRight": function () {},
    "get": function () {},
    "gt": function () {},
    "gte": function () {},
    "has": function () {},
    "hasIn": function () {},
    "head": function () {},
    "identity": function () {},
    "includes": function () {},
    "indexOf": function () {},
    "inRange": function () {},
    "invoke": function () {},
    "isArguments": function () {},
    "isArray": function () {},
    "isArrayBuffer": function () {},
    "isArrayLike": function () {},
    "isArrayLikeObject": function () {},
    "isBoolean": function () {},
    "isBuffer": function () {},
    "isDate": function () {},
    "isElement": function () {},
    "isEmpty": function () {},
    "isEqual": function () {},
    "isEqualWith": function () {},
    "isError": function () {},
    "isFinite": function () {},
    "isFunction": function () {},
    "isInteger": function () {},
    "isLength": function () {},
    "isMap": function () {},
    "isMatch": function () {},
    "isMatchWith": function () {},
    "isNaN": function () {},
    "isNative": function () {},
    "isNil": function () {},
    "isNull": function () {},
    "isNumber": function () {},
    "isObject": function () {},
    "isObjectLike": function () {},
    "isPlainObject": function () {},
    "isRegExp": function () {},
    "isSafeInteger": function () {},
    "isSet": function () {},
    "isString": function () {},
    "isSymbol": function () {},
    "isTypedArray": function () {},
    "isUndefined": function () {},
    "isWeakMap": function () {},
    "isWeakSet": function () {},
    "join": function () {},
    "kebabCase": function () {},
    "last": function () {},
    "lastIndexOf": function () {},
    "lowerCase": function () {},
    "lowerFirst": function () {},
    "lt": function () {},
    "lte": function () {},
    "max": function () {},
    "maxBy": function () {},
    "mean": function () {},
    "meanBy": function () {},
    "min": function () {},
    "minBy": function () {},
    "multiply": function () {},
    "nth": function () {},
    "noConflict": function () {},
    "noop": function () {},
    "now": function () {},
    "pad": function () {},
    "padEnd": function () {},
    "padStart": function () {},
    "parseInt": function () {},
    "random": function () {},
    "reduce": function () {},
    "reduceRight": function () {},
    "repeat": function () {},
    "replace": function () {},
    "result": function () {},
    "round": function () {},
    "runInContext": function () {},
    "sample": function () {},
    "size": function () {},
    "snakeCase": function () {},
    "some": function () {},
    "sortedIndex": function () {},
    "sortedIndexBy": function () {},
    "sortedIndexOf": function () {},
    "sortedLastIndex": function () {},
    "sortedLastIndexBy": function () {},
    "sortedLastIndexOf": function () {},
    "startCase": function () {},
    "startsWith": function () {},
    "subtract": function () {},
    "sum": function () {},
    "sumBy": function () {},
    "template": function () {},
    "times": function () {},
    "toInteger": function () {},
    "toLength": function () {},
    "toLower": function () {},
    "toNumber": function () {},
    "toSafeInteger": function () {},
    "toString": function () {},
    "toUpper": function () {},
    "trim": function () {},
    "trimEnd": function () {},
    "trimStart": function () {},
    "truncate": function () {},
    "unescape": function () {},
    "uniqueId": function () {},
    "upperCase": function () {},
    "upperFirst": function () {},
    "each": function () {},
    "eachRight": function () {},
    "first": function () {},
    "VERSION": {}
};