(function(){function b(c){THREE.Geometry.call(this);this.fromBufferGeometry(new a(c));this.mergeVertices()}function a(c){THREE.BufferGeometry.call(this);var a=[],b=[];void 0===THREE.QuickHull&&console.error("THREE.ConvexBufferGeometry: ConvexBufferGeometry relies on THREE.QuickHull");c=(new THREE.QuickHull).setFromPoints(c).faces;for(var f=0;f<c.length;f++){var d=c[f],e=d.edge;do{var g=e.head().point;a.push(g.x,g.y,g.z);b.push(d.normal.x,d.normal.y,d.normal.z);e=e.next}while(e!==d.edge)}this.addAttribute("position",
new THREE.Float32BufferAttribute(a,3));this.addAttribute("normal",new THREE.Float32BufferAttribute(b,3))}b.prototype=Object.create(THREE.Geometry.prototype);b.prototype.constructor=b;a.prototype=Object.create(THREE.BufferGeometry.prototype);a.prototype.constructor=a;THREE.ConvexGeometry=b;THREE.ConvexBufferGeometry=a})();