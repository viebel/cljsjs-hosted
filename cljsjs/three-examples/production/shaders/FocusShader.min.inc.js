THREE.FocusShader={uniforms:{tDiffuse:{value:null},screenWidth:{value:1024},screenHeight:{value:1024},sampleDistance:{value:.94},waveFactor:{value:.00125}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv \x3d uv;\ngl_Position \x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float screenWidth;\nuniform float screenHeight;\nuniform float sampleDistance;\nuniform float waveFactor;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 color, org, tmp, add;\nfloat sample_dist, f;\nvec2 vin;\nvec2 uv \x3d vUv;\nadd \x3d color \x3d org \x3d texture2D( tDiffuse, uv );\nvin \x3d ( uv - vec2( 0.5 ) ) * vec2( 1.4 );\nsample_dist \x3d dot( vin, vin ) * 2.0;\nf \x3d ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;\nvec2 sampleSize \x3d vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );\nadd +\x3d tmp \x3d texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );\nif( tmp.b \x3c color.b ) color \x3d tmp;\nadd +\x3d tmp \x3d texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );\nif( tmp.b \x3c color.b ) color \x3d tmp;\nadd +\x3d tmp \x3d texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );\nif( tmp.b \x3c color.b ) color \x3d tmp;\nadd +\x3d tmp \x3d texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );\nif( tmp.b \x3c color.b ) color \x3d tmp;\nadd +\x3d tmp \x3d texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );\nif( tmp.b \x3c color.b ) color \x3d tmp;\nadd +\x3d tmp \x3d texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );\nif( tmp.b \x3c color.b ) color \x3d tmp;\nadd +\x3d tmp \x3d texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );\nif( tmp.b \x3c color.b ) color \x3d tmp;\ncolor \x3d color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );\ncolor \x3d color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );\ngl_FragColor \x3d vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );\n}"};