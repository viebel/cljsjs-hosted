THREE.BrightnessContrastShader={uniforms:{tDiffuse:{value:null},brightness:{value:0},contrast:{value:0}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv \x3d uv;\ngl_Position \x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float brightness;\nuniform float contrast;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor \x3d texture2D( tDiffuse, vUv );\ngl_FragColor.rgb +\x3d brightness;\nif (contrast \x3e 0.0) {\ngl_FragColor.rgb \x3d (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\n} else {\ngl_FragColor.rgb \x3d (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\n}\n}"};