THREE.MirrorShader={uniforms:{tDiffuse:{value:null},side:{value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv \x3d uv;\ngl_Position \x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform int side;\nvarying vec2 vUv;\nvoid main() {\nvec2 p \x3d vUv;\nif (side \x3d\x3d 0){\nif (p.x \x3e 0.5) p.x \x3d 1.0 - p.x;\n}else if (side \x3d\x3d 1){\nif (p.x \x3c 0.5) p.x \x3d 1.0 - p.x;\n}else if (side \x3d\x3d 2){\nif (p.y \x3c 0.5) p.y \x3d 1.0 - p.y;\n}else if (side \x3d\x3d 3){\nif (p.y \x3e 0.5) p.y \x3d 1.0 - p.y;\n} \nvec4 color \x3d texture2D(tDiffuse, p);\ngl_FragColor \x3d color;\n}"};