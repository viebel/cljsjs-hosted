THREE.DotScreenShader={uniforms:{tDiffuse:{value:null},tSize:{value:new THREE.Vector2(256,256)},center:{value:new THREE.Vector2(.5,.5)},angle:{value:1.57},scale:{value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv \x3d uv;\ngl_Position \x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform vec2 center;\nuniform float angle;\nuniform float scale;\nuniform vec2 tSize;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nfloat pattern() {\nfloat s \x3d sin( angle ), c \x3d cos( angle );\nvec2 tex \x3d vUv * tSize - center;\nvec2 point \x3d vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\nreturn ( sin( point.x ) * sin( point.y ) ) * 4.0;\n}\nvoid main() {\nvec4 color \x3d texture2D( tDiffuse, vUv );\nfloat average \x3d ( color.r + color.g + color.b ) / 3.0;\ngl_FragColor \x3d vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\n}"};