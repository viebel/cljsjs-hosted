THREE.ColorCorrectionShader={uniforms:{tDiffuse:{value:null},powRGB:{value:new THREE.Vector3(2,2,2)},mulRGB:{value:new THREE.Vector3(1,1,1)},addRGB:{value:new THREE.Vector3(0,0,0)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv \x3d uv;\ngl_Position \x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform vec3 powRGB;\nuniform vec3 mulRGB;\nuniform vec3 addRGB;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor \x3d texture2D( tDiffuse, vUv );\ngl_FragColor.rgb \x3d mulRGB * pow( ( gl_FragColor.rgb + addRGB ), powRGB );\n}"};