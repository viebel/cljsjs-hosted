THREE.LuminosityHighPassShader={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{type:"t",value:null},luminosityThreshold:{type:"f",value:1},smoothWidth:{type:"f",value:1},defaultColor:{type:"c",value:new THREE.Color(0)},defaultOpacity:{type:"f",value:0}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv \x3d uv;\ngl_Position \x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform vec3 defaultColor;\nuniform float defaultOpacity;\nuniform float luminosityThreshold;\nuniform float smoothWidth;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel \x3d texture2D( tDiffuse, vUv );\nvec3 luma \x3d vec3( 0.299, 0.587, 0.114 );\nfloat v \x3d dot( texel.xyz, luma );\nvec4 outputColor \x3d vec4( defaultColor.rgb, defaultOpacity );\nfloat alpha \x3d smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );\ngl_FragColor \x3d mix( outputColor, texel, alpha );\n}"};