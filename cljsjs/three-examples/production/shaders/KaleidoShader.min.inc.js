THREE.KaleidoShader={uniforms:{tDiffuse:{value:null},sides:{value:6},angle:{value:0}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv \x3d uv;\ngl_Position \x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float sides;\nuniform float angle;\nvarying vec2 vUv;\nvoid main() {\nvec2 p \x3d vUv - 0.5;\nfloat r \x3d length(p);\nfloat a \x3d atan(p.y, p.x) + angle;\nfloat tau \x3d 2. * 3.1416 ;\na \x3d mod(a, tau/sides);\na \x3d abs(a - tau/sides/2.) ;\np \x3d r * vec2(cos(a), sin(a));\nvec4 color \x3d texture2D(tDiffuse, p + 0.5);\ngl_FragColor \x3d color;\n}"};