THREE.BleachBypassShader={uniforms:{tDiffuse:{value:null},opacity:{value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv \x3d uv;\ngl_Position \x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 base \x3d texture2D( tDiffuse, vUv );\nvec3 lumCoeff \x3d vec3( 0.25, 0.65, 0.1 );\nfloat lum \x3d dot( lumCoeff, base.rgb );\nvec3 blend \x3d vec3( lum );\nfloat L \x3d min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\nvec3 result1 \x3d 2.0 * base.rgb * blend;\nvec3 result2 \x3d 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\nvec3 newColor \x3d mix( result1, result2, L );\nfloat A2 \x3d opacity * base.a;\nvec3 mixRGB \x3d A2 * newColor.rgb;\nmixRGB +\x3d ( ( 1.0 - A2 ) * base.rgb );\ngl_FragColor \x3d vec4( mixRGB, base.a );\n}"};