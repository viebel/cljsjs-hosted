THREE.NURBSUtils={findSpan:function(b,f,e){var d=e.length-b-1;if(f>=e[d])return d-1;if(f<=e[b])return b;for(var c=Math.floor((b+d)/2);f<e[c]||f>=e[c+1];)f<e[c]?d=c:b=c,c=Math.floor((b+d)/2);return c},calcBasisFunctions:function(b,f,e,d){for(var c=[],g=[],a=[],l=c[0]=1;l<=e;++l){g[l]=f-d[b+1-l];a[l]=d[b+l]-f;for(var k=0,h=0;h<l;++h){var n=a[h+1],p=g[l-h],m=c[h]/(n+p);c[h]=k+n*m;k=p*m}c[l]=k}return c},calcBSplinePoint:function(b,f,e,d){var c=this.findSpan(b,d,f);f=this.calcBasisFunctions(c,d,b,f);d=
new THREE.Vector4(0,0,0,0);for(var g=0;g<=b;++g){var a=e[c-b+g],l=f[g],k=a.w*l;d.x+=a.x*k;d.y+=a.y*k;d.z+=a.z*k;d.w+=a.w*l}return d},calcBasisFunctionDerivatives:function(b,f,e,d,c){for(var g=[],a=0;a<=e;++a)g[a]=0;for(var l=[],a=0;a<=d;++a)l[a]=g.slice(0);for(var k=[],a=0;a<=e;++a)k[a]=g.slice(0);k[0][0]=1;for(var h=g.slice(0),n=g.slice(0),a=1;a<=e;++a){h[a]=f-c[b+1-a];n[a]=c[b+a]-f;for(var p=0,m=0;m<a;++m){var q=n[m+1],r=h[a-m];k[a][m]=q+r;var t=k[m][a-1]/k[a][m];k[m][a]=p+q*t;p=r*t}k[a][a]=p}for(a=
0;a<=e;++a)l[0][a]=k[a][e];for(m=0;m<=e;++m){b=0;f=1;c=[];for(a=0;a<=e;++a)c[a]=g.slice(0);for(h=c[0][0]=1;h<=d;++h){n=0;p=m-h;q=e-h;m>=h&&(c[f][0]=c[b][0]/k[q+1][p],n=c[f][0]*k[p][q]);r=m-1<=q?h-1:e-m;for(a=-1<=p?1:-p;a<=r;++a)c[f][a]=(c[b][a]-c[b][a-1])/k[q+1][p+a],n+=c[f][a]*k[p+a][q];m<=q&&(c[f][h]=-c[b][h-1]/k[q+1][m],n+=c[f][h]*k[m][q]);l[h][m]=n;a=b;b=f;f=a}}m=e;for(h=1;h<=d;++h){for(a=0;a<=e;++a)l[h][a]*=m;m*=e-h}return l},calcBSplineDerivatives:function(b,f,e,d,c){var g=c<b?c:b,a=[],l=this.findSpan(b,
d,f);f=this.calcBasisFunctionDerivatives(l,d,b,g,f);d=[];for(var k=0;k<e.length;++k){var h=e[k].clone(),n=h.w;h.x*=n;h.y*=n;h.z*=n;d[k]=h}for(e=0;e<=g;++e){h=d[l-b].clone().multiplyScalar(f[e][0]);for(k=1;k<=b;++k)h.add(d[l-b+k].clone().multiplyScalar(f[e][k]));a[e]=h}for(e=g+1;e<=c+1;++e)a[e]=new THREE.Vector4(0,0,0);return a},calcKoverI:function(b,f){for(var e=1,d=2;d<=b;++d)e*=d;for(var c=1,d=2;d<=f;++d)c*=d;for(d=2;d<=b-f;++d)c*=d;return e/c},calcRationalCurveDerivatives:function(b){for(var f=
b.length,e=[],d=[],c=0;c<f;++c){var g=b[c];e[c]=new THREE.Vector3(g.x,g.y,g.z);d[c]=g.w}b=[];for(g=0;g<f;++g){for(var a=e[g].clone(),c=1;c<=g;++c)a.sub(b[g-c].clone().multiplyScalar(this.calcKoverI(g,c)*d[c]));b[g]=a.divideScalar(d[0])}return b},calcNURBSDerivatives:function(b,f,e,d,c){b=this.calcBSplineDerivatives(b,f,e,d,c);return this.calcRationalCurveDerivatives(b)},calcSurfacePoint:function(b,f,e,d,c,g,a){var l=this.findSpan(b,g,e),k=this.findSpan(f,a,d);e=this.calcBasisFunctions(l,g,b,e);d=
this.calcBasisFunctions(k,a,f,d);a=[];for(g=0;g<=f;++g){a[g]=new THREE.Vector4(0,0,0,0);for(var h=0;h<=b;++h){var n=c[l-b+h][k-f+g].clone(),p=n.w;n.x*=p;n.y*=p;n.z*=p;a[g].add(n.multiplyScalar(e[h]))}}b=new THREE.Vector4(0,0,0,0);for(g=0;g<=f;++g)b.add(a[g].multiplyScalar(d[g]));b.divideScalar(b.w);return new THREE.Vector3(b.x,b.y,b.z)}};