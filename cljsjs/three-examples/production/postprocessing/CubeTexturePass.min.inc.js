THREE.CubeTexturePass=function(a,b,c){THREE.Pass.call(this);this.camera=a;this.needsSwap=!1;this.cubeShader=THREE.ShaderLib.cube;this.cubeMesh=new THREE.Mesh(new THREE.BoxBufferGeometry(10,10,10),new THREE.ShaderMaterial({uniforms:this.cubeShader.uniforms,vertexShader:this.cubeShader.vertexShader,fragmentShader:this.cubeShader.fragmentShader,depthTest:!1,depthWrite:!1,side:THREE.BackSide}));this.envMap=b;this.opacity=void 0!==c?c:1;this.cubeScene=new THREE.Scene;this.cubeCamera=new THREE.PerspectiveCamera;
this.cubeScene.add(this.cubeMesh)};
THREE.CubeTexturePass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.CubeTexturePass,render:function(a,b,c,d,e){b=a.autoClear;a.autoClear=!1;this.cubeCamera.projectionMatrix.copy(this.camera.projectionMatrix);this.cubeCamera.quaternion.setFromRotationMatrix(this.camera.matrixWorld);this.cubeMesh.material.uniforms.tCube.value=this.envMap;this.cubeMesh.material.uniforms.opacity.value=this.opacity;this.cubeMesh.material.transparent=1>this.opacity;a.render(this.cubeScene,
this.cubeCamera,this.renderToScreen?null:c,this.clear);a.autoClear=b}});