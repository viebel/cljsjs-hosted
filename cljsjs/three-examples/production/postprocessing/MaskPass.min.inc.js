THREE.MaskPass=function(c,d){THREE.Pass.call(this);this.scene=c;this.camera=d;this.clear=!0;this.inverse=this.needsSwap=!1};
THREE.MaskPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.MaskPass,render:function(c,d,g,b,a){b=c.context;a=c.state;a.buffers.color.setMask(!1);a.buffers.depth.setMask(!1);a.buffers.color.setLocked(!0);a.buffers.depth.setLocked(!0);var e,f;this.inverse?(e=0,f=1):(e=1,f=0);a.buffers.stencil.setTest(!0);a.buffers.stencil.setOp(b.REPLACE,b.REPLACE,b.REPLACE);a.buffers.stencil.setFunc(b.ALWAYS,e,4294967295);a.buffers.stencil.setClear(f);c.render(this.scene,this.camera,
g,this.clear);c.render(this.scene,this.camera,d,this.clear);a.buffers.color.setLocked(!1);a.buffers.depth.setLocked(!1);a.buffers.stencil.setFunc(b.EQUAL,1,4294967295);a.buffers.stencil.setOp(b.KEEP,b.KEEP,b.KEEP)}});THREE.ClearMaskPass=function(){THREE.Pass.call(this);this.needsSwap=!1};THREE.ClearMaskPass.prototype=Object.create(THREE.Pass.prototype);Object.assign(THREE.ClearMaskPass.prototype,{render:function(c,d,g,b,a){c.state.buffers.stencil.setTest(!1)}});