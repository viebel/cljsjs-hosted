THREE.DotScreenPass=function(b,c,a){THREE.Pass.call(this);void 0===THREE.DotScreenShader&&console.error("THREE.DotScreenPass relies on THREE.DotScreenShader");var d=THREE.DotScreenShader;this.uniforms=THREE.UniformsUtils.clone(d.uniforms);void 0!==b&&this.uniforms.center.value.copy(b);void 0!==c&&(this.uniforms.angle.value=c);void 0!==a&&(this.uniforms.scale.value=a);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader});this.camera=
new THREE.OrthographicCamera(-1,1,1,-1,0,1);this.scene=new THREE.Scene;this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null);this.quad.frustumCulled=!1;this.scene.add(this.quad)};
THREE.DotScreenPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.DotScreenPass,render:function(b,c,a,d,e){this.uniforms.tDiffuse.value=a.texture;this.uniforms.tSize.value.set(a.width,a.height);this.quad.material=this.material;this.renderToScreen?b.render(this.scene,this.camera):b.render(this.scene,this.camera,c,this.clear)}});