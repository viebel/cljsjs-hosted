THREE.BokehPass=function(b,d,a){THREE.Pass.call(this);this.scene=b;this.camera=d;b=void 0!==a.focus?a.focus:1;var e=void 0!==a.aspect?a.aspect:d.aspect,f=void 0!==a.aperture?a.aperture:.025,g=void 0!==a.maxblur?a.maxblur:1;this.renderTargetColor=new THREE.WebGLRenderTarget(a.width||window.innerWidth||1,a.height||window.innerHeight||1,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat});this.renderTargetColor.texture.name="BokehPass.color";this.renderTargetDepth=this.renderTargetColor.clone();
this.renderTargetDepth.texture.name="BokehPass.depth";this.materialDepth=new THREE.MeshDepthMaterial;this.materialDepth.depthPacking=THREE.RGBADepthPacking;this.materialDepth.blending=THREE.NoBlending;void 0===THREE.BokehShader&&console.error("THREE.BokehPass relies on THREE.BokehShader");a=THREE.BokehShader;var c=THREE.UniformsUtils.clone(a.uniforms);c.tDepth.value=this.renderTargetDepth.texture;c.focus.value=b;c.aspect.value=e;c.aperture.value=f;c.maxblur.value=g;c.nearClip.value=d.near;c.farClip.value=
d.far;this.materialBokeh=new THREE.ShaderMaterial({defines:Object.assign({},a.defines),uniforms:c,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader});this.uniforms=c;this.needsSwap=!1;this.camera2=new THREE.OrthographicCamera(-1,1,1,-1,0,1);this.scene2=new THREE.Scene;this.quad2=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null);this.quad2.frustumCulled=!1;this.scene2.add(this.quad2);this.oldClearColor=new THREE.Color;this.oldClearAlpha=1};
THREE.BokehPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.BokehPass,render:function(b,d,a,e,f){this.quad2.material=this.materialBokeh;this.scene.overrideMaterial=this.materialDepth;this.oldClearColor.copy(b.getClearColor());this.oldClearAlpha=b.getClearAlpha();b.autoClear=!1;b.setClearColor(16777215);b.setClearAlpha(1);b.render(this.scene,this.camera,this.renderTargetDepth,!0);this.uniforms.tColor.value=a.texture;this.uniforms.nearClip.value=this.camera.near;this.uniforms.farClip.value=
this.camera.far;this.renderToScreen?b.render(this.scene2,this.camera2):b.render(this.scene2,this.camera2,d,this.clear);this.scene.overrideMaterial=null;b.setClearColor(this.oldClearColor);b.setClearAlpha(this.oldClearAlpha);b.autoClear=this.oldAutoClear}});