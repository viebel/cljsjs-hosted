THREE.TexturePass=function(a,b){THREE.Pass.call(this);void 0===THREE.CopyShader&&console.error("THREE.TexturePass relies on THREE.CopyShader");var c=THREE.CopyShader;this.map=a;this.opacity=void 0!==b?b:1;this.uniforms=THREE.UniformsUtils.clone(c.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader,depthTest:!1,depthWrite:!1});this.needsSwap=!1;this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);this.scene=new THREE.Scene;
this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null);this.quad.frustumCulled=!1;this.scene.add(this.quad)};
THREE.TexturePass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.TexturePass,render:function(a,b,c,d,e){b=a.autoClear;a.autoClear=!1;this.quad.material=this.material;this.uniforms.opacity.value=this.opacity;this.uniforms.tDiffuse.value=this.map;this.material.transparent=1>this.opacity;a.render(this.scene,this.camera,this.renderToScreen?null:c,this.clear);a.autoClear=b}});