THREE.EffectComposer=function(a,b){this.renderer=a;if(void 0===b){var c={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat,stencilBuffer:!1},d=a.getDrawingBufferSize();b=new THREE.WebGLRenderTarget(d.width,d.height,c);b.texture.name="EffectComposer.rt1"}this.renderTarget1=b;this.renderTarget2=b.clone();this.renderTarget2.texture.name="EffectComposer.rt2";this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;this.passes=[];void 0===THREE.CopyShader&&
console.error("THREE.EffectComposer relies on THREE.CopyShader");void 0===THREE.ShaderPass&&console.error("THREE.EffectComposer relies on THREE.ShaderPass");this.copyPass=new THREE.ShaderPass(THREE.CopyShader)};
Object.assign(THREE.EffectComposer.prototype,{swapBuffers:function(){var a=this.readBuffer;this.readBuffer=this.writeBuffer;this.writeBuffer=a},addPass:function(a){this.passes.push(a);var b=this.renderer.getDrawingBufferSize();a.setSize(b.width,b.height)},insertPass:function(a,b){this.passes.splice(b,0,a)},render:function(a){var b=!1,c,d,f=this.passes.length;for(d=0;d<f;d++)if(c=this.passes[d],!1!==c.enabled){c.render(this.renderer,this.writeBuffer,this.readBuffer,a,b);if(c.needsSwap){if(b){var e=
this.renderer.context;e.stencilFunc(e.NOTEQUAL,1,4294967295);this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,a);e.stencilFunc(e.EQUAL,1,4294967295)}this.swapBuffers()}void 0!==THREE.MaskPass&&(c instanceof THREE.MaskPass?b=!0:c instanceof THREE.ClearMaskPass&&(b=!1))}},reset:function(a){if(void 0===a){var b=this.renderer.getDrawingBufferSize();a=this.renderTarget1.clone();a.setSize(b.width,b.height)}this.renderTarget1.dispose();this.renderTarget2.dispose();this.renderTarget1=a;
this.renderTarget2=a.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2},setSize:function(a,b){this.renderTarget1.setSize(a,b);this.renderTarget2.setSize(a,b);for(var c=0;c<this.passes.length;c++)this.passes[c].setSize(a,b)}});THREE.Pass=function(){this.needsSwap=this.enabled=!0;this.renderToScreen=this.clear=!1};Object.assign(THREE.Pass.prototype,{setSize:function(a,b){},render:function(a,b,c,d,f){console.error("THREE.Pass: .render() must be implemented in derived pass.")}});