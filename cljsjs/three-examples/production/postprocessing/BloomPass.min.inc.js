THREE.BloomPass=function(a,d,c,b){THREE.Pass.call(this);a=void 0!==a?a:1;d=void 0!==d?d:25;c=void 0!==c?c:4;b=void 0!==b?b:256;var e={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};this.renderTargetX=new THREE.WebGLRenderTarget(b,b,e);this.renderTargetX.texture.name="BloomPass.x";this.renderTargetY=new THREE.WebGLRenderTarget(b,b,e);this.renderTargetY.texture.name="BloomPass.y";void 0===THREE.CopyShader&&console.error("THREE.BloomPass relies on THREE.CopyShader");
b=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(b.uniforms);this.copyUniforms.opacity.value=a;this.materialCopy=new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:b.vertexShader,fragmentShader:b.fragmentShader,blending:THREE.AdditiveBlending,transparent:!0});void 0===THREE.ConvolutionShader&&console.error("THREE.BloomPass relies on THREE.ConvolutionShader");a=THREE.ConvolutionShader;this.convolutionUniforms=THREE.UniformsUtils.clone(a.uniforms);this.convolutionUniforms.uImageIncrement.value=
THREE.BloomPass.blurX;this.convolutionUniforms.cKernel.value=THREE.ConvolutionShader.buildKernel(c);this.materialConvolution=new THREE.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:{KERNEL_SIZE_FLOAT:d.toFixed(1),KERNEL_SIZE_INT:d.toFixed(0)}});this.needsSwap=!1;this.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);this.scene=new THREE.Scene;this.quad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),null);this.quad.frustumCulled=
!1;this.scene.add(this.quad)};
THREE.BloomPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.BloomPass,render:function(a,d,c,b,e){e&&a.context.disable(a.context.STENCIL_TEST);this.quad.material=this.materialConvolution;this.convolutionUniforms.tDiffuse.value=c.texture;this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurX;a.render(this.scene,this.camera,this.renderTargetX,!0);this.convolutionUniforms.tDiffuse.value=this.renderTargetX.texture;this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurY;
a.render(this.scene,this.camera,this.renderTargetY,!0);this.quad.material=this.materialCopy;this.copyUniforms.tDiffuse.value=this.renderTargetY.texture;e&&a.context.enable(a.context.STENCIL_TEST);a.render(this.scene,this.camera,c,this.clear)}});THREE.BloomPass.blurX=new THREE.Vector2(.001953125,0);THREE.BloomPass.blurY=new THREE.Vector2(0,.001953125);