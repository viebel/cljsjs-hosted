THREE.SSAARenderPass=function(a,f,b,c){THREE.Pass.call(this);this.scene=a;this.camera=f;this.sampleLevel=4;this.unbiased=!0;this.clearColor=void 0!==b?b:0;this.clearAlpha=void 0!==c?c:0;void 0===THREE.CopyShader&&console.error("THREE.SSAARenderPass relies on THREE.CopyShader");a=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(a.uniforms);this.copyMaterial=new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,premultipliedAlpha:!0,
transparent:!0,blending:THREE.AdditiveBlending,depthTest:!1,depthWrite:!1});this.camera2=new THREE.OrthographicCamera(-1,1,1,-1,0,1);this.scene2=new THREE.Scene;this.quad2=new THREE.Mesh(new THREE.PlaneGeometry(2,2),this.copyMaterial);this.quad2.frustumCulled=!1;this.scene2.add(this.quad2)};
THREE.SSAARenderPass.prototype=Object.assign(Object.create(THREE.Pass.prototype),{constructor:THREE.SSAARenderPass,dispose:function(){this.sampleRenderTarget&&(this.sampleRenderTarget.dispose(),this.sampleRenderTarget=null)},setSize:function(a,f){this.sampleRenderTarget&&this.sampleRenderTarget.setSize(a,f)},render:function(a,f,b){this.sampleRenderTarget||(this.sampleRenderTarget=new THREE.WebGLRenderTarget(b.width,b.height,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),
this.sampleRenderTarget.texture.name="SSAARenderPass.sample");var c=THREE.SSAARenderPass.JitterVectors[Math.max(0,Math.min(this.sampleLevel,5))],h=a.autoClear;a.autoClear=!1;var k=a.getClearColor().getHex(),l=a.getClearAlpha(),m=1/c.length;this.copyUniforms.tDiffuse.value=this.sampleRenderTarget.texture;var g=b.width;b=b.height;for(var d=0;d<c.length;d++){var e=c[d];this.camera.setViewOffset&&this.camera.setViewOffset(g,b,.0625*e[0],.0625*e[1],g,b);e=m;this.unbiased&&(e+=.03125*(-.5+(d+.5)/c.length));
this.copyUniforms.opacity.value=e;a.setClearColor(this.clearColor,this.clearAlpha);a.render(this.scene,this.camera,this.sampleRenderTarget,!0);0===d&&a.setClearColor(0,0);a.render(this.scene2,this.camera2,this.renderToScreen?null:f,0===d)}this.camera.clearViewOffset&&this.camera.clearViewOffset();a.autoClear=h;a.setClearColor(k,l)}});
THREE.SSAARenderPass.JitterVectors=[[[0,0]],[[4,4],[-4,-4]],[[-2,-6],[6,-2],[-6,2],[2,6]],[[1,-3],[-1,3],[5,1],[-3,-5],[-5,5],[-7,-1],[3,7],[7,-7]],[[1,1],[-1,-3],[-3,2],[4,-1],[-5,-2],[2,5],[5,3],[3,-5],[-2,6],[0,-7],[-4,-6],[-6,4],[-8,0],[7,-4],[6,7],[-7,-8]],[[-4,-7],[-7,-5],[-3,-5],[-5,-4],[-1,-4],[-2,-2],[-6,-1],[-4,0],[-7,1],[-1,2],[-6,3],[-3,3],[-7,6],[-3,6],[-5,7],[-1,7],[5,-7],[1,-6],[6,-5],[4,-4],[2,-3],[7,-2],[1,-1],[4,-1],[2,1],[6,2],[0,4],[4,4],[2,5],[7,5],[5,6],[3,7]]];