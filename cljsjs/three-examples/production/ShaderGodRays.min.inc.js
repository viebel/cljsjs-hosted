THREE.ShaderGodRays={godrays_generate:{uniforms:{tInput:{value:null},fStepSize:{value:1},vSunPositionScreenSpace:{value:new THREE.Vector2(.5,.5)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv \x3d uv;\ngl_Position \x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#define TAPS_PER_PASS 6.0\nvarying vec2 vUv;\nuniform sampler2D tInput;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize;\nvoid main() {\nvec2 delta \x3d vSunPositionScreenSpace - vUv;\nfloat dist \x3d length( delta );\nvec2 stepv \x3d fStepSize * delta / dist;\nfloat iters \x3d dist/fStepSize;\nvec2 uv \x3d vUv.xy;\nfloat col \x3d 0.0;\nif ( 0.0 \x3c\x3d iters \x26\x26 uv.y \x3c 1.0 ) col +\x3d texture2D( tInput, uv ).r;\nuv +\x3d stepv;\nif ( 1.0 \x3c\x3d iters \x26\x26 uv.y \x3c 1.0 ) col +\x3d texture2D( tInput, uv ).r;\nuv +\x3d stepv;\nif ( 2.0 \x3c\x3d iters \x26\x26 uv.y \x3c 1.0 ) col +\x3d texture2D( tInput, uv ).r;\nuv +\x3d stepv;\nif ( 3.0 \x3c\x3d iters \x26\x26 uv.y \x3c 1.0 ) col +\x3d texture2D( tInput, uv ).r;\nuv +\x3d stepv;\nif ( 4.0 \x3c\x3d iters \x26\x26 uv.y \x3c 1.0 ) col +\x3d texture2D( tInput, uv ).r;\nuv +\x3d stepv;\nif ( 5.0 \x3c\x3d iters \x26\x26 uv.y \x3c 1.0 ) col +\x3d texture2D( tInput, uv ).r;\nuv +\x3d stepv;\ngl_FragColor \x3d vec4( col/TAPS_PER_PASS );\ngl_FragColor.a \x3d 1.0;\n}"},
godrays_combine:{uniforms:{tColors:{value:null},tGodRays:{value:null},fGodRayIntensity:{value:.69},vSunPositionScreenSpace:{value:new THREE.Vector2(.5,.5)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv \x3d uv;\ngl_Position \x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\nvoid main() {\ngl_FragColor \x3d texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\ngl_FragColor.a \x3d 1.0;\n}"},
godrays_fake_sun:{uniforms:{vSunPositionScreenSpace:{value:new THREE.Vector2(.5,.5)},fAspect:{value:1},sunColor:{value:new THREE.Color(16772608)},bgColor:{value:new THREE.Color(0)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv \x3d uv;\ngl_Position \x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\nuniform vec3 sunColor;\nuniform vec3 bgColor;\nvoid main() {\nvec2 diff \x3d vUv - vSunPositionScreenSpace;\ndiff.x *\x3d fAspect;\nfloat prop \x3d clamp( length( diff ) / 0.5, 0.0, 1.0 );\nprop \x3d 0.35 * pow( 1.0 - prop, 3.0 );\ngl_FragColor.xyz \x3d mix( sunColor, bgColor, 1.0 - prop );\ngl_FragColor.w \x3d 1.0;\n}"}};