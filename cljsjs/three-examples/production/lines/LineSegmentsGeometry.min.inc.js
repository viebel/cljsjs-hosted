THREE.LineSegmentsGeometry=function(){THREE.InstancedBufferGeometry.call(this);this.type="LineSegmentsGeometry";new THREE.BufferGeometry;this.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]);this.addAttribute("position",new THREE.Float32BufferAttribute([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3));this.addAttribute("uv",new THREE.Float32BufferAttribute([0,1,1,1,0,.5,1,.5,0,.5,1,.5,0,0,1,0],2))};
THREE.LineSegmentsGeometry.prototype=Object.assign(Object.create(THREE.InstancedBufferGeometry.prototype),{constructor:THREE.LineSegmentsGeometry,isLineSegmentsGeometry:!0,applyMatrix:function(a){var b=this.attributes.instanceStart,c=this.attributes.instanceEnd;void 0!==b&&(a.applyToBufferAttribute(b),a.applyToBufferAttribute(c),b.data.needsUpdate=!0);null!==this.boundingBox&&this.computeBoundingBox();null!==this.boundingSphere&&this.computeBoundingSphere();return this},setPositions:function(a){var b;
a instanceof Float32Array?b=a:Array.isArray(a)&&(b=new Float32Array(a));a=new THREE.InstancedInterleavedBuffer(b,6,1);this.addAttribute("instanceStart",new THREE.InterleavedBufferAttribute(a,3,0));this.addAttribute("instanceEnd",new THREE.InterleavedBufferAttribute(a,3,3));this.computeBoundingBox();this.computeBoundingSphere();return this},setColors:function(a){var b;a instanceof Float32Array?b=a:Array.isArray(a)&&(b=new Float32Array(a));a=new THREE.InstancedInterleavedBuffer(b,6,1);this.addAttribute("instanceColorStart",
new THREE.InterleavedBufferAttribute(a,3,0));this.addAttribute("instanceColorEnd",new THREE.InterleavedBufferAttribute(a,3,3));return this},fromWireframeGeometry:function(a){this.setPositions(a.attributes.position.array);return this},fromEdgesGeometry:function(a){this.setPositions(a.attributes.position.array);return this},fromMesh:function(a){this.fromWireframeGeometry(new THREE.WireframeGeometry(a.geometry));return this},fromLineSegements:function(a){a=a.geometry;a.isGeometry?this.setPositions(a.vertices):
a.isBufferGeometry&&this.setPositions(a.position.array);return this},computeBoundingBox:function(){var a=new THREE.Box3;return function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var b=this.attributes.instanceStart,c=this.attributes.instanceEnd;void 0!==b&&void 0!==c&&(this.boundingBox.setFromBufferAttribute(b),a.setFromBufferAttribute(c),this.boundingBox.union(a))}}(),computeBoundingSphere:function(){var a=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=
new THREE.Sphere);null===this.boundingBox&&this.computeBoundingBox();var b=this.attributes.instanceStart,c=this.attributes.instanceEnd;if(void 0!==b&&void 0!==c){var f=this.boundingSphere.center;this.boundingBox.getCenter(f);for(var d=0,e=0,g=b.count;e<g;e++)a.fromBufferAttribute(b,e),d=Math.max(d,f.distanceToSquared(a)),a.fromBufferAttribute(c,e),d=Math.max(d,f.distanceToSquared(a));this.boundingSphere.radius=Math.sqrt(d);isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",
this)}}}(),toJSON:function(){},clone:function(){},copy:function(a){return this}});