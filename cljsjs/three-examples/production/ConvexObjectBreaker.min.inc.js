THREE.ConvexObjectBreaker=function(b,e){this.minSizeForBreak=b||1.4;this.smallDelta=e||1E-4;this.tempLine1=new THREE.Line3;this.tempPlane1=new THREE.Plane;this.tempPlane2=new THREE.Plane;this.tempCM1=new THREE.Vector3;this.tempCM2=new THREE.Vector3;this.tempVector3=new THREE.Vector3;this.tempVector3_2=new THREE.Vector3;this.tempVector3_3=new THREE.Vector3;this.tempResultObjects={object1:null,object2:null};this.segments=[];for(var k=0;900>k;k++)this.segments[k]=!1};
THREE.ConvexObjectBreaker.prototype={constructor:THREE.ConvexObjectBreaker,prepareBreakableObject:function(b,e,k,f,m){for(var a=b.geometry.vertices,n=0,p=a.length;n<p;n++)a[n].mark=0;b=b.userData;b.mass=e;b.velocity=k.clone();b.angularVelocity=f.clone();b.breakable=m},subdivideByImpact:function(b,e,k,f,m,a){function n(a,l,m,g){if(Math.random()<.05*g||g>q)p.push(a);else{var h=Math.PI;0===g?(c.normal.copy(r.normal),c.constant=r.constant):g<=f?(h=(m-l)*(.2+.6*Math.random())+l,d.tempVector3_2.copy(b.position).sub(e).applyAxisAngle(k,
h).add(e),c.setFromCoplanarPoints(e,d.tempVector3,d.tempVector3_2)):(h=(.5*(g&1)+.2*(2-Math.random()))*Math.PI,d.tempVector3_2.copy(e).sub(a.position).applyAxisAngle(k,h).add(a.position),d.tempVector3_3.copy(k).add(a.position),c.setFromCoplanarPoints(a.position,d.tempVector3_3,d.tempVector3_2));d.cutByPlane(a,c,d.tempResultObjects);a=d.tempResultObjects.object1;var u=d.tempResultObjects.object2;a&&n(a,l,h,g+1);u&&n(u,h,m,g+1)}}var p=[],r=this.tempPlane1,c=this.tempPlane2;this.tempVector3.addVectors(e,
k);r.setFromCoplanarPoints(e,b.position,this.tempVector3);var q=m+f,d=this;n(b,0,2*Math.PI,0);return p},cutByPlane:function(b,e,k){for(var f=b.geometry,m=f.vertices,a=f.faces,n=m.length,f=[],p=[],r=this.smallDelta,c=0;c<n;c++)m[c].mark=0;for(var q=n*n,c=0;c<q;c++)this.segments[c]=!1;c=0;for(q=a.length-1;c<q;c++)for(var d=a[c],t=c+1,l=a.length;t<l;t++){var v=a[t];if(1-d.normal.dot(v.normal)<r){var g=d.a,h=d.b,u=d.c,w=v.a,x=v.b,v=v.c;if(g===w||g===x||g===v)h===w||h===x||h===v?(this.segments[g*n+h]=
!0,this.segments[h*n+g]=!0):(this.segments[u*n+g]=!0,this.segments[g*n+u]=!0);else if(h===w||h===x||h===v)this.segments[u*n+h]=!0,this.segments[h*n+u]=!0}}d=this.tempPlane1;b.updateMatrix();THREE.ConvexObjectBreaker.transformPlaneToLocalSpace(e,b.matrix,d);c=0;for(q=a.length;c<q;c++)for(e=a[c],t=0;3>t;t++)if(l=0===t?e.a:1===t?e.b:e.c,g=0===t?e.b:1===t?e.c:e.a,!this.segments[l*n+g]&&(this.segments[l*n+g]=!0,this.segments[g*n+l]=!0,l=m[l],g=m[g],0===l.mark&&(h=d.distanceToPoint(l),h>r?(l.mark=2,p.push(l)):
h<-r?(l.mark=1,f.push(l)):(l.mark=3,f.push(l),h=l.clone(),h.mark=3,p.push(h))),0===g.mark&&(h=d.distanceToPoint(g),h>r?(g.mark=2,p.push(g)):h<-r?(g.mark=1,f.push(g)):(g.mark=3,f.push(g),h=g.clone(),h.mark=3,p.push(h))),h=l.mark,u=g.mark,1===h&&2===u||2===h&&1===u)){this.tempLine1.start.copy(l);this.tempLine1.end.copy(g);l=d.intersectLine(this.tempLine1);if(void 0===l)return console.error("Internal error: segment does not intersect plane."),k.segmentedObject1=null,k.segmentedObject2=null,0;l.mark=
1;f.push(l);l=l.clone();l.mark=2;p.push(l)}m=.5*b.userData.mass;this.tempCM1.set(0,0,0);a=0;n=f.length;if(0<n){for(c=0;c<n;c++)this.tempCM1.add(f[c]);this.tempCM1.divideScalar(n);for(c=0;c<n;c++)d=f[c],d.sub(this.tempCM1),a=Math.max(a,d.x,d.y,d.z);this.tempCM1.add(b.position)}this.tempCM2.set(0,0,0);r=0;q=p.length;if(0<q){for(c=0;c<q;c++)this.tempCM2.add(p[c]);this.tempCM2.divideScalar(q);for(c=0;c<q;c++)d=p[c],d.sub(this.tempCM2),r=Math.max(r,d.x,d.y,d.z);this.tempCM2.add(b.position)}d=c=null;e=
0;4<n&&(c=new THREE.Mesh(new THREE.ConvexGeometry(f),b.material),c.position.copy(this.tempCM1),c.quaternion.copy(b.quaternion),this.prepareBreakableObject(c,m,b.userData.velocity,b.userData.angularVelocity,2*a>this.minSizeForBreak),e++);4<q&&(d=new THREE.Mesh(new THREE.ConvexGeometry(p),b.material),d.position.copy(this.tempCM2),d.quaternion.copy(b.quaternion),this.prepareBreakableObject(d,m,b.userData.velocity,b.userData.angularVelocity,2*r>this.minSizeForBreak),e++);k.object1=c;k.object2=d;return e}};
THREE.ConvexObjectBreaker.transformFreeVector=function(b,e){var k=b.x,f=b.y,m=b.z,a=e.elements;b.x=a[0]*k+a[4]*f+a[8]*m;b.y=a[1]*k+a[5]*f+a[9]*m;b.z=a[2]*k+a[6]*f+a[10]*m;return b};THREE.ConvexObjectBreaker.transformFreeVectorInverse=function(b,e){var k=b.x,f=b.y,m=b.z,a=e.elements;b.x=a[0]*k+a[1]*f+a[2]*m;b.y=a[4]*k+a[5]*f+a[6]*m;b.z=a[8]*k+a[9]*f+a[10]*m;return b};
THREE.ConvexObjectBreaker.transformTiedVectorInverse=function(b,e){var k=b.x,f=b.y,m=b.z,a=e.elements;b.x=a[0]*k+a[1]*f+a[2]*m-a[12];b.y=a[4]*k+a[5]*f+a[6]*m-a[13];b.z=a[8]*k+a[9]*f+a[10]*m-a[14];return b};
THREE.ConvexObjectBreaker.transformPlaneToLocalSpace=function(){var b=new THREE.Vector3;new THREE.Matrix3;return function(e,k,f){f.normal.copy(e.normal);f.constant=e.constant;e=THREE.ConvexObjectBreaker.transformTiedVectorInverse(e.coplanarPoint(b),k);THREE.ConvexObjectBreaker.transformFreeVectorInverse(f.normal,k);f.constant=-e.dot(f.normal)}}();