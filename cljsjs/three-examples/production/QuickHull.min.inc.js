(function(){function v(){this.tolerance=-1;this.faces=[];this.newFaces=[];this.assigned=new u;this.unassigned=new u;this.vertices=[]}function n(){this.normal=new THREE.Vector3;this.midpoint=new THREE.Vector3;this.constant=this.area=0;this.outside=null;this.mark=0;this.edge=null}function r(a,b){this.vertex=a;this.twin=this.next=this.prev=null;this.face=b}function w(a){this.point=a;this.face=this.next=this.prev=null}function u(){this.tail=this.head=null}Object.assign(v.prototype,{setFromPoints:function(a){!0!==
Array.isArray(a)&&console.error("THREE.QuickHull: Points parameter is not an array.");4>a.length&&console.error("THREE.QuickHull: The algorithm needs at least four points.");this.makeEmpty();for(var b=0,e=a.length;b<e;b++)this.vertices.push(new w(a[b]));this.compute();return this},setFromObject:function(a){var b=[];a.updateMatrixWorld(!0);a.traverse(function(a){var c,g,d;c=a.geometry;if(void 0!==c)if(c.isGeometry){var f=c.vertices;c=0;for(g=f.length;c<g;c++)d=f[c].clone(),d.applyMatrix4(a.matrixWorld),
b.push(d)}else if(c.isBufferGeometry&&(f=c.attributes.position,void 0!==f))for(c=0,g=f.count;c<g;c++)d=new THREE.Vector3,d.fromBufferAttribute(f,c).applyMatrix4(a.matrixWorld),b.push(d)});return this.setFromPoints(b)},makeEmpty:function(){this.faces=[];this.vertices=[];return this},addVertexToFace:function(a,b){a.face=b;null===b.outside?this.assigned.append(a):this.assigned.insertBefore(b.outside,a);b.outside=a;return this},removeVertexFromFace:function(a,b){a===b.outside&&(b.outside=null!==a.next&&
a.next.face===b?a.next:null);this.assigned.remove(a);return this},removeAllVerticesFromFace:function(a){if(null!==a.outside){for(var b=a.outside,e=a.outside;null!==e.next&&e.next.face===a;)e=e.next;this.assigned.removeSubList(b,e);b.prev=e.next=null;a.outside=null;return b}},deleteFaceVertices:function(a,b){var e=this.removeAllVerticesFromFace(a);if(void 0!==e)if(void 0===b)this.unassigned.appendChain(e);else{do{var c=e.next;b.distanceToPoint(e.point)>this.tolerance?this.addVertexToFace(e,b):this.unassigned.append(e);
e=c}while(null!==e)}return this},resolveUnassignedPoints:function(a){if(!1===this.unassigned.isEmpty()){var b=this.unassigned.first();do{for(var e=b.next,c=this.tolerance,g=null,d=0;d<a.length;d++){var f=a[d];if(0===f.mark){var k=f.distanceToPoint(b.point);k>c&&(c=k,g=f);if(c>1E3*this.tolerance)break}}null!==g&&this.addVertexToFace(b,g);b=e}while(null!==b)}return this},computeExtremes:function(){var a=new THREE.Vector3,b=new THREE.Vector3,e=[],c=[],g,d,f;for(g=0;3>g;g++)e[g]=c[g]=this.vertices[0];
a.copy(this.vertices[0].point);b.copy(this.vertices[0].point);g=0;for(d=this.vertices.length;g<d;g++){var k=this.vertices[g],l=k.point;for(f=0;3>f;f++)l.getComponent(f)<a.getComponent(f)&&(a.setComponent(f,l.getComponent(f)),e[f]=k);for(f=0;3>f;f++)l.getComponent(f)>b.getComponent(f)&&(b.setComponent(f,l.getComponent(f)),c[f]=k)}this.tolerance=3*Number.EPSILON*(Math.max(Math.abs(a.x),Math.abs(b.x))+Math.max(Math.abs(a.y),Math.abs(b.y))+Math.max(Math.abs(a.z),Math.abs(b.z)));return{min:e,max:c}},computeInitialHull:function(){var a,
b,e;return function(){void 0===a&&(a=new THREE.Line3,b=new THREE.Plane,e=new THREE.Vector3);for(var c,g=this.vertices,d=this.computeExtremes(),f=d.min,k=d.max,l,q,t,m,h,p=0,d=m=0;3>d;d++)h=k[d].point.getComponent(d)-f[d].point.getComponent(d),h>p&&(p=h,m=d);f=f[m];k=k[m];p=0;a.set(f.point,k.point);d=0;for(t=this.vertices.length;d<t;d++)c=g[d],c!==f&&c!==k&&(a.closestPointToPoint(c.point,!0,e),h=e.distanceToSquared(c.point),h>p&&(p=h,l=c));p=-1;b.setFromCoplanarPoints(f.point,k.point,l.point);d=0;
for(t=this.vertices.length;d<t;d++)c=g[d],c!==f&&c!==k&&c!==l&&(h=Math.abs(b.distanceToPoint(c.point)),h>p&&(p=h,q=c));h=[];if(0>b.distanceToPoint(q.point))for(h.push(n.create(f,k,l),n.create(q,k,f),n.create(q,l,k),n.create(q,f,l)),d=0;3>d;d++)m=(d+1)%3,h[d+1].getEdge(2).setTwin(h[0].getEdge(m)),h[d+1].getEdge(1).setTwin(h[m+1].getEdge(0));else for(h.push(n.create(f,l,k),n.create(q,f,k),n.create(q,k,l),n.create(q,l,f)),d=0;3>d;d++)m=(d+1)%3,h[d+1].getEdge(2).setTwin(h[0].getEdge((3-d)%3)),h[d+1].getEdge(0).setTwin(h[m+
1].getEdge(1));for(d=0;4>d;d++)this.faces.push(h[d]);d=0;for(t=g.length;d<t;d++)if(c=g[d],c!==f&&c!==k&&c!==l&&c!==q){var p=this.tolerance,r=null;for(m=0;4>m;m++)h=this.faces[m].distanceToPoint(c.point),h>p&&(p=h,r=this.faces[m]);null!==r&&this.addVertexToFace(c,r)}return this}}(),reindexFaces:function(){for(var a=[],b=0;b<this.faces.length;b++){var e=this.faces[b];0===e.mark&&a.push(e)}this.faces=a;return this},nextVertexToAdd:function(){if(!1===this.assigned.isEmpty()){var a,b=0,e=this.assigned.first().face,
c=e.outside;do{var g=e.distanceToPoint(c.point);g>b&&(b=g,a=c);c=c.next}while(null!==c&&c.face===e);return a}},computeHorizon:function(a,b,e,c){this.deleteFaceVertices(e);e.mark=1;e=null===b?b=e.getEdge(0):b.next;do{var g=e.twin,d=g.face;0===d.mark&&(d.distanceToPoint(a)>this.tolerance?this.computeHorizon(a,g,d,c):c.push(e));e=e.next}while(e!==b);return this},addAdjoiningFace:function(a,b){var e=n.create(a,b.tail(),b.head());this.faces.push(e);e.getEdge(-1).setTwin(b.twin);return e.getEdge(0)},addNewFaces:function(a,
b){this.newFaces=[];for(var e=null,c=null,g=0;g<b.length;g++){var d=this.addAdjoiningFace(a,b[g]);null===e?e=d:d.next.setTwin(c);this.newFaces.push(d.face);c=d}e.next.setTwin(c);return this},addVertexToHull:function(a){var b=[];this.unassigned.clear();this.removeVertexFromFace(a,a.face);this.computeHorizon(a.point,null,a.face,b);this.addNewFaces(a,b);this.resolveUnassignedPoints(this.newFaces);return this},cleanup:function(){this.assigned.clear();this.unassigned.clear();this.newFaces=[];return this},
compute:function(){var a;for(this.computeInitialHull();void 0!==(a=this.nextVertexToAdd());)this.addVertexToHull(a);this.reindexFaces();this.cleanup();return this}});Object.assign(n,{create:function(a,b,e){var c=new n;a=new r(a,c);b=new r(b,c);e=new r(e,c);a.next=e.prev=b;b.next=a.prev=e;e.next=b.prev=a;c.edge=a;return c.compute()}});Object.assign(n.prototype,{getEdge:function(a){for(var b=this.edge;0<a;)b=b.next,a--;for(;0>a;)b=b.prev,a++;return b},compute:function(){var a;return function(){void 0===
a&&(a=new THREE.Triangle);var b=this.edge.tail(),e=this.edge.head(),c=this.edge.next.head();a.set(b.point,e.point,c.point);a.getNormal(this.normal);a.getMidpoint(this.midpoint);this.area=a.getArea();this.constant=this.normal.dot(this.midpoint);return this}}(),distanceToPoint:function(a){return this.normal.dot(a)-this.constant}});Object.assign(r.prototype,{head:function(){return this.vertex},tail:function(){return this.prev?this.prev.vertex:null},length:function(){var a=this.head(),b=this.tail();return null!==
b?b.point.distanceTo(a.point):-1},lengthSquared:function(){var a=this.head(),b=this.tail();return null!==b?b.point.distanceToSquared(a.point):-1},setTwin:function(a){this.twin=a;a.twin=this;return this}});Object.assign(u.prototype,{first:function(){return this.head},last:function(){return this.tail},clear:function(){this.head=this.tail=null;return this},insertBefore:function(a,b){b.prev=a.prev;b.next=a;null===b.prev?this.head=b:b.prev.next=b;a.prev=b;return this},insertAfter:function(a,b){b.prev=
a;b.next=a.next;null===b.next?this.tail=b:b.next.prev=b;a.next=b;return this},append:function(a){null===this.head?this.head=a:this.tail.next=a;a.prev=this.tail;a.next=null;this.tail=a;return this},appendChain:function(a){null===this.head?this.head=a:this.tail.next=a;for(a.prev=this.tail;null!==a.next;)a=a.next;this.tail=a;return this},remove:function(a){null===a.prev?this.head=a.next:a.prev.next=a.next;null===a.next?this.tail=a.prev:a.next.prev=a.prev;return this},removeSubList:function(a,b){null===
a.prev?this.head=b.next:a.prev.next=b.next;null===b.next?this.tail=a.prev:b.next.prev=a.prev;return this},isEmpty:function(){return null===this.head}});THREE.QuickHull=v})();