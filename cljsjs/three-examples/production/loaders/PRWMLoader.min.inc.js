(function(k){function n(){if(null===m){var b=new ArrayBuffer(2),a=new Uint8Array(b),b=new Uint16Array(b);a[0]=170;a[1]=187;m=43707===b[0]}return m}function v(b,a,d,c,e){var f=a.BYTES_PER_ELEMENT;if(e===n()||1===f)a=new a(b,d,c);else{b=new DataView(b,d,c*f);d=w[a.name];e=!e;var h=0;for(a=new a(c);h<c;h++)a[h]=b[d](h*f,e)}return a}var m=null,x=[null,Float32Array,null,Int8Array,Int16Array,null,Int32Array,Uint8Array,Uint16Array,null,Uint32Array],w={Uint16Array:"getUint16",Uint32Array:"getUint32",Int16Array:"getInt16",
Int32Array:"getInt32",Float32Array:"getFloat32",Float64Array:"getFloat64"};k.PRWMLoader=function(b){this.manager=void 0!==b?b:k.DefaultLoadingManager};k.PRWMLoader.prototype={constructor:k.PRWMLoader,load:function(b,a,d,c){var e=this,f=new k.FileLoader(e.manager);f.setResponseType("arraybuffer");b=b.replace(/\*/g,n()?"be":"le");f.load(b,function(b){a(e.parse(b))},d,c)},parse:function(b){console.time("PRWMLoader");var a=new Uint8Array(b),d=a[0],c=a[1],e=!!(c>>7&1),f=c>>6&1,h=1===(c>>5&1),n=c&31,q=
0,l=0;h?(q=(a[2]<<16)+(a[3]<<8)+a[4],l=(a[5]<<16)+(a[6]<<8)+a[7]):(q=a[2]+(a[3]<<8)+(a[4]<<16),l=a[5]+(a[6]<<8)+(a[7]<<16));if(0===d)throw Error("PRWM decoder: Invalid format version: 0");if(1!==d)throw Error("PRWM decoder: Unsupported format version: "+d);if(!e){if(0!==f)throw Error("PRWM decoder: Indices type must be set to 0 for non-indexed geometries");if(0!==l)throw Error("PRWM decoder: Number of indices must be set to 0 for non-indexed geometries");}var g=8,d={},r,p,t,m,u;for(u=0;u<n;u++){for(r=
"";g<a.length&&(p=a[g],g++,0!==p);)r+=String.fromCharCode(p);c=a[g];p=c>>7&1;t=(c>>4&3)+1;c&=15;c=x[c];g++;g=4*Math.ceil(g/4);m=v(b,c,g,t*q,h);g+=c.BYTES_PER_ELEMENT*t*q;d[r]={type:p,cardinality:t,values:m}}g=4*Math.ceil(g/4);a=null;e&&(a=v(b,1===f?Uint32Array:Uint16Array,g,l,h));b=a;e=Object.keys(d);f=new k.BufferGeometry;for(l=0;l<e.length;l++)h=d[e[l]],f.addAttribute(e[l],new k.BufferAttribute(h.values,h.cardinality,h.normalized));null!==b&&f.setIndex(new k.BufferAttribute(b,1));console.timeEnd("PRWMLoader");
return f}};k.PRWMLoader.isBigEndianPlatform=function(){return n()}})(THREE);