THREE.MTLLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager};
THREE.MTLLoader.prototype={constructor:THREE.MTLLoader,load:function(a,g,e,f){var d=this,b=new THREE.FileLoader(this.manager);b.setPath(this.path);b.load(a,function(a){g(d.parse(a))},e,f)},setPath:function(a){this.path=a},setTexturePath:function(a){this.texturePath=a},setBaseUrl:function(a){console.warn("THREE.MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead.");this.setTexturePath(a)},setCrossOrigin:function(a){this.crossOrigin=
a},setMaterialOptions:function(a){this.materialOptions=a},parse:function(a){var g=a.split("\n"),e={},f=/\s+/;a={};for(var d=0;d<g.length;d++){var b=g[d],b=b.trim();if(0!==b.length&&"#"!==b.charAt(0)){var h=b.indexOf(" "),c=0<=h?b.substring(0,h):b,c=c.toLowerCase(),b=0<=h?b.substring(h+1):"",b=b.trim();"newmtl"===c?(e={name:b},a[b]=e):e&&("ka"===c||"kd"===c||"ks"===c?(b=b.split(f,3),e[c]=[parseFloat(b[0]),parseFloat(b[1]),parseFloat(b[2])]):e[c]=b)}}g=new THREE.MTLLoader.MaterialCreator(this.texturePath||
this.path,this.materialOptions);g.setCrossOrigin(this.crossOrigin);g.setManager(this.manager);g.setMaterials(a);return g}};THREE.MTLLoader.MaterialCreator=function(a,g){this.baseUrl=a||"";this.options=g;this.materialsInfo={};this.materials={};this.materialsArray=[];this.nameLookup={};this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide;this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping};
THREE.MTLLoader.MaterialCreator.prototype={constructor:THREE.MTLLoader.MaterialCreator,crossOrigin:"Anonymous",setCrossOrigin:function(a){this.crossOrigin=a},setManager:function(a){this.manager=a},setMaterials:function(a){this.materialsInfo=this.convert(a);this.materials={};this.materialsArray=[];this.nameLookup={}},convert:function(a){if(!this.options)return a;var g={},e;for(e in a){var f=a[e],d={};g[e]=d;for(var b in f){var h=!0,c=f[b],k=b.toLowerCase();switch(k){case "kd":case "ka":case "ks":this.options&&
this.options.normalizeRGB&&(c=[c[0]/255,c[1]/255,c[2]/255]),this.options&&this.options.ignoreZeroRGBs&&0===c[0]&&0===c[1]&&0===c[2]&&(h=!1)}h&&(d[k]=c)}}return g},preload:function(){for(var a in this.materialsInfo)this.create(a)},getIndex:function(a){return this.nameLookup[a]},getAsArray:function(){var a=0,g;for(g in this.materialsInfo)this.materialsArray[a]=this.create(g),this.nameLookup[g]=a,a++;return this.materialsArray},create:function(a){void 0===this.materials[a]&&this.createMaterial_(a);return this.materials[a]},
createMaterial_:function(a){function g(a,b){return"string"!==typeof b||""===b?"":/^https?:\/\//i.test(b)?b:a+b}function e(a,c){if(!b[a]){var d=f.getTextureParams(c,b),e=f.loadTexture(g(f.baseUrl,d.url));e.repeat.copy(d.scale);e.offset.copy(d.offset);e.wrapS=f.wrap;e.wrapT=f.wrap;b[a]=e}}var f=this,d=this.materialsInfo[a],b={name:a,side:this.side},h;for(h in d){var c=d[h];if(""!==c)switch(h.toLowerCase()){case "kd":b.color=(new THREE.Color).fromArray(c);break;case "ks":b.specular=(new THREE.Color).fromArray(c);
break;case "map_kd":e("map",c);break;case "map_ks":e("specularMap",c);break;case "norm":e("normalMap",c);break;case "map_bump":case "bump":e("bumpMap",c);break;case "ns":b.shininess=parseFloat(c);break;case "d":c=parseFloat(c);1>c&&(b.opacity=c,b.transparent=!0);break;case "tr":c=parseFloat(c),this.options&&this.options.invertTrProperty&&(c=1-c),1>c&&(b.opacity=c,b.transparent=!0)}}this.materials[a]=new THREE.MeshPhongMaterial(b);return this.materials[a]},getTextureParams:function(a,g){var e={scale:new THREE.Vector2(1,
1),offset:new THREE.Vector2(0,0)},f=a.split(/\s+/),d;d=f.indexOf("-bm");0<=d&&(g.bumpScale=parseFloat(f[d+1]),f.splice(d,2));d=f.indexOf("-s");0<=d&&(e.scale.set(parseFloat(f[d+1]),parseFloat(f[d+2])),f.splice(d,4));d=f.indexOf("-o");0<=d&&(e.offset.set(parseFloat(f[d+1]),parseFloat(f[d+2])),f.splice(d,4));e.url=f.join(" ").trim();return e},loadTexture:function(a,g,e,f,d){var b=THREE.Loader.Handlers.get(a),h=void 0!==this.manager?this.manager:THREE.DefaultLoadingManager;null===b&&(b=new THREE.TextureLoader(h));
b.setCrossOrigin&&b.setCrossOrigin(this.crossOrigin);a=b.load(a,e,f,d);void 0!==g&&(a.mapping=g);return a}};