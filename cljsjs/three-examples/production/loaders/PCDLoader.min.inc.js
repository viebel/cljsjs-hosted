THREE.PCDLoader=function(l){this.manager=void 0!==l?l:THREE.DefaultLoadingManager;this.littleEndian=!0};
THREE.PCDLoader.prototype={constructor:THREE.PCDLoader,load:function(l,n,h,d){var c=this,k=new THREE.FileLoader(c.manager);k.setResponseType("arraybuffer");k.load(l,function(d){n(c.parse(d,l))},h,d)},parse:function(l,n){var h=THREE.LoaderUtils.decodeText(l),d=function(b){var a={},c=b.search(/[\r\n]DATA\s(\S*)\s/i),d=/[\r\n]DATA\s(\S*)\s/i.exec(b.substr(c-1));a.data=d[1];a.headerLen=d[0].length+c;a.str=b.substr(0,a.headerLen);a.str=a.str.replace(/\#.*/gi,"");a.version=/VERSION (.*)/i.exec(a.str);a.fields=
/FIELDS (.*)/i.exec(a.str);a.size=/SIZE (.*)/i.exec(a.str);a.type=/TYPE (.*)/i.exec(a.str);a.count=/COUNT (.*)/i.exec(a.str);a.width=/WIDTH (.*)/i.exec(a.str);a.height=/HEIGHT (.*)/i.exec(a.str);a.viewpoint=/VIEWPOINT (.*)/i.exec(a.str);a.points=/POINTS (.*)/i.exec(a.str);null!==a.version&&(a.version=parseFloat(a.version[1]));null!==a.fields&&(a.fields=a.fields[1].split(" "));null!==a.type&&(a.type=a.type[1].split(" "));null!==a.width&&(a.width=parseInt(a.width[1]));null!==a.height&&(a.height=parseInt(a.height[1]));
null!==a.viewpoint&&(a.viewpoint=a.viewpoint[1]);null!==a.points&&(a.points=parseInt(a.points[1],10));null===a.points&&(a.points=a.width*a.height);null!==a.size&&(a.size=a.size[1].split(" ").map(function(a){return parseInt(a,10)}));if(null!==a.count)a.count=a.count[1].split(" ").map(function(a){return parseInt(a,10)});else for(a.count=[],b=0,c=a.fields.length;b<c;b++)a.count.push(1);a.offset={};b=d=0;for(c=a.fields.length;b<c;b++)"ascii"===a.data?a.offset[a.fields[b]]=b:(a.offset[a.fields[b]]=d,d+=
a.size[b]);a.rowSize=d;return a}(h),c=[],k=[],g=[];if("ascii"===d.data)for(var b=d.offset,f=h.substr(d.headerLen).split("\n"),h=0,p=f.length;h<p;h++){var m=f[h].split(" ");void 0!==b.x&&(c.push(parseFloat(m[b.x])),c.push(parseFloat(m[b.y])),c.push(parseFloat(m[b.z])));if(void 0!==b.rgb){var e=new Float32Array([parseFloat(m[b.rgb])]),e=new DataView(e.buffer,0);g.push(e.getUint8(0)/255);g.push(e.getUint8(1)/255);g.push(e.getUint8(2)/255)}void 0!==b.normal_x&&(k.push(parseFloat(m[b.normal_x])),k.push(parseFloat(m[b.normal_y])),
k.push(parseFloat(m[b.normal_z])))}if("binary_compressed"===d.data)console.error("THREE.PCDLoader: binary_compressed files are not supported");else{if("binary"===d.data)for(e=new DataView(l,d.headerLen),b=d.offset,f=h=0;h<d.points;h++,f+=d.rowSize)void 0!==b.x&&(c.push(e.getFloat32(f+b.x,this.littleEndian)),c.push(e.getFloat32(f+b.y,this.littleEndian)),c.push(e.getFloat32(f+b.z,this.littleEndian))),void 0!==b.rgb&&(g.push(e.getUint8(f+b.rgb+0)/255),g.push(e.getUint8(f+b.rgb+1)/255),g.push(e.getUint8(f+
b.rgb+2)/255)),void 0!==b.normal_x&&(k.push(e.getFloat32(f+b.normal_x,this.littleEndian)),k.push(e.getFloat32(f+b.normal_y,this.littleEndian)),k.push(e.getFloat32(f+b.normal_z,this.littleEndian)));d=new THREE.BufferGeometry;0<c.length&&d.addAttribute("position",new THREE.Float32BufferAttribute(c,3));0<k.length&&d.addAttribute("normal",new THREE.Float32BufferAttribute(k,3));0<g.length&&d.addAttribute("color",new THREE.Float32BufferAttribute(g,3));d.computeBoundingSphere();c=new THREE.PointsMaterial({size:.005});
0<g.length?c.vertexColors=!0:c.color.setHex(16777215*Math.random());g=new THREE.Points(d,c);c=n.split("").reverse().join("");c=/([^\/]*)/.exec(c);c=c[1].split("").reverse().join("");g.name=c;return g}}};