void 0===THREE.OBJLoader2&&(THREE.OBJLoader2={});void 0===THREE.LoaderSupport&&console.error('"THREE.LoaderSupport" is not available. "THREE.OBJLoader2" requires it. Please include "LoaderSupport.js" in your HTML.');
THREE.OBJLoader2=function(){function k(a){console.info("Using THREE.OBJLoader2 version: 2.4.0");this.manager=g.verifyInput(a,THREE.DefaultLoadingManager);this.logging={enabled:!0,debug:!1};this.modelName="";this.instanceNo=0;this.path="";this.materialPerSmoothingGroup=this.disregardNormals=this.useIndices=!1;this.loaderRootNode=new THREE.Group;this.meshBuilder=new THREE.LoaderSupport.MeshBuilder;this.callbacks=new THREE.LoaderSupport.Callbacks;this.workerSupport=new THREE.LoaderSupport.WorkerSupport;
this.terminateWorkerOnLoad=!0}var g=THREE.LoaderSupport.Validator;k.prototype.setLogging=function(a,b){this.logging.enabled=!0===a;this.logging.debug=!0===b;this.meshBuilder.setLogging(this.logging.enabled,this.logging.debug)};k.prototype.setModelName=function(a){this.modelName=g.verifyInput(a,this.modelName)};k.prototype.setPath=function(a){this.path=g.verifyInput(a,this.path)};k.prototype.setStreamMeshesTo=function(a){this.loaderRootNode=g.verifyInput(a,this.loaderRootNode)};k.prototype.setMaterials=
function(a){this.meshBuilder.setMaterials(a)};k.prototype.setUseIndices=function(a){this.useIndices=!0===a};k.prototype.setDisregardNormals=function(a){this.disregardNormals=!0===a};k.prototype.setMaterialPerSmoothingGroup=function(a){this.materialPerSmoothingGroup=!0===a};k.prototype._setCallbacks=function(a){g.isValid(a.onProgress)&&this.callbacks.setCallbackOnProgress(a.onProgress);g.isValid(a.onMeshAlter)&&this.callbacks.setCallbackOnMeshAlter(a.onMeshAlter);g.isValid(a.onLoad)&&this.callbacks.setCallbackOnLoad(a.onLoad);
g.isValid(a.onLoadMaterials)&&this.callbacks.setCallbackOnLoadMaterials(a.onLoadMaterials);this.meshBuilder._setCallbacks(this.callbacks)};k.prototype.onProgress=function(a,b,h){b=g.isValid(b)?b:"";a={detail:{type:a,modelName:this.modelName,instanceNo:this.instanceNo,text:b,numericalValue:h}};if(g.isValid(this.callbacks.onProgress))this.callbacks.onProgress(a);this.logging.enabled&&this.logging.debug&&console.debug(b)};k.prototype._onError=function(a){var b="Error occurred while downloading!";a.currentTarget&&
null!==a.currentTarget.statusText&&(b+="\nurl: "+a.currentTarget.responseURL+"\nstatus: "+a.currentTarget.statusText);this.onProgress("error",b,-1);throw b;};k.prototype.load=function(a,b,h,c,f,d){a=new THREE.LoaderSupport.ResourceDescriptor(a,"OBJ");this._loadObj(a,b,h,c,f,d)};k.prototype._loadObj=function(a,b,h,c,f,d){g.isValid(c)||(c=this._onError);g.isValid(a)||c("An invalid ResourceDescriptor was provided. Unable to continue!");var l=this,p=function(c){a.content=c;if(d)l.parseAsync(c,b);else{var h=
new THREE.LoaderSupport.Callbacks;h.setCallbackOnMeshAlter(f);l._setCallbacks(h);b({detail:{loaderRootNode:l.parse(c),modelName:l.modelName,instanceNo:l.instanceNo}})}};if(!g.isValid(a.url)||g.isValid(a.content))p(g.isValid(a.content)?a.content:null);else{if(!g.isValid(h)){var m=0,e=0;h=function(b){b.lengthComputable&&(e=b.loaded/b.total,e>m&&(m=e,b='Download of "'+a.url+'": '+(100*e).toFixed(2)+"%",l.onProgress("progressLoad",b,e)))}}var r=new THREE.FileLoader(this.manager);r.setPath(this.path);
r.setResponseType("arraybuffer");r.load(a.url,p,h,c)}};k.prototype.run=function(a,b){this._applyPrepData(a);var h=a.checkResourceDescriptorFiles(a.resources,[{ext:"obj",type:"ArrayBuffer",ignore:!1},{ext:"mtl",type:"String",ignore:!1},{ext:"zip",type:"String",ignore:!0}]);g.isValid(b)&&(this.terminateWorkerOnLoad=!1,this.workerSupport=b,this.logging.enabled=this.workerSupport.logging.enabled,this.logging.debug=this.workerSupport.logging.debug);var c=this;this._loadMtl(h.mtl,function(b){null!==b&&
c.meshBuilder.setMaterials(b);c._loadObj(h.obj,c.callbacks.onLoad,null,null,c.callbacks.onMeshAlter,a.useAsync)},a.crossOrigin,a.materialOptions)};k.prototype._applyPrepData=function(a){g.isValid(a)&&(this.setLogging(a.logging.enabled,a.logging.debug),this.setModelName(a.modelName),this.setStreamMeshesTo(a.streamMeshesTo),this.meshBuilder.setMaterials(a.materials),this.setUseIndices(a.useIndices),this.setDisregardNormals(a.disregardNormals),this.setMaterialPerSmoothingGroup(a.materialPerSmoothingGroup),
this._setCallbacks(a.getCallbacks()))};k.prototype.parse=function(a){if(!g.isValid(a))return console.warn("Provided content is not a valid ArrayBuffer or String."),this.loaderRootNode;this.logging.enabled&&console.time("OBJLoader2 parse: "+this.modelName);this.meshBuilder.init();var b=new w;b.setLogging(this.logging.enabled,this.logging.debug);b.setMaterialPerSmoothingGroup(this.materialPerSmoothingGroup);b.setUseIndices(this.useIndices);b.setDisregardNormals(this.disregardNormals);b.setMaterials(this.meshBuilder.getMaterials());
var h=this;b.setCallbackMeshBuilder(function(b){b=h.meshBuilder.processPayload(b);var a,d;for(d in b)a=b[d],h.loaderRootNode.add(a)});b.setCallbackProgress(function(b,a){h.onProgress("progressParse",b,a)});if(a instanceof ArrayBuffer||a instanceof Uint8Array)this.logging.enabled&&console.info("Parsing arrayBuffer..."),b.parse(a);else if("string"===typeof a||a instanceof String)this.logging.enabled&&console.info("Parsing text..."),b.parseText(a);else throw"Provided content was neither of type String nor Uint8Array! Aborting...";
this.logging.enabled&&console.timeEnd("OBJLoader2 parse: "+this.modelName);return this.loaderRootNode};k.prototype.parseAsync=function(a,b){var h=this,c=!1,f=function(){b({detail:{loaderRootNode:h.loaderRootNode,modelName:h.modelName,instanceNo:h.instanceNo}});c&&h.logging.enabled&&console.timeEnd("OBJLoader2 parseAsync: "+h.modelName)};g.isValid(a)?c=!0:(console.warn("Provided content is not a valid ArrayBuffer."),f());c&&this.logging.enabled&&console.time("OBJLoader2 parseAsync: "+this.modelName);
this.meshBuilder.init();this.workerSupport.validate(function(b,a){var c;c="/**\n  * This code was constructed by OBJLoader2 buildCode.\n";c+="  */\n\n";c+="THREE \x3d { LoaderSupport: {} };\n\n";c+=b("THREE.LoaderSupport.Validator",g);return c+=a("Parser",w)},"Parser");this.workerSupport.setCallbacks(function(b){b=h.meshBuilder.processPayload(b);var a,c;for(c in b)a=b[c],h.loaderRootNode.add(a)},f);h.terminateWorkerOnLoad&&this.workerSupport.setTerminateRequested(!0);var f={},d=this.meshBuilder.getMaterials(),
l;for(l in d)f[l]=l;this.workerSupport.run({params:{useAsync:!0,materialPerSmoothingGroup:this.materialPerSmoothingGroup,useIndices:this.useIndices,disregardNormals:this.disregardNormals},logging:{enabled:this.logging.enabled,debug:this.logging.debug},materials:{materials:f},data:{input:a,options:null}})};var w=function(){function a(){this.contentRef=this.callbackMeshBuilder=this.callbackProgress=null;this.legacyMode=!1;this.materials={};this.disregardNormals=this.useIndices=this.materialPerSmoothingGroup=
this.useAsync=!1;this.vertices=[];this.colors=[];this.normals=[];this.uvs=[];this.rawMesh={objectName:"",groupName:"",activeMtlName:"",mtllibName:"",faceType:-1,subGroups:[],subGroupInUse:null,smoothingGroup:{splitMaterials:!1,normalized:-1,real:-1},counts:{doubleIndicesCount:0,faceCount:0,mtlCount:0,smoothingGroupCount:0}};this.outputObjectCount=this.inputObjectCount=1;this.globalCounts={vertices:0,faces:0,doubleIndicesCount:0,lineByte:0,currentByte:0,totalBytes:0};this.logging={enabled:!0,debug:!1}}
a.prototype.resetRawMesh=function(){this.rawMesh.subGroups=[];this.rawMesh.subGroupInUse=null;this.rawMesh.smoothingGroup.normalized=-1;this.rawMesh.smoothingGroup.real=-1;this.pushSmoothingGroup(1);this.rawMesh.counts.doubleIndicesCount=0;this.rawMesh.counts.faceCount=0;this.rawMesh.counts.mtlCount=0;this.rawMesh.counts.smoothingGroupCount=0};a.prototype.setUseAsync=function(b){this.useAsync=b};a.prototype.setMaterialPerSmoothingGroup=function(b){this.materialPerSmoothingGroup=b};a.prototype.setUseIndices=
function(b){this.useIndices=b};a.prototype.setDisregardNormals=function(b){this.disregardNormals=b};a.prototype.setMaterials=function(b){this.materials=THREE.LoaderSupport.Validator.verifyInput(b,this.materials);this.materials=THREE.LoaderSupport.Validator.verifyInput(this.materials,{})};a.prototype.setCallbackMeshBuilder=function(b){if(!THREE.LoaderSupport.Validator.isValid(b))throw'Unable to run as no "MeshBuilder" callback is set.';this.callbackMeshBuilder=b};a.prototype.setCallbackProgress=function(b){this.callbackProgress=
b};a.prototype.setLogging=function(b,a){this.logging.enabled=!0===b;this.logging.debug=!0===a};a.prototype.configure=function(){this.pushSmoothingGroup(1);if(this.logging.enabled){var b=Object.keys(this.materials),b="OBJLoader2.Parser configuration:"+(0<b.length?"\n\tmaterialNames:\n\t\t- "+b.join("\n\t\t- "):"\n\tmaterialNames: None")+"\n\tuseAsync: "+this.useAsync+"\n\tmaterialPerSmoothingGroup: "+this.materialPerSmoothingGroup+"\n\tuseIndices: "+this.useIndices+"\n\tdisregardNormals: "+this.disregardNormals+
"\n\tcallbackMeshBuilderName: "+this.callbackMeshBuilder.name+"\n\tcallbackProgressName: "+this.callbackProgress.name;console.info(b)}};a.prototype.parse=function(b){this.logging.enabled&&console.time("OBJLoader2.Parser.parse");this.configure();this.contentRef=b=new Uint8Array(b);var a=b.byteLength;this.globalCounts.totalBytes=a;for(var c=Array(128),f,d="",l=0,p=0,m=0;m<a;m++)switch(f=b[m],f){case 32:0<d.length&&(c[l++]=d);d="";break;case 47:0<d.length&&(c[l++]=d);p++;d="";break;case 10:0<d.length&&
(c[l++]=d);d="";this.globalCounts.lineByte=this.globalCounts.currentByte;this.globalCounts.currentByte=m;this.processLine(c,l,p);p=l=0;break;case 13:break;default:d+=String.fromCharCode(f)}this.finalizeParsing();this.logging.enabled&&console.timeEnd("OBJLoader2.Parser.parse")};a.prototype.parseText=function(b){this.logging.enabled&&console.time("OBJLoader2.Parser.parseText");this.configure();this.legacyMode=!0;this.contentRef=b;var a=b.length;this.globalCounts.totalBytes=a;for(var c=Array(128),f,
d="",l=0,p=0,m=0;m<a;m++)switch(f=b[m],f){case " ":0<d.length&&(c[l++]=d);d="";break;case "/":0<d.length&&(c[l++]=d);p++;d="";break;case "\n":0<d.length&&(c[l++]=d);d="";this.globalCounts.lineByte=this.globalCounts.currentByte;this.globalCounts.currentByte=m;this.processLine(c,l,p);p=l=0;break;case "\r":break;default:d+=f}this.finalizeParsing();this.logging.enabled&&console.timeEnd("OBJLoader2.Parser.parseText")};a.prototype.processLine=function(b,a,c){if(!(1>a)){var f=function(b,a,c,d){var h="";
if(d>c){if(a)for(a=c;a<d;a++)h+=b[a];else for(a=c;a<d;a++)h+=String.fromCharCode(b[a]);h=h.trim()}return h},d;d=b[0];switch(d){case "v":this.vertices.push(parseFloat(b[1]));this.vertices.push(parseFloat(b[2]));this.vertices.push(parseFloat(b[3]));4<a&&(this.colors.push(parseFloat(b[4])),this.colors.push(parseFloat(b[5])),this.colors.push(parseFloat(b[6])));break;case "vt":this.uvs.push(parseFloat(b[1]));this.uvs.push(parseFloat(b[2]));break;case "vn":this.normals.push(parseFloat(b[1]));this.normals.push(parseFloat(b[2]));
this.normals.push(parseFloat(b[3]));break;case "f":--a;if(0===c)for(this.checkFaceType(0),c=2,d=a;c<d;c++)this.buildFace(b[1]),this.buildFace(b[c]),this.buildFace(b[c+1]);else if(a===2*c)for(this.checkFaceType(1),c=3,d=a-2;c<d;c+=2)this.buildFace(b[1],b[2]),this.buildFace(b[c],b[c+1]),this.buildFace(b[c+2],b[c+3]);else if(2*a===3*c)for(this.checkFaceType(2),c=4,d=a-3;c<d;c+=3)this.buildFace(b[1],b[2],b[3]),this.buildFace(b[c],b[c+1],b[c+2]),this.buildFace(b[c+3],b[c+4],b[c+5]);else for(this.checkFaceType(3),
c=3,d=a-2;c<d;c+=2)this.buildFace(b[1],void 0,b[2]),this.buildFace(b[c],void 0,b[c+1]),this.buildFace(b[c+2],void 0,b[c+3]);break;case "l":case "p":--a;if(a===2*c)for(this.checkFaceType(4),c=1,d=a+1;c<d;c+=2)this.buildFace(b[c],b[c+1]);else for(this.checkFaceType("l"===d?5:6),c=1,d=a+1;c<d;c++)this.buildFace(b[c]);break;case "s":this.pushSmoothingGroup(b[1]);break;case "g":this.processCompletedMesh();this.rawMesh.groupName=f(this.contentRef,this.legacyMode,this.globalCounts.lineByte+2,this.globalCounts.currentByte);
break;case "o":this.rawMesh.objectName=f(this.contentRef,this.legacyMode,this.globalCounts.lineByte+2,this.globalCounts.currentByte);break;case "mtllib":this.rawMesh.mtllibName=f(this.contentRef,this.legacyMode,this.globalCounts.lineByte+7,this.globalCounts.currentByte);break;case "usemtl":b=f(this.contentRef,this.legacyMode,this.globalCounts.lineByte+7,this.globalCounts.currentByte),""!==b&&this.rawMesh.activeMtlName!==b&&(this.rawMesh.activeMtlName=b,this.rawMesh.counts.mtlCount++,this.checkSubGroup())}}};
a.prototype.pushSmoothingGroup=function(b){var a=parseInt(b);isNaN(a)&&(a="off"===b?0:1);b=this.rawMesh.smoothingGroup.normalized;this.rawMesh.smoothingGroup.normalized=this.rawMesh.smoothingGroup.splitMaterials?a:0===a?0:1;this.rawMesh.smoothingGroup.real=a;b!==a&&(this.rawMesh.counts.smoothingGroupCount++,this.checkSubGroup())};a.prototype.checkFaceType=function(b){this.rawMesh.faceType!==b&&(this.processCompletedMesh(),this.rawMesh.faceType=b,this.checkSubGroup())};a.prototype.checkSubGroup=function(){var b=
this.rawMesh.activeMtlName+"|"+this.rawMesh.smoothingGroup.normalized;this.rawMesh.subGroupInUse=this.rawMesh.subGroups[b];THREE.LoaderSupport.Validator.isValid(this.rawMesh.subGroupInUse)||(this.rawMesh.subGroupInUse={index:b,objectName:this.rawMesh.objectName,groupName:this.rawMesh.groupName,materialName:this.rawMesh.activeMtlName,smoothingGroup:this.rawMesh.smoothingGroup.normalized,vertices:[],indexMappingsCount:0,indexMappings:[],indices:[],colors:[],uvs:[],normals:[]},this.rawMesh.subGroups[b]=
this.rawMesh.subGroupInUse)};a.prototype.buildFace=function(b,a,c){this.disregardNormals&&(c=void 0);var f=this,d=function(){var d=parseInt(b),d=3*(0<d?d-1:d+f.vertices.length/3),e=f.rawMesh.subGroupInUse.vertices;e.push(f.vertices[d++]);e.push(f.vertices[d++]);e.push(f.vertices[d]);d=0<f.colors.length?d:null;null!==d&&(e=f.rawMesh.subGroupInUse.colors,e.push(f.colors[d++]),e.push(f.colors[d++]),e.push(f.colors[d]));a&&(d=parseInt(a),d=2*(0<d?d-1:d+f.uvs.length/2),e=f.rawMesh.subGroupInUse.uvs,e.push(f.uvs[d++]),
e.push(f.uvs[d]));c&&(d=parseInt(c),d=3*(0<d?d-1:d+f.normals.length/3),e=f.rawMesh.subGroupInUse.normals,e.push(f.normals[d++]),e.push(f.normals[d++]),e.push(f.normals[d]))};if(this.useIndices){var l=b+(a?"_"+a:"_n")+(c?"_"+c:"_n"),g=this.rawMesh.subGroupInUse.indexMappings[l];THREE.LoaderSupport.Validator.isValid(g)?this.rawMesh.counts.doubleIndicesCount++:(g=this.rawMesh.subGroupInUse.vertices.length/3,d(),this.rawMesh.subGroupInUse.indexMappings[l]=g,this.rawMesh.subGroupInUse.indexMappingsCount++);
this.rawMesh.subGroupInUse.indices.push(g)}else d();this.rawMesh.counts.faceCount++};a.prototype.createRawMeshReport=function(b){return"Input Object number: "+b+"\n\tObject name: "+this.rawMesh.objectName+"\n\tGroup name: "+this.rawMesh.groupName+"\n\tMtllib name: "+this.rawMesh.mtllibName+"\n\tVertex count: "+this.vertices.length/3+"\n\tNormal count: "+this.normals.length/3+"\n\tUV count: "+this.uvs.length/2+"\n\tSmoothingGroup count: "+this.rawMesh.counts.smoothingGroupCount+"\n\tMaterial count: "+
this.rawMesh.counts.mtlCount+"\n\tReal MeshOutputGroup count: "+this.rawMesh.subGroups.length};a.prototype.finalizeRawMesh=function(){var b=[],a,c=0,f=0,d=0,l=0,g=0,m=0,e,k;for(k in this.rawMesh.subGroups)if(a=this.rawMesh.subGroups[k],0<a.vertices.length){e=a.indices;if(0<e.length&&0<f)for(var v in e)e[v]+=f;b.push(a);c+=a.vertices.length;f+=a.indexMappingsCount;d+=a.indices.length;l+=a.colors.length;m+=a.uvs.length;g+=a.normals.length}a=null;0<b.length&&(a={name:""!==this.rawMesh.groupName?this.rawMesh.groupName:
this.rawMesh.objectName,subGroups:b,absoluteVertexCount:c,absoluteIndexCount:d,absoluteColorCount:l,absoluteNormalCount:g,absoluteUvCount:m,faceCount:this.rawMesh.counts.faceCount,doubleIndicesCount:this.rawMesh.counts.doubleIndicesCount});return a};a.prototype.processCompletedMesh=function(){var a=this.finalizeRawMesh();if(THREE.LoaderSupport.Validator.isValid(a)){if(0<this.colors.length&&this.colors.length!==this.vertices.length)throw"Vertex Colors were detected, but vertex count and color count do not match!";
this.logging.enabled&&this.logging.debug&&console.debug(this.createRawMeshReport(this.inputObjectCount));this.inputObjectCount++;this.buildMesh(a);a=this.globalCounts.currentByte/this.globalCounts.totalBytes;this.callbackProgress("Completed [o: "+this.rawMesh.objectName+" g:"+this.rawMesh.groupName+"] Total progress: "+(100*a).toFixed(2)+"%",a);this.resetRawMesh();return!0}return!1};a.prototype.buildMesh=function(a){var h=a.subGroups,c=new Float32Array(a.absoluteVertexCount);this.globalCounts.vertices+=
a.absoluteVertexCount/3;this.globalCounts.faces+=a.faceCount;this.globalCounts.doubleIndicesCount+=a.doubleIndicesCount;var f=0<a.absoluteIndexCount?new Uint32Array(a.absoluteIndexCount):null,d=0<a.absoluteColorCount?new Float32Array(a.absoluteColorCount):null,g=0<a.absoluteNormalCount?new Float32Array(a.absoluteNormalCount):null,k=0<a.absoluteUvCount?new Float32Array(a.absoluteUvCount):null,m=THREE.LoaderSupport.Validator.isValid(d),e,r=[],v=1<h.length,z=0,w=[],u,n,H=[],A=0,B=0,C=0,D=0,E=0,F=0,q=
0,x,t,G;for(G in h)if(h.hasOwnProperty(G)){e=h[G];t=e.materialName;n=4>this.rawMesh.faceType?t+(m?"_vertexColor":"")+(0===e.smoothingGroup?"_flat":""):6===this.rawMesh.faceType?"defaultPointMaterial":"defaultLineMaterial";q=this.materials[t];x=this.materials[n];if(!THREE.LoaderSupport.Validator.isValid(q)&&!THREE.LoaderSupport.Validator.isValid(x)){var y=m?"defaultVertexColorMaterial":"defaultMaterial",q=this.materials[y];this.logging.enabled&&console.warn('object_group "'+e.objectName+"_"+e.groupName+
'" was defined with unresolvable material "'+t+'"! Assigning "'+y+'".');t=y;t===n&&(x=q,n=y)}THREE.LoaderSupport.Validator.isValid(x)||(q={materialNameOrg:t,materialName:n,materialProperties:{vertexColors:m?2:0,flatShading:0===e.smoothingGroup}},this.callbackMeshBuilder({cmd:"materialData",materials:{materialCloneInstructions:q}}),this.useAsync&&(this.materials[n]=q));v?(u=w[n],u||(u=z,w[n]=z,r.push(n),z++),q=this.useIndices?e.indices.length:e.vertices.length/3,n={start:F,count:q,index:u},H.push(n),
F+=q):r.push(n);c.set(e.vertices,A);A+=e.vertices.length;f&&(f.set(e.indices,B),B+=e.indices.length);d&&(d.set(e.colors,C),C+=e.colors.length);g&&(g.set(e.normals,D),D+=e.normals.length);k&&(k.set(e.uvs,E),E+=e.uvs.length);this.logging.enabled&&this.logging.debug&&(n=THREE.LoaderSupport.Validator.isValid(u)?"\n\t\tmaterialIndex: "+u:"",console.debug("\tOutput Object no.: "+this.outputObjectCount+"\n\t\tgroupName: "+e.groupName+"\n\t\tIndex: "+e.index+"\n\t\tfaceType: "+this.rawMesh.faceType+"\n\t\tmaterialName: "+
e.materialName+"\n\t\tsmoothingGroup: "+e.smoothingGroup+n+"\n\t\tobjectName: "+e.objectName+"\n\t\t#vertices: "+e.vertices.length/3+"\n\t\t#indices: "+e.indices.length+"\n\t\t#colors: "+e.colors.length/3+"\n\t\t#uvs: "+e.uvs.length/2+"\n\t\t#normals: "+e.normals.length/3))}this.outputObjectCount++;this.callbackMeshBuilder({cmd:"meshData",progress:{numericalValue:this.globalCounts.currentByte/this.globalCounts.totalBytes},params:{meshName:a.name},materials:{multiMaterial:v,materialNames:r,materialGroups:H},
buffers:{vertices:c,indices:f,colors:d,normals:g,uvs:k},geometryType:4>this.rawMesh.faceType?0:6===this.rawMesh.faceType?2:1},[c.buffer],THREE.LoaderSupport.Validator.isValid(f)?[f.buffer]:null,THREE.LoaderSupport.Validator.isValid(d)?[d.buffer]:null,THREE.LoaderSupport.Validator.isValid(g)?[g.buffer]:null,THREE.LoaderSupport.Validator.isValid(k)?[k.buffer]:null)};a.prototype.finalizeParsing=function(){this.logging.enabled&&console.info("Global output object count: "+this.outputObjectCount);this.processCompletedMesh()&&
this.logging.enabled&&console.info("Overall counts: \n\tVertices: "+this.globalCounts.vertices+"\n\tFaces: "+this.globalCounts.faces+"\n\tMultiple definitions: "+this.globalCounts.doubleIndicesCount)};return a}();k.prototype.loadMtl=function(a,b,g,c,f){a=new THREE.LoaderSupport.ResourceDescriptor(a,"MTL");a.setContent(b);this._loadMtl(a,g,c,f)};k.prototype._loadMtl=function(a,b,h,c){void 0===THREE.MTLLoader&&console.error('"THREE.MTLLoader" is not available. "THREE.OBJLoader2" requires it for loading MTL files.');
g.isValid(a)&&this.logging.enabled&&console.time("Loading MTL: "+a.name);var f=[],d=this,l=function(c){var e=[];if(g.isValid(c)){c.preload();var e=c.materials,h;for(h in e)e.hasOwnProperty(h)&&(f[h]=e[h])}g.isValid(a)&&d.logging.enabled&&console.timeEnd("Loading MTL: "+a.name);b(f,c)};if(g.isValid(a)&&(g.isValid(a.content)||g.isValid(a.url))){var k=new THREE.MTLLoader(this.manager);h=g.verifyInput(h,"anonymous");k.setCrossOrigin(h);k.setPath(a.path);g.isValid(c)&&k.setMaterialOptions(c);g.isValid(a.content)?
l(g.isValid(a.content)?k.parse(a.content):null):g.isValid(a.url)&&(new THREE.FileLoader(this.manager)).load(a.url,function(b){a.content=b;l(k.parse(b))},this._onProgress,this._onError)}else l()};return k}();