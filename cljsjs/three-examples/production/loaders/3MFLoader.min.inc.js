THREE.ThreeMFLoader=function(l){this.manager=void 0!==l?l:THREE.DefaultLoadingManager;this.availableExtensions=[]};
THREE.ThreeMFLoader.prototype={constructor:THREE.ThreeMFLoader,load:function(l,G,B,d){var h=this,b=new THREE.FileLoader(h.manager);b.setResponseType("arraybuffer");b.load(l,function(a){G(h.parse(a))},B,d)},parse:function(l){function G(d){var h=[];d=d.querySelectorAll("item");for(var b=0;b<d.length;b++){var a=d[b],m={objectid:a.getAttribute("objectid")};if(a=a.getAttribute("transform")){var c=[];a.split(" ").forEach(function(a){c.push(parseFloat(a))});a=new THREE.Matrix4;m.transform=a.set(c[0],c[3],
c[6],c[9],c[1],c[4],c[7],c[10],c[2],c[5],c[8],c[11],0,0,0,1)}h.push(m)}return h}var B=this;l=function(d){var h=null,b=null,a,m=[],c=[],l=[],x=[],C={},D={};try{h=new JSZip(d)}catch(B){if(B instanceof ReferenceError)return console.error("THREE.ThreeMFLoader: jszip missing and file is compressed."),null}for(b in h.files)b.match(/\.rels$/)?a=b:b.match(/^3D\/.*\.model$/)?m.push(b):b.match(/^3D\/Metadata\/.*\.xml$/)?c.push(b):b.match(/^3D\/Textures\/.*/)?l.push(b):b.match(/^3D\/Other\/.*/)&&x.push(b);d=
new Uint8Array(h.file(a).asArrayBuffer());d=THREE.LoaderUtils.decodeText(d);a=(new DOMParser).parseFromString(d,"application/xml").querySelector("Relationship");d=a.getAttribute("Target");b=a.getAttribute("Id");a=a.getAttribute("Type");d={target:d,id:b,type:a};for(a=0;a<m.length;a++){b=m[a];a=new Uint8Array(h.file(b).asArrayBuffer());a=THREE.LoaderUtils.decodeText(a);a=(new DOMParser).parseFromString(a,"application/xml");"model"!==a.documentElement.nodeName.toLowerCase()&&console.error("THREE.ThreeMFLoader: Error loading 3MF - no 3MF document found: ",
b);c=a.querySelector("model");x={};for(a=0;a<c.attributes.length;a++){var f=c.attributes[a];f.name.match(/^xmlns:(.+)$/)&&(x[f.value]=RegExp.$1)}var k=c,f={unit:k.getAttribute("unit")||"millimeter"},q=k.querySelectorAll("metadata");if(q){for(var u={},t=0;t<q.length;t++){var n=q[t],g=n.getAttribute("name");0<="Title Designer Description Copyright LicenseTerms Rating CreationDate ModificationDate".split(" ").indexOf(g)&&(u[g]=n.textContent)}f.metadata=u}if(q=k.querySelector("resources")){u=q;q={};u.querySelector("basematerials")&&
(q.basematerial=void 0);q.object={};u=u.querySelectorAll("object");for(t=0;t<u.length;t++){var n=u[t],g={type:n.getAttribute("type")},e=n.getAttribute("id");e&&(g.id=e);(e=n.getAttribute("pid"))&&(g.pid=e);(e=n.getAttribute("pindex"))&&(g.pindex=e);(e=n.getAttribute("thumbnail"))&&(g.thumbnail=e);(e=n.getAttribute("partnumber"))&&(g.partnumber=e);(e=n.getAttribute("name"))&&(g.name=e);if(e=n.querySelector("mesh")){for(var w=e,e={},r=[],A=w.querySelectorAll("vertices vertex"),p=0;p<A.length;p++){var y=
A[p],E=y.getAttribute("x"),F=y.getAttribute("y"),y=y.getAttribute("z");r.push(parseFloat(E),parseFloat(F),parseFloat(y))}e.vertices=new Float32Array(r.length);for(p=0;p<r.length;p++)e.vertices[p]=r[p];r=[];A=[];w=w.querySelectorAll("triangles triangle");for(p=0;p<w.length;p++){var v=w[p],z=v.getAttribute("v1"),H=v.getAttribute("v2"),I=v.getAttribute("v3"),E=v.getAttribute("p1"),F=v.getAttribute("p2"),y=v.getAttribute("p3"),v=v.getAttribute("pid");A.push(parseInt(z,10),parseInt(H,10),parseInt(I,10));
z={};E&&(z.p1=parseInt(E,10));F&&(z.p2=parseInt(F,10));y&&(z.p3=parseInt(y,10));v&&(z.pid=v);0<Object.keys(z).length&&r.push(z)}e.triangleProperties=r;e.triangles=new Uint32Array(A.length);for(p=0;p<A.length;p++)e.triangles[p]=A[p];g.mesh=e}n.querySelector("components")&&(g.components=void 0);n=g;q.object[n.id]=n}f.resources=q}(k=k.querySelector("build"))&&(f.build=G(k));f.xml=c;0<Object.keys(x).length&&(f.extensions=x);C[b]=f}for(a=0;a<l.length;a++)m=l[a],D[m]=h.file(m).asBinary();return{rels:d,
model:C,printTicket:{},texture:D,other:{}}}(l);return function(d,h,b){var a=new THREE.Group;h=b.model[h.target.substring(1)].build;for(b=0;b<h.length;b++){var m=h[b],c=d[m.objectid];m.transform&&c.geometry.applyMatrix(m.transform);a.add(c)}return a}(function(d){d=d.model;for(var h={},b=Object.keys(d),a=0;a<b.length;a++)for(var m=d[b[a]],c=m.xml,l=m.extensions,x=Object.keys(m.resources.object),C=0;C<x.length;C++){var D=x[C],f=m.resources.object[D].mesh;var k=l,q=f,u=c;if(k){for(var t=[],n=Object.keys(k),
g=0;g<n.length;g++)for(var e=n[g],w=0;w<B.availableExtensions.length;w++){var r=B.availableExtensions[w];r.ns===e&&t.push(r)}for(g=0;g<t.length;g++)r=t[g],r.apply(u,k[r.ns],q)}k=f;f=new THREE.BufferGeometry;f.setIndex(new THREE.BufferAttribute(k.triangles,1));f.addAttribute("position",new THREE.BufferAttribute(k.vertices,3));k.colors&&f.addAttribute("color",new THREE.BufferAttribute(k.colors,3));f.computeBoundingSphere();q={flatShading:!0};k.colors&&0<k.colors.length?q.vertexColors=THREE.VertexColors:
q.color=11184895;k=new THREE.MeshPhongMaterial(q);f=new THREE.Mesh(f,k);h[D]=f}return h}(l),l.rels,l)},addExtension:function(l){this.availableExtensions.push(l)}};