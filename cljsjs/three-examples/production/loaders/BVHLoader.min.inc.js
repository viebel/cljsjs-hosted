THREE.BVHLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager;this.animateBoneRotations=this.animateBonePositions=!0};
THREE.BVHLoader.prototype={constructor:THREE.BVHLoader,load:function(e,m,n,p){var f=this;(new THREE.FileLoader(f.manager)).load(e,function(e){m(f.parse(e))},n,p)},parse:function(e){function m(c,a,d){if("ENDSITE"!==d.type){var b={time:a,position:new THREE.Vector3,rotation:new THREE.Quaternion};d.frames.push(b);for(var h=new THREE.Quaternion,f=new THREE.Vector3(1,0,0),e=new THREE.Vector3(0,1,0),l=new THREE.Vector3(0,0,1),g=0;g<d.channels.length;g++)switch(d.channels[g]){case "Xposition":b.position.x=
parseFloat(c.shift().trim());break;case "Yposition":b.position.y=parseFloat(c.shift().trim());break;case "Zposition":b.position.z=parseFloat(c.shift().trim());break;case "Xrotation":h.setFromAxisAngle(f,parseFloat(c.shift().trim())*Math.PI/180);b.rotation.multiply(h);break;case "Yrotation":h.setFromAxisAngle(e,parseFloat(c.shift().trim())*Math.PI/180);b.rotation.multiply(h);break;case "Zrotation":h.setFromAxisAngle(l,parseFloat(c.shift().trim())*Math.PI/180);b.rotation.multiply(h);break;default:console.warn("THREE.BVHLoader: Invalid channel type.")}for(g=
0;g<d.children.length;g++)m(c,a,d.children[g])}}function n(c,a,d){var b={name:"",type:"",frames:[]};d.push(b);a=a.split(/[\s]+/);"END"===a[0].toUpperCase()&&"SITE"===a[1].toUpperCase()?(b.type="ENDSITE",b.name="ENDSITE"):(b.name=a[1],b.type=a[0].toUpperCase());"{"!==f(c)&&console.error("THREE.BVHLoader: Expected opening { after type \x26 name");a=f(c).split(/[\s]+/);"OFFSET"!==a[0]&&console.error("THREE.BVHLoader: Expected OFFSET but got: "+a[0]);4!==a.length&&console.error("THREE.BVHLoader: Invalid number of values for OFFSET.");
a=new THREE.Vector3(parseFloat(a[1]),parseFloat(a[2]),parseFloat(a[3]));(isNaN(a.x)||isNaN(a.y)||isNaN(a.z))&&console.error("THREE.BVHLoader: Invalid values of OFFSET.");b.offset=a;if("ENDSITE"!==b.type){a=f(c).split(/[\s]+/);"CHANNELS"!==a[0]&&console.error("THREE.BVHLoader: Expected CHANNELS definition.");var h=parseInt(a[1]);b.channels=a.splice(2,h);b.children=[]}for(;;){a=f(c);if("}"===a)return b;b.children.push(n(c,a,d))}}function p(c,a){var d=new THREE.Bone;a.push(d);d.position.add(c.offset);
d.name=c.name;if("ENDSITE"!==c.type)for(var b=0;b<c.children.length;b++)d.add(p(c.children[b],a));return d}function f(c){for(var a;0===(a=c.shift().trim()).length;);return a}var r=this,q=function(c){"HIERARCHY"!==f(c)&&console.error("THREE.BVHLoader: HIERARCHY expected.");var a=[],d=n(c,f(c),a);"MOTION"!==f(c)&&console.error("THREE.BVHLoader: MOTION expected.");var b=f(c).split(/[\s]+/),h=parseInt(b[1]);isNaN(h)&&console.error("THREE.BVHLoader: Failed to read number of frames.");var b=f(c).split(/[\s]+/),
e=parseFloat(b[2]);isNaN(e)&&console.error("THREE.BVHLoader: Failed to read frame time.");for(var k=0;k<h;k++)b=f(c).split(/[\s]+/),m(b,k*e,d);return a}(e.split(/[\r\n]+/g));e=[];p(q[0],e);q=function(c){for(var a=[],d=0;d<c.length;d++){var b=c[d];if("ENDSITE"!==b.type){for(var e=[],f=[],k=[],l=0;l<b.frames.length;l++){var g=b.frames[l];e.push(g.time);f.push(g.position.x+b.offset.x);f.push(g.position.y+b.offset.y);f.push(g.position.z+b.offset.z);k.push(g.rotation.x);k.push(g.rotation.y);k.push(g.rotation.z);
k.push(g.rotation.w)}r.animateBonePositions&&a.push(new THREE.VectorKeyframeTrack(".bones["+b.name+"].position",e,f));r.animateBoneRotations&&a.push(new THREE.QuaternionKeyframeTrack(".bones["+b.name+"].quaternion",e,k))}}return new THREE.AnimationClip("animation",-1,a)}(q);return{skeleton:new THREE.Skeleton(e),clip:q}}};