THREE.AMFLoader=function(f){this.manager=void 0!==f?f:THREE.DefaultLoadingManager};
THREE.AMFLoader.prototype={constructor:THREE.AMFLoader,load:function(f,v,u,w){var q=this,b=new THREE.FileLoader(q.manager);b.setResponseType("arraybuffer");b.load(f,function(b){v(q.parse(b))},u,w)},parse:function(f){function v(h){for(var r="AMF Material",c=h.attributes.id.textContent,t={r:1,g:1,b:1,a:1},a=null,a=0;a<h.childNodes.length;a++){var b=h.childNodes[a];"metadata"===b.nodeName&&void 0!==b.attributes.type?"name"===b.attributes.type.value&&(r=b.textContent):"color"===b.nodeName&&(t=u(b))}a=
new THREE.MeshPhongMaterial({flatShading:!0,color:new THREE.Color(t.r,t.g,t.b),name:r});1!==t.a&&(a.transparent=!0,a.opacity=t.a);return{id:c,material:a}}function u(h){for(var r={r:1,g:1,b:1,a:1},c=0;c<h.childNodes.length;c++){var a=h.childNodes[c];"r"===a.nodeName?r.r=a.textContent:"g"===a.nodeName?r.g=a.textContent:"b"===a.nodeName?r.b=a.textContent:"a"===a.nodeName&&(r.a=a.textContent)}return r}function w(h){var a={name:"",triangles:[],materialid:null},c=h.firstElementChild;void 0!==h.attributes.materialid&&
(a.materialId=h.attributes.materialid.nodeValue);for(;c;){if("metadata"===c.nodeName)void 0!==c.attributes.type&&"name"===c.attributes.type.value&&(a.name=c.textContent);else if("triangle"===c.nodeName){h=c.getElementsByTagName("v1")[0].textContent;var b=c.getElementsByTagName("v2")[0].textContent,e=c.getElementsByTagName("v3")[0].textContent;a.triangles.push(h,b,e)}c=c.nextElementSibling}return a}function q(a){var b,c,e=a.attributes.id.textContent,f={name:"amfobject",meshes:[]},m=null;for(a=a.firstElementChild;a;){if("metadata"===
a.nodeName)void 0!==a.attributes.type&&"name"===a.attributes.type.value&&(f.name=a.textContent);else if("color"===a.nodeName)m=u(a);else if("mesh"===a.nodeName){for(var d=a.firstElementChild,g={vertices:[],normals:[],volumes:[],color:m};d;){if("vertices"===d.nodeName){b=[];c=[];for(var k=d.firstElementChild;k;){if("vertex"===k.nodeName)for(var l=k.firstElementChild;l;){if("coordinates"===l.nodeName){var n=l.getElementsByTagName("x")[0].textContent,p=l.getElementsByTagName("y")[0].textContent,q=l.getElementsByTagName("z")[0].textContent;
b.push(n,p,q)}else"normal"===l.nodeName&&(n=l.getElementsByTagName("nx")[0].textContent,p=l.getElementsByTagName("ny")[0].textContent,q=l.getElementsByTagName("nz")[0].textContent,c.push(n,p,q));l=l.nextElementSibling}k=k.nextElementSibling}g.normals=g.normals.concat(c);g.vertices=g.vertices.concat(b)}else"volume"===d.nodeName&&g.volumes.push(w(d));d=d.nextElementSibling}f.meshes.push(g)}a=a.nextElementSibling}return{id:e,obj:f}}var b=function(a){var b=new DataView(a);if("PK"===String.fromCharCode(b.getUint8(0),
b.getUint8(1))){var c=b=null;console.log("THREE.AMFLoader: Loading Zip");try{b=new JSZip(a)}catch(d){if(d instanceof ReferenceError)return console.log("THREE.AMFLoader: jszip missing and file is compressed."),null}for(c in b.files)if(".amf"===c.toLowerCase().substr(-4))break;console.log("THREE.AMFLoader: Trying to load file asset: "+c);b=new DataView(b.file(c).asArrayBuffer())}a=THREE.LoaderUtils.decodeText(b);a=(new DOMParser).parseFromString(a,"application/xml");return"amf"!==a.documentElement.nodeName.toLowerCase()?
(console.log("THREE.AMFLoader: Error loading AMF - no AMF document found."),null):a}(f),k="",g="";f=function(a){var b=1,c="millimeter";void 0!==a.documentElement.attributes.unit&&(c=a.documentElement.attributes.unit.value.toLowerCase());a={millimeter:1,inch:25.4,feet:304.8,meter:1E3,micron:.001};void 0!==a[c]&&(b=a[c]);console.log("THREE.AMFLoader: Unit scale: "+b);return b}(b);for(var x={},y={},m=b.documentElement.childNodes,e,b=0;b<m.length;b++){var a=m[b];"metadata"===a.nodeName?void 0!==a.attributes.type&&
("name"===a.attributes.type.value?k=a.textContent:"author"===a.attributes.type.value&&(g=a.textContent)):"material"===a.nodeName?(a=v(a),x[a.id]=a.material):"object"===a.nodeName&&(a=q(a),y[a.id]=a.obj)}m=new THREE.Group;a=new THREE.MeshPhongMaterial({color:11184895,flatShading:!0});m.name=k;m.userData.author=g;m.userData.loader="AMF";for(var C in y){b=y[C];k=b.meshes;g=new THREE.Group;g.name=b.name||"";for(b=0;b<k.length;b++){var n=a;e=k[b];var D=new THREE.Float32BufferAttribute(e.vertices,3),z=
null;e.normals.length&&(z=new THREE.Float32BufferAttribute(e.normals,3));if(e.color){var d=e.color,n=a.clone();n.color=new THREE.Color(d.r,d.g,d.b);1!==d.a&&(n.transparent=!0,n.opacity=d.a)}d=e.volumes;for(e=0;e<d.length;e++){var A=d[e],p=new THREE.BufferGeometry,B=n;p.setIndex(A.triangles);p.addAttribute("position",D.clone());z&&p.addAttribute("normal",z.clone());void 0!==x[A.materialId]&&(B=x[A.materialId]);p.scale(f,f,f);g.add(new THREE.Mesh(p,B.clone()))}}m.add(g)}return m}};