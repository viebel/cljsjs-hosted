THREE.Ocean=function(b,a,c,d){function e(a,b){return void 0!==a?a:b}this.initial=this.changed=!0;this.oceanCamera=new THREE.OrthographicCamera;this.oceanCamera.position.z=1;this.renderer=b;this.renderer.clearColor(16777215);this.scene=new THREE.Scene;d=d||{};this.clearColor=e(d.CLEAR_COLOR,[1,1,1,0]);this.geometryOrigin=e(d.GEOMETRY_ORIGIN,[-1E3,-1E3]);this.sunDirectionX=e(d.SUN_DIRECTION[0],-1);this.sunDirectionY=e(d.SUN_DIRECTION[1],1);this.sunDirectionZ=e(d.SUN_DIRECTION[2],1);this.oceanColor=
e(d.OCEAN_COLOR,new THREE.Vector3(.004,.016,.047));this.skyColor=e(d.SKY_COLOR,new THREE.Vector3(3.2,9.6,12.8));this.exposure=e(d.EXPOSURE,.35);this.geometryResolution=e(d.GEOMETRY_RESOLUTION,32);this.geometrySize=e(d.GEOMETRY_SIZE,2E3);this.resolution=e(d.RESOLUTION,64);this.floatSize=e(d.SIZE_OF_FLOAT,4);this.windX=e(d.INITIAL_WIND[0],10);this.windY=e(d.INITIAL_WIND[1],10);this.size=e(d.INITIAL_SIZE,250);this.choppiness=e(d.INITIAL_CHOPPINESS,1.5);this.matrixNeedsUpdate=!1;b=e(d.USE_HALF_FLOAT,
!1)?THREE.HalfFloatType:THREE.FloatType;a={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,wrapS:THREE.ClampToEdgeWrapping,wrapT:THREE.ClampToEdgeWrapping,format:THREE.RGBAFormat,stencilBuffer:!1,depthBuffer:!1,premultiplyAlpha:!1,type:b};c={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,wrapS:THREE.ClampToEdgeWrapping,wrapT:THREE.ClampToEdgeWrapping,format:THREE.RGBAFormat,stencilBuffer:!1,depthBuffer:!1,premultiplyAlpha:!1,type:b};this.initialSpectrumFramebuffer=new THREE.WebGLRenderTarget(this.resolution,
this.resolution,{minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,wrapS:THREE.RepeatWrapping,wrapT:THREE.RepeatWrapping,format:THREE.RGBAFormat,stencilBuffer:!1,depthBuffer:!1,premultiplyAlpha:!1,type:b});this.spectrumFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,c);this.pingPhaseFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,c);this.pongPhaseFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,c);this.pingTransformFramebuffer=
new THREE.WebGLRenderTarget(this.resolution,this.resolution,c);this.pongTransformFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,c);this.displacementMapFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,a);this.normalMapFramebuffer=new THREE.WebGLRenderTarget(this.resolution,this.resolution,a);b=THREE.ShaderLib.ocean_sim_vertex;a=THREE.ShaderLib.ocean_subtransform;c=THREE.UniformsUtils.clone(a.uniforms);this.materialOceanHorizontal=new THREE.ShaderMaterial({uniforms:c,
vertexShader:b.vertexShader,fragmentShader:"#define HORIZONTAL \n"+a.fragmentShader});this.materialOceanHorizontal.uniforms.u_transformSize={value:this.resolution};this.materialOceanHorizontal.uniforms.u_subtransformSize={value:null};this.materialOceanHorizontal.uniforms.u_input={value:null};this.materialOceanHorizontal.depthTest=!1;a=THREE.ShaderLib.ocean_subtransform;c=THREE.UniformsUtils.clone(a.uniforms);this.materialOceanVertical=new THREE.ShaderMaterial({uniforms:c,vertexShader:b.vertexShader,
fragmentShader:a.fragmentShader});this.materialOceanVertical.uniforms.u_transformSize={value:this.resolution};this.materialOceanVertical.uniforms.u_subtransformSize={value:null};this.materialOceanVertical.uniforms.u_input={value:null};this.materialOceanVertical.depthTest=!1;a=THREE.ShaderLib.ocean_initial_spectrum;c=THREE.UniformsUtils.clone(a.uniforms);this.materialInitialSpectrum=new THREE.ShaderMaterial({uniforms:c,vertexShader:b.vertexShader,fragmentShader:a.fragmentShader});this.materialInitialSpectrum.uniforms.u_wind=
{value:new THREE.Vector2};this.materialInitialSpectrum.uniforms.u_resolution={value:this.resolution};this.materialInitialSpectrum.depthTest=!1;a=THREE.ShaderLib.ocean_phase;c=THREE.UniformsUtils.clone(a.uniforms);this.materialPhase=new THREE.ShaderMaterial({uniforms:c,vertexShader:b.vertexShader,fragmentShader:a.fragmentShader});this.materialPhase.uniforms.u_resolution={value:this.resolution};this.materialPhase.depthTest=!1;a=THREE.ShaderLib.ocean_spectrum;c=THREE.UniformsUtils.clone(a.uniforms);
this.materialSpectrum=new THREE.ShaderMaterial({uniforms:c,vertexShader:b.vertexShader,fragmentShader:a.fragmentShader});this.materialSpectrum.uniforms.u_initialSpectrum={value:null};this.materialSpectrum.uniforms.u_resolution={value:this.resolution};this.materialSpectrum.depthTest=!1;a=THREE.ShaderLib.ocean_normals;c=THREE.UniformsUtils.clone(a.uniforms);this.materialNormal=new THREE.ShaderMaterial({uniforms:c,vertexShader:b.vertexShader,fragmentShader:a.fragmentShader});this.materialNormal.uniforms.u_displacementMap=
{value:null};this.materialNormal.uniforms.u_resolution={value:this.resolution};this.materialNormal.depthTest=!1;b=THREE.ShaderLib.ocean_main;a=THREE.UniformsUtils.clone(b.uniforms);this.materialOcean=new THREE.ShaderMaterial({uniforms:a,vertexShader:b.vertexShader,fragmentShader:b.fragmentShader});this.materialOcean.uniforms.u_geometrySize={value:this.resolution};this.materialOcean.uniforms.u_displacementMap={value:this.displacementMapFramebuffer.texture};this.materialOcean.uniforms.u_normalMap={value:this.normalMapFramebuffer.texture};
this.materialOcean.uniforms.u_oceanColor={value:this.oceanColor};this.materialOcean.uniforms.u_skyColor={value:this.skyColor};this.materialOcean.uniforms.u_sunDirection={value:new THREE.Vector3(this.sunDirectionX,this.sunDirectionY,this.sunDirectionZ)};this.materialOcean.uniforms.u_exposure={value:this.exposure};this.materialOceanHorizontal.blending=0;this.materialOceanVertical.blending=0;this.materialInitialSpectrum.blending=0;this.materialPhase.blending=0;this.materialSpectrum.blending=0;this.materialNormal.blending=
0;this.materialOcean.blending=0;this.screenQuad=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2));this.scene.add(this.screenQuad);this.generateSeedPhaseTexture();this.generateMesh()};THREE.Ocean.prototype.generateMesh=function(){var b=new THREE.PlaneBufferGeometry(this.geometrySize,this.geometrySize,this.geometryResolution,this.geometryResolution);b.rotateX(-Math.PI/2);this.oceanMesh=new THREE.Mesh(b,this.materialOcean)};
THREE.Ocean.prototype.render=function(){this.scene.overrideMaterial=null;this.changed&&this.renderInitialSpectrum();this.renderWavePhase();this.renderSpectrum();this.renderSpectrumFFT();this.renderNormalMap();this.scene.overrideMaterial=null};
THREE.Ocean.prototype.generateSeedPhaseTexture=function(){this.pingPhase=!0;for(var b=new window.Float32Array(this.resolution*this.resolution*4),a=0;a<this.resolution;a++)for(var c=0;c<this.resolution;c++)b[a*this.resolution*4+4*c]=2*Math.random()*Math.PI,b[a*this.resolution*4+4*c+1]=0,b[a*this.resolution*4+4*c+2]=0,b[a*this.resolution*4+4*c+3]=0;this.pingPhaseTexture=new THREE.DataTexture(b,this.resolution,this.resolution,THREE.RGBAFormat);this.pingPhaseTexture.wrapS=THREE.ClampToEdgeWrapping;this.pingPhaseTexture.wrapT=
THREE.ClampToEdgeWrapping;this.pingPhaseTexture.type=THREE.FloatType;this.pingPhaseTexture.needsUpdate=!0};THREE.Ocean.prototype.renderInitialSpectrum=function(){this.scene.overrideMaterial=this.materialInitialSpectrum;this.materialInitialSpectrum.uniforms.u_wind.value.set(this.windX,this.windY);this.materialInitialSpectrum.uniforms.u_size.value=this.size;this.renderer.render(this.scene,this.oceanCamera,this.initialSpectrumFramebuffer,!0)};
THREE.Ocean.prototype.renderWavePhase=function(){this.scene.overrideMaterial=this.materialPhase;this.screenQuad.material=this.materialPhase;this.initial?(this.materialPhase.uniforms.u_phases.value=this.pingPhaseTexture,this.initial=!1):this.materialPhase.uniforms.u_phases.value=this.pingPhase?this.pingPhaseFramebuffer.texture:this.pongPhaseFramebuffer.texture;this.materialPhase.uniforms.u_deltaTime.value=this.deltaTime;this.materialPhase.uniforms.u_size.value=this.size;this.renderer.render(this.scene,
this.oceanCamera,this.pingPhase?this.pongPhaseFramebuffer:this.pingPhaseFramebuffer);this.pingPhase=!this.pingPhase};
THREE.Ocean.prototype.renderSpectrum=function(){this.scene.overrideMaterial=this.materialSpectrum;this.materialSpectrum.uniforms.u_initialSpectrum.value=this.initialSpectrumFramebuffer.texture;this.materialSpectrum.uniforms.u_phases.value=this.pingPhase?this.pingPhaseFramebuffer.texture:this.pongPhaseFramebuffer.texture;this.materialSpectrum.uniforms.u_choppiness.value=this.choppiness;this.materialSpectrum.uniforms.u_size.value=this.size;this.renderer.render(this.scene,this.oceanCamera,this.spectrumFramebuffer)};
THREE.Ocean.prototype.renderSpectrumFFT=function(){var b=Math.log(this.resolution)/Math.log(2);this.scene.overrideMaterial=this.materialOceanHorizontal;for(var a=0;a<b;a++)0===a?(this.materialOceanHorizontal.uniforms.u_input.value=this.spectrumFramebuffer.texture,this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,a%b+1),this.renderer.render(this.scene,this.oceanCamera,this.pingTransformFramebuffer)):1===a%2?(this.materialOceanHorizontal.uniforms.u_input.value=this.pingTransformFramebuffer.texture,
this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,a%b+1),this.renderer.render(this.scene,this.oceanCamera,this.pongTransformFramebuffer)):(this.materialOceanHorizontal.uniforms.u_input.value=this.pongTransformFramebuffer.texture,this.materialOceanHorizontal.uniforms.u_subtransformSize.value=Math.pow(2,a%b+1),this.renderer.render(this.scene,this.oceanCamera,this.pingTransformFramebuffer));this.scene.overrideMaterial=this.materialOceanVertical;for(a=b;a<2*b;a++)a===2*b-1?(this.materialOceanVertical.uniforms.u_input.value=
0===b%2?this.pingTransformFramebuffer.texture:this.pongTransformFramebuffer.texture,this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,a%b+1),this.renderer.render(this.scene,this.oceanCamera,this.displacementMapFramebuffer)):1===a%2?(this.materialOceanVertical.uniforms.u_input.value=this.pingTransformFramebuffer.texture,this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,a%b+1),this.renderer.render(this.scene,this.oceanCamera,this.pongTransformFramebuffer)):
(this.materialOceanVertical.uniforms.u_input.value=this.pongTransformFramebuffer.texture,this.materialOceanVertical.uniforms.u_subtransformSize.value=Math.pow(2,a%b+1),this.renderer.render(this.scene,this.oceanCamera,this.pingTransformFramebuffer))};
THREE.Ocean.prototype.renderNormalMap=function(){this.scene.overrideMaterial=this.materialNormal;this.changed&&(this.materialNormal.uniforms.u_size.value=this.size);this.materialNormal.uniforms.u_displacementMap.value=this.displacementMapFramebuffer.texture;this.renderer.render(this.scene,this.oceanCamera,this.normalMapFramebuffer,!0)};