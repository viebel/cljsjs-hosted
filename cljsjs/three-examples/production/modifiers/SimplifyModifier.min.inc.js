THREE.SimplifyModifier=function(){};
(function(){function k(a,c){var b=a.indexOf(c);-1<b&&a.splice(b,1)}function r(a){if(0===a.neighbors.length)a.collapseNeighbor=null,a.collapseCost=-.01;else{a.collapseCost=1E5;a.collapseNeighbor=null;for(var c=0;c<a.neighbors.length;c++){var b;b=a;for(var d=a.neighbors[c],f=d.position.distanceTo(b.position),l=0,e=[],g=void 0,t=b.faces.length,h=void 0,m=void 0,g=0;g<t;g++)h=b.faces[g],h.hasVertex(d)&&e.push(h);for(g=0;g<t;g++){for(var d=1,h=b.faces[g],k=0;k<e.length;k++)m=e[k],m=h.normal.dot(m.normal),
d=Math.min(d,(1.001-m)/2);l=Math.max(l,d)}2>e.length&&(l=1);b=f*l+0;a.collapseNeighbor||(a.collapseNeighbor=a.neighbors[c],a.collapseCost=b,a.minCost=b,a.totalCost=0,a.costCount=0);a.costCount++;a.totalCost+=b;b<a.minCost&&(a.collapseNeighbor=a.neighbors[c],a.minCost=b)}a.collapseCost=a.totalCost/a.costCount}}function u(a,c){for(console.assert(0===a.faces.length);a.neighbors.length;){var b=a.neighbors.pop();k(b.neighbors,a)}k(c,a)}function w(a,c){k(c,a);a.v1&&k(a.v1.faces,a);a.v2&&k(a.v2.faces,a);
a.v3&&k(a.v3.faces,a);for(var b=[this.v1,this.v2,this.v3],d,f,l=0;3>l;l++)d=b[l],f=b[(l+1)%3],d&&f&&(d.removeIfNonNeighbor(f),f.removeIfNonNeighbor(d))}function n(a,c,b,d,f,l){this.a=d;this.b=f;this.c=l;this.v1=a;this.v2=c;this.v3=b;this.normal=new THREE.Vector3;this.computeNormal();a.faces.push(this);a.addUniqueNeighbor(c);a.addUniqueNeighbor(b);c.faces.push(this);c.addUniqueNeighbor(a);c.addUniqueNeighbor(b);b.faces.push(this);b.addUniqueNeighbor(a);b.addUniqueNeighbor(c)}function p(a,c){this.position=
a;this.id=c;this.faces=[];this.neighbors=[];this.collapseCost=0;this.collapseNeighbor=null}var q=new THREE.Vector3,v=new THREE.Vector3;n.prototype.computeNormal=function(){var a=this.v1.position,c=this.v2.position;q.subVectors(this.v3.position,c);v.subVectors(a,c);q.cross(v).normalize();this.normal.copy(q)};n.prototype.hasVertex=function(a){return a===this.v1||a===this.v2||a===this.v3};n.prototype.replaceVertex=function(a,c){a===this.v1?this.v1=c:a===this.v2?this.v2=c:a===this.v3&&(this.v3=c);k(a.faces,
this);c.faces.push(this);a.removeIfNonNeighbor(this.v1);this.v1.removeIfNonNeighbor(a);a.removeIfNonNeighbor(this.v2);this.v2.removeIfNonNeighbor(a);a.removeIfNonNeighbor(this.v3);this.v3.removeIfNonNeighbor(a);this.v1.addUniqueNeighbor(this.v2);this.v1.addUniqueNeighbor(this.v3);this.v2.addUniqueNeighbor(this.v1);this.v2.addUniqueNeighbor(this.v3);this.v3.addUniqueNeighbor(this.v1);this.v3.addUniqueNeighbor(this.v2);this.computeNormal()};p.prototype.addUniqueNeighbor=function(a){var c=this.neighbors;
-1===c.indexOf(a)&&c.push(a)};p.prototype.removeIfNonNeighbor=function(a){var c=this.neighbors,b=this.faces,d=c.indexOf(a);if(-1!==d){for(var f=0;f<b.length;f++)if(b[f].hasVertex(a))return;c.splice(d,1)}};THREE.SimplifyModifier.prototype.modify=function(a,c){a instanceof THREE.BufferGeometry&&!a.vertices&&!a.faces&&(console.log("converting BufferGeometry to Geometry"),a=(new THREE.Geometry).fromBufferGeometry(a));a.mergeVertices();var b=a.vertices,d=a.faces;new THREE.Geometry;var f=Array(b.length),
l=Array(d.length),e,g;e=0;for(g=b.length;e<g;e++)f[e]=new p(b[e],e);e=0;for(g=d.length;e<g;e++)b=d[e],l[e]=new n(f[b.a],f[b.b],f[b.c],b.a,b.b,b.c);e=0;for(g=f.length;e<g;e++)r(f[e]);var k;for(e=c;e--;){d=f[0];for(g=0;g<f.length;g++)f[g].collapseCost<d.collapseCost&&(d=f[g]);k=d;if(!k){console.log("no next vertex");break}d=f;g=l;b=k;if(k=k.collapseNeighbor){for(var h=void 0,m=[],h=0;h<b.neighbors.length;h++)m.push(b.neighbors[h]);for(h=b.faces.length-1;0<=h;h--)b.faces[h].hasVertex(k)&&w(b.faces[h],
g);for(h=b.faces.length-1;0<=h;h--)b.faces[h].replaceVertex(b,k);u(b,d);for(h=0;h<m.length;h++)r(m[h])}else u(b,d)}d=new THREE.Geometry;for(e=0;e<f.length;e++)d.vertices.push(f[e].position);for(e=0;e<l.length;e++)g=l[e],d.faces.push(new THREE.Face3(f.indexOf(g.v1),f.indexOf(g.v2),f.indexOf(g.v3)));return d}})();