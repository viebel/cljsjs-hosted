function GPUComputationRenderer(f,g,k){function q(b){b.defines.resolution="vec2( "+f.toFixed(1)+", "+g.toFixed(1)+" )"}function r(b,a){a=a||{};var c=new THREE.ShaderMaterial({uniforms:a,vertexShader:"void main()\t{\n\n\tgl_Position \x3d vec4( position, 1.0 );\n\n}\n",fragmentShader:b});q(c);return c}this.variables=[];this.currentTextureIndex=0;var t=new THREE.Scene,u=new THREE.Camera;u.position.z=1;var l={texture:{value:null}},m=r("uniform sampler2D texture;\n\nvoid main() {\n\n\tvec2 uv \x3d gl_FragCoord.xy / resolution.xy;\n\n\tgl_FragColor \x3d texture2D( texture, uv );\n\n}\n",
l),n=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),m);t.add(n);this.addVariable=function(b,a,c){a=this.createShaderMaterial(a);b={name:b,initialValueTexture:c,material:a,dependencies:null,renderTargets:[],wrapS:null,wrapT:null,minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter};this.variables.push(b);return b};this.setVariableDependencies=function(b,a){b.dependencies=a};this.init=function(){if(!k.extensions.get("OES_texture_float"))return"No OES_texture_float support for float textures.";
if(0===k.capabilities.maxVertexTextures)return"No support for vertex shader textures.";for(var b=0;b<this.variables.length;b++){var a=this.variables[b];a.renderTargets[0]=this.createRenderTarget(f,g,a.wrapS,a.wrapT,a.minFilter,a.magFilter);a.renderTargets[1]=this.createRenderTarget(f,g,a.wrapS,a.wrapT,a.minFilter,a.magFilter);this.renderTexture(a.initialValueTexture,a.renderTargets[0]);this.renderTexture(a.initialValueTexture,a.renderTargets[1]);var c=a.material,h=c.uniforms;if(null!==a.dependencies)for(var d=
0;d<a.dependencies.length;d++){var e=a.dependencies[d];if(e.name!==a.name){for(var v=!1,p=0;p<this.variables.length;p++)if(e.name===this.variables[p].name){v=!0;break}if(!v)return"Variable dependency not found. Variable\x3d"+a.name+", dependency\x3d"+e.name}h[e.name]={value:null};c.fragmentShader="\nuniform sampler2D "+e.name+";\n"+c.fragmentShader}}this.currentTextureIndex=0;return null};this.compute=function(){for(var b=this.currentTextureIndex,a=0===this.currentTextureIndex?1:0,c=0,h=this.variables.length;c<
h;c++){var d=this.variables[c];if(null!==d.dependencies)for(var e=d.material.uniforms,f=0,g=d.dependencies.length;f<g;f++){var k=d.dependencies[f];e[k.name].value=k.renderTargets[b].texture}this.doRenderTarget(d.material,d.renderTargets[a])}this.currentTextureIndex=a};this.getCurrentRenderTarget=function(b){return b.renderTargets[this.currentTextureIndex]};this.getAlternateRenderTarget=function(b){return b.renderTargets[0===this.currentTextureIndex?1:0]};this.addResolutionDefine=q;this.createShaderMaterial=
r;this.createRenderTarget=function(b,a,c,h,d,e){b=b||f;a=a||g;c=c||THREE.ClampToEdgeWrapping;h=h||THREE.ClampToEdgeWrapping;d=d||THREE.NearestFilter;e=e||THREE.NearestFilter;return new THREE.WebGLRenderTarget(b,a,{wrapS:c,wrapT:h,minFilter:d,magFilter:e,format:THREE.RGBAFormat,type:/(iPad|iPhone|iPod)/g.test(navigator.userAgent)?THREE.HalfFloatType:THREE.FloatType,stencilBuffer:!1})};this.createTexture=function(b,a){b=b||f;a=a||g;var c=new Float32Array(b*a*4),c=new THREE.DataTexture(c,f,g,THREE.RGBAFormat,
THREE.FloatType);c.needsUpdate=!0;return c};this.renderTexture=function(b,a){l.texture.value=b;this.doRenderTarget(m,a);l.texture.value=null};this.doRenderTarget=function(b,a){n.material=b;k.render(t,u,a);n.material=m}};