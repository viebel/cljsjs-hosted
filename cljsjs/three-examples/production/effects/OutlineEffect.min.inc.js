THREE.OutlineEffect=function(e,d){function l(){return new THREE.ShaderMaterial({name:"invisible",visible:!1})}function m(b){var a;a=f[b.uuid];if(void 0===a){a:{a=p[b.type];var c;if(void 0!==a)a=THREE.ShaderLib[a],c=a.uniforms,a=a.vertexShader;else if(!0===b.isRawShaderMaterial){if(c=b.uniforms,a=b.vertexShader,!/attribute\s+vec3\s+position\s*;/.test(a)||!/attribute\s+vec3\s+normal\s*;/.test(a)){console.warn("THREE.OutlineEffect requires both vec3 position and normal attributes in vertex shader, does not draw outline for "+
b.name+"(uuid:"+b.uuid+") material.");a=l();break a}}else if(!0===b.isShaderMaterial)c=b.uniforms,a=b.vertexShader;else{a=l();break a}c=Object.assign({},c,q);var e=a.replace(/void\s+main\s*\(\s*\)/,"#include \x3cfog_pars_vertex\x3e\nuniform float outlineThickness;\nvec4 calculateOutline( vec4 pos, vec3 objectNormal, vec4 skinned ) {\n\tfloat thickness \x3d outlineThickness;\n\tconst float ratio \x3d 1.0;\n\tvec4 pos2 \x3d projectionMatrix * modelViewMatrix * vec4( skinned.xyz + objectNormal, 1.0 );\n\tvec4 norm \x3d normalize( pos - pos2 );\n\treturn pos + norm * thickness * pos.w * ratio;\n}\nvoid main()").replace(/\}\s*$/,
"#if ! defined( LAMBERT ) \x26\x26 ! defined( PHONG ) \x26\x26 ! defined( TOON ) \x26\x26 ! defined( PHYSICAL )\n\t#ifndef USE_ENVMAP\n\t\tvec3 objectNormal \x3d normalize( normal );\n\t#endif\n#endif\n#ifdef FLIP_SIDED\n\tobjectNormal \x3d -objectNormal;\n#endif\n#ifdef DECLARE_TRANSFORMED\n\tvec3 transformed \x3d vec3( position );\n#endif\ngl_Position \x3d calculateOutline( gl_Position, objectNormal, vec4( transformed, 1.0 ) );\n#include \x3cfog_vertex\x3e\n}").replace(/#include\s+<[\w_]*light[\w_]*>/g,
""),d={};/vec3\s+transformed\s*=/.test(a)||/#include\s+<begin_vertex>/.test(a)||(d.DECLARE_TRANSFORMED=!0);a=new THREE.ShaderMaterial({defines:d,uniforms:c,vertexShader:e,fragmentShader:"#include \x3ccommon\x3e\n#include \x3cfog_pars_fragment\x3e\nuniform vec3 outlineColor;\nuniform float outlineAlpha;\nvoid main() {\n\tgl_FragColor \x3d vec4( outlineColor, outlineAlpha );\n\t#include \x3cfog_fragment\x3e\n}",side:THREE.BackSide,skinning:!1,morphTargets:!1,morphNormals:!1,fog:!1})}a={material:a,used:!0,
keepAlive:r,count:0};f[b.uuid]=a}a.used=!0;a=a.material;h[a.uuid]=b;"invisible"!==a.name&&(c=b.outlineParameters,a.skinning=b.skinning,a.morphTargets=b.morphTargets,a.morphNormals=b.morphNormals,a.fog=b.fog,void 0!==c?(a.visible=!1===b.visible?!1:void 0!==c.visible?c.visible:!0,a.transparent=void 0!==c.alpha&&1>c.alpha?!0:b.transparent,void 0!==c.keepAlive&&(f[b.uuid].keepAlive=c.keepAlive)):(a.transparent=b.transparent,a.visible=b.visible),!0===b.wireframe||!1===b.depthTest)&&(a.visible=!1);return a}
function t(b){if(void 0!==b.material){if(Array.isArray(b.material))for(var a=0,c=b.material.length;a<c;a++)b.material[a]=m(b.material[a]);else b.material=m(b.material);n[b.uuid]=b.onBeforeRender;b.onBeforeRender=u}}function v(b){if(void 0!==b.material){if(Array.isArray(b.material))for(var a=0,c=b.material.length;a<c;a++)b.material[a]=h[b.material[a].uuid];else b.material=h[b.material.uuid];b.onBeforeRender=n[b.uuid]}}function u(b,a,c,e,d,f){b=h[d.uuid];void 0!==b&&(a=b.outlineParameters,d.uniforms.outlineAlpha.value=
b.opacity,void 0!==a&&(void 0!==a.thickness&&(d.uniforms.outlineThickness.value=a.thickness),void 0!==a.color&&d.uniforms.outlineColor.value.copy(a.color),void 0!==a.alpha&&(d.uniforms.outlineAlpha.value=a.alpha)))}d=d||{};this.enabled=!0;var w=void 0!==d.defaultThickness?d.defaultThickness:.003,x=void 0!==d.defaultColor?d.defaultColor:new THREE.Color(0),r=void 0!==d.defaultKeepAlive?d.defaultKeepAlive:!1,f={},h={},n={},p={MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",
MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical"},q={outlineThickness:{type:"f",value:w},outlineColor:{type:"c",value:x},outlineAlpha:{type:"f",value:void 0!==d.defaultAlpha?d.defaultAlpha:1}};this.render=function(b,a,c,d){if(!1===this.enabled)e.render(b,a,c,d);else{var l=e.autoClear;e.autoClear=this.autoClear;e.render(b,a,c,d);d=b.autoUpdate;var m=b.background,p=e.shadowMap.enabled;b.autoUpdate=!1;b.background=null;e.autoClear=!1;e.shadowMap.enabled=!1;b.traverse(t);
e.render(b,a,c);b.traverse(v);a=Object.keys(h);c=0;for(var k=a.length;c<k;c++)h[a[c]]=void 0;a=Object.keys(n);c=0;for(k=a.length;c<k;c++)n[a[c]]=void 0;a=Object.keys(f);c=0;for(k=a.length;c<k;c++){var g=a[c];!1===f[g].used?(f[g].count++,!1===f[g].keepAlive&&60<f[g].count&&delete f[g]):(f[g].used=!1,f[g].count=0)}b.autoUpdate=d;b.background=m;e.autoClear=l;e.shadowMap.enabled=p}};this.autoClear=e.autoClear;this.domElement=e.domElement;this.shadowMap=e.shadowMap;this.clear=function(b,a,c){e.clear(b,
a,c)};this.getPixelRatio=function(){return e.getPixelRatio()};this.setPixelRatio=function(b){e.setPixelRatio(b)};this.getSize=function(){return e.getSize()};this.setSize=function(b,a,c){e.setSize(b,a,c)};this.setViewport=function(b,a,c,d){e.setViewport(b,a,c,d)};this.setScissor=function(b,a,c,d){e.setScissor(b,a,c,d)};this.setScissorTest=function(b){e.setScissorTest(b)};this.setRenderTarget=function(b){e.setRenderTarget(b)}};