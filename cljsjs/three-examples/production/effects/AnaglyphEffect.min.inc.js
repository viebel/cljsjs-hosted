THREE.AnaglyphEffect=function(c,a,b){this.colorMatrixLeft=(new THREE.Matrix3).fromArray([1.0671679973602295,-.0016435992438346148,1.777536963345483E-4,-.028107794001698494,-1.9593400065787137E-4,-2.875397040043026E-4,-.04279090091586113,1.5809757314855233E-5,-2.4287120322696865E-4]);this.colorMatrixRight=(new THREE.Matrix3).fromArray([-.0355340838432312,-.06440307199954987,.018319187685847282,-.10269022732973099,.8079727292060852,-.04835830628871918,1.224992738571018E-4,-.009558862075209618,.567823588848114]);
var l=new THREE.OrthographicCamera(-1,1,1,-1,0,1),h=new THREE.Scene,f=new THREE.StereoCamera,k={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat};void 0===a&&(a=512);void 0===b&&(b=512);var d=new THREE.WebGLRenderTarget(a,b,k),e=new THREE.WebGLRenderTarget(a,b,k);a=new THREE.ShaderMaterial({uniforms:{mapLeft:{value:d.texture},mapRight:{value:e.texture},colorMatrixLeft:{value:this.colorMatrixLeft},colorMatrixRight:{value:this.colorMatrixRight}},vertexShader:"varying vec2 vUv;\nvoid main() {\n\tvUv \x3d vec2( uv.x, uv.y );\n\tgl_Position \x3d projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragmentShader:"uniform sampler2D mapLeft;\nuniform sampler2D mapRight;\nvarying vec2 vUv;\nuniform mat3 colorMatrixLeft;\nuniform mat3 colorMatrixRight;\nfloat lin( float c ) {\n\treturn c \x3c\x3d 0.04045 ? c * 0.0773993808 :\n\t\t\tpow( c * 0.9478672986 + 0.0521327014, 2.4 );\n}\nvec4 lin( vec4 c ) {\n\treturn vec4( lin( c.r ), lin( c.g ), lin( c.b ), c.a );\n}\nfloat dev( float c ) {\n\treturn c \x3c\x3d 0.0031308 ? c * 12.92\n\t\t\t: pow( c, 0.41666 ) * 1.055 - 0.055;\n}\nvoid main() {\n\tvec2 uv \x3d vUv;\n\tvec4 colorL \x3d lin( texture2D( mapLeft, uv ) );\n\tvec4 colorR \x3d lin( texture2D( mapRight, uv ) );\n\tvec3 color \x3d clamp(\n\t\t\tcolorMatrixLeft * colorL.rgb +\n\t\t\tcolorMatrixRight * colorR.rgb, 0., 1. );\n\tgl_FragColor \x3d vec4(\n\t\t\tdev( color.r ), dev( color.g ), dev( color.b ),\n\t\t\tmax( colorL.a, colorR.a ) );\n}"});
a=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),a);h.add(a);this.setSize=function(a,g){c.setSize(a,g);var b=c.getPixelRatio();d.setSize(a*b,g*b);e.setSize(a*b,g*b)};this.render=function(a,b){a.updateMatrixWorld();null===b.parent&&b.updateMatrixWorld();f.update(b);c.render(a,f.cameraL,d,!0);c.render(a,f.cameraR,e,!0);c.render(h,l)};this.dispose=function(){d&&d.dispose();e&&e.dispose()}};