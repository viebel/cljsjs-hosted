THREE.PositionNode=function(a){THREE.TempNode.call(this,"v3");this.scope=a||THREE.PositionNode.LOCAL};THREE.PositionNode.LOCAL="local";THREE.PositionNode.WORLD="world";THREE.PositionNode.VIEW="view";THREE.PositionNode.PROJECTION="projection";THREE.PositionNode.prototype=Object.create(THREE.TempNode.prototype);THREE.PositionNode.prototype.constructor=THREE.PositionNode;THREE.PositionNode.prototype.nodeType="Position";THREE.PositionNode.prototype.getType=function(a){switch(this.scope){case THREE.PositionNode.PROJECTION:return"v4"}return this.type};
THREE.PositionNode.prototype.isShared=function(a){switch(this.scope){case THREE.PositionNode.LOCAL:case THREE.PositionNode.WORLD:return!1}return!0};
THREE.PositionNode.prototype.generate=function(a,b){var d=a.material,c;switch(this.scope){case THREE.PositionNode.LOCAL:d.requires.position=!0;c=a.isShader("vertex")?"transformed":"vPosition";break;case THREE.PositionNode.WORLD:d.requires.worldPosition=!0;a.isShader("vertex");c="vWPosition";break;case THREE.PositionNode.VIEW:c=a.isShader("vertex")?"-mvPosition.xyz":"vViewPosition";break;case THREE.PositionNode.PROJECTION:c=a.isShader("vertex")?"(projectionMatrix * modelViewMatrix * vec4( position, 1.0 ))":
"vec4( 0.0 )"}return a.format(c,this.getType(a),b)};THREE.PositionNode.prototype.toJSON=function(a){var b=this.getJSONNode(a);b||(b=this.createJSONNode(a),b.scope=this.scope);return b};