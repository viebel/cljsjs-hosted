THREE.NodeMaterial=function(a,b){THREE.ShaderMaterial.call(this);this.vertex=a||new THREE.RawNode(new THREE.PositionNode(THREE.PositionNode.PROJECTION));this.fragment=b||new THREE.RawNode(new THREE.ColorNode(16711680));this.updaters=[]};THREE.NodeMaterial.types={t:"sampler2D",tc:"samplerCube",bv1:"bool",iv1:"int",fv1:"float",c:"vec3",v2:"vec2",v3:"vec3",v4:"vec4",m3:"mat3",m4:"mat4"};
THREE.NodeMaterial.addShortcuts=function(a,b,d){function c(a,b){return{get:function(){return this[a][b]},set:function(c){this[a][b]=c}}}return function(){for(var e={},f=0;f<d.length;++f){var g=d[f];e[g]=c(b,g)}Object.defineProperties(a,e)}()};THREE.NodeMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype);THREE.NodeMaterial.prototype.constructor=THREE.NodeMaterial;THREE.NodeMaterial.prototype.type="NodeMaterial";THREE.NodeMaterial.prototype.updateFrame=function(a){for(var b=0;b<this.updaters.length;++b)a.updateNode(this.updaters[b])};
THREE.NodeMaterial.prototype.build=function(){var a,b;this.nodes=[];this.defines={};this.uniforms={};this.attributes={};this.extensions={};this.nodeData={};this.vertexUniform=[];this.fragmentUniform=[];this.vars=[];this.vertexTemps=[];this.fragmentTemps=[];this.uniformList=[];this.consts=[];this.functions=[];this.updaters=[];this.requires={uv:[],color:[],lights:this.lights,fog:this.fog};this.fragmentNode=this.vertexNode=this.fragmentCode=this.vertexCode=this.fragmentPars=this.vertexPars="";this.prefixCode=
"#ifdef GL_EXT_shader_texture_lod\n\t#define texCube(a, b) textureCube(a, b)\n\t#define texCubeBias(a, b, c) textureCubeLodEXT(a, b, c)\n\t#define tex2D(a, b) texture2D(a, b)\n\t#define tex2DBias(a, b, c) texture2DLodEXT(a, b, c)\n#else\n\t#define texCube(a, b) textureCube(a, b)\n\t#define texCubeBias(a, b, c) textureCube(a, b, c)\n\t#define tex2D(a, b) texture2D(a, b)\n\t#define tex2DBias(a, b, c) texture2D(a, b, c)\n#endif\n#include \x3cpacking\x3e";b=new THREE.NodeBuilder(this);a=this.vertex.build(b.setShader("vertex"),
"v4");b=this.fragment.build(b.setShader("fragment"),"v4");this.requires.uv[0]&&(this.addVertexPars("varying vec2 vUv;"),this.addFragmentPars("varying vec2 vUv;"),this.addVertexCode("vUv \x3d uv;"));this.requires.uv[1]&&(this.addVertexPars("varying vec2 vUv2; attribute vec2 uv2;"),this.addFragmentPars("varying vec2 vUv2;"),this.addVertexCode("vUv2 \x3d uv2;"));this.requires.color[0]&&(this.addVertexPars("varying vec4 vColor; attribute vec4 color;"),this.addFragmentPars("varying vec4 vColor;"),this.addVertexCode("vColor \x3d color;"));
this.requires.color[1]&&(this.addVertexPars("varying vec4 vColor2; attribute vec4 color2;"),this.addFragmentPars("varying vec4 vColor2;"),this.addVertexCode("vColor2 \x3d color2;"));this.requires.position&&(this.addVertexPars("varying vec3 vPosition;"),this.addFragmentPars("varying vec3 vPosition;"),this.addVertexCode("vPosition \x3d transformed;"));this.requires.worldPosition&&(this.addVertexPars("varying vec3 vWPosition;"),this.addFragmentPars("varying vec3 vWPosition;"),this.addVertexCode("vWPosition \x3d ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;"));
this.requires.normal&&(this.addVertexPars("varying vec3 vObjectNormal;"),this.addFragmentPars("varying vec3 vObjectNormal;"),this.addVertexCode("vObjectNormal \x3d normal;"));this.requires.worldNormal&&(this.addVertexPars("varying vec3 vWNormal;"),this.addFragmentPars("varying vec3 vWNormal;"),this.addVertexCode("vWNormal \x3d ( modelMatrix * vec4( objectNormal, 0.0 ) ).xyz;"));this.fog=this.requires.fog;this.lights=this.requires.lights;this.transparent=this.requires.transparent||this.blending>THREE.NormalBlending;
this.vertexShader=[this.prefixCode,this.vertexPars,this.getCodePars(this.vertexUniform,"uniform"),this.getIncludes(this.consts.vertex),this.getIncludes(this.functions.vertex),"void main(){",this.getCodePars(this.vertexTemps),a,this.vertexCode,"}"].join("\n");this.fragmentShader=[this.prefixCode,this.fragmentPars,this.getCodePars(this.fragmentUniform,"uniform"),this.getIncludes(this.consts.fragment),this.getIncludes(this.functions.fragment),"void main(){",this.getCodePars(this.fragmentTemps),this.fragmentCode,
b,"}"].join("\n");this.needsUpdate=!0;this.dispose();return this};THREE.NodeMaterial.prototype.define=function(a,b){this.defines[a]=void 0==b?1:b};THREE.NodeMaterial.prototype.isDefined=function(a){return void 0!=this.defines[a]};THREE.NodeMaterial.prototype.mergeUniform=function(a){for(var b in a)this.uniforms[b]=a[b]};THREE.NodeMaterial.prototype.createUniform=function(a,b,d,c){var e=this.uniformList.length;a={type:a,value:b,name:d?d:"nVu"+e,needsUpdate:c};this.uniformList.push(a);return a};
THREE.NodeMaterial.prototype.getVertexTemp=function(a,b,d){var c=this.vertexTemps[a];c||(c=this.vertexTemps.length,c={name:d?d:"nVt"+c,type:b},this.vertexTemps.push(c),this.vertexTemps[a]=c);return c};THREE.NodeMaterial.prototype.getFragmentTemp=function(a,b,d){var c=this.fragmentTemps[a];c||(c=this.fragmentTemps.length,c={name:d?d:"nVt"+c,type:b},this.fragmentTemps.push(c),this.fragmentTemps[a]=c);return c};
THREE.NodeMaterial.prototype.getVar=function(a,b,d){var c=this.vars[a];c||(c=this.vars.length,d=d?d:"nVv"+c,c={name:d,type:b},this.vars.push(c),this.vars[a]=c,this.addVertexPars("varying "+b+" "+d+";"),this.addFragmentPars("varying "+b+" "+d+";"));return c};THREE.NodeMaterial.prototype.getAttribute=function(a,b){if(!this.attributes[a]){var d=this.getVar(a,b);this.addVertexPars("attribute "+b+" "+a+";");this.addVertexCode(d.name+" \x3d "+a+";");this.attributes[a]={varying:d,name:a,type:b}}return this.attributes[a]};
THREE.NodeMaterial.prototype.getIncludes=function(){function a(a,d){return a.deps.length-d.deps.length}return function(b){if(!b)return"";var d="";b=b.sort(a);for(var c=0;c<b.length;c++)b[c].src&&(d+=b[c].src+"\n");return d}}();THREE.NodeMaterial.prototype.addVertexPars=function(a){this.vertexPars+=a+"\n"};THREE.NodeMaterial.prototype.addFragmentPars=function(a){this.fragmentPars+=a+"\n"};THREE.NodeMaterial.prototype.addVertexCode=function(a){this.vertexCode+=a+"\n"};
THREE.NodeMaterial.prototype.addFragmentCode=function(a){this.fragmentCode+=a+"\n"};THREE.NodeMaterial.prototype.addVertexNode=function(a){this.vertexNode+=a+"\n"};THREE.NodeMaterial.prototype.clearVertexNode=function(){var a=this.vertexNode;this.vertexNode="";return a};THREE.NodeMaterial.prototype.addFragmentNode=function(a){this.fragmentNode+=a+"\n"};THREE.NodeMaterial.prototype.clearFragmentNode=function(){var a=this.fragmentNode;this.fragmentNode="";return a};
THREE.NodeMaterial.prototype.getCodePars=function(a,b){b=b||"";for(var d="",c=0,e=a.length;c<e;++c){var f=a[c].type,g=a[c].name,h=a[c].value;"t"==f&&h instanceof THREE.CubeTexture&&(f="tc");h=THREE.NodeMaterial.types[f];if(void 0==h)throw Error("Node pars "+f+" not found.");d+=b+" "+h+" "+g+";\n"}return d};THREE.NodeMaterial.prototype.createVertexUniform=function(a,b,d,c){a=this.createUniform(a,b,d,c);this.vertexUniform.push(a);this.vertexUniform[a.name]=a;return this.uniforms[a.name]=a};
THREE.NodeMaterial.prototype.createFragmentUniform=function(a,b,d,c){a=this.createUniform(a,b,d,c);this.fragmentUniform.push(a);this.fragmentUniform[a.name]=a;return this.uniforms[a.name]=a};THREE.NodeMaterial.prototype.getDataNode=function(a){return this.nodeData[a]=this.nodeData[a]||{}};
THREE.NodeMaterial.prototype.include=function(a,b,d,c){var e;b="string"===typeof b?THREE.NodeLib.get(b):b;b instanceof THREE.FunctionNode?e=this.functions[a.shader]=this.functions[a.shader]||[]:b instanceof THREE.ConstNode&&(e=this.consts[a.shader]=this.consts[a.shader]||[]);var f=e[b.name];f||(f=e[b.name]={node:b,deps:[]},e.push(f),f.src=b.build(a,"source"));if(b instanceof THREE.FunctionNode&&d&&e[d.name]&&-1==e[d.name].deps.indexOf(b)&&(e[d.name].deps.push(b),b.includes&&b.includes.length)){e=
0;do this.include(a,b.includes[e++],d);while(e<b.includes.length)}c&&(f.src=c)};
THREE.NodeMaterial.prototype.toJSON=function(a){if(void 0===a||"string"===typeof a)a={nodes:{}};a&&!a.materials&&(a.materials={});if(!a.materials[this.uuid]){var b={};b.uuid=this.uuid;b.type=this.type;a.materials[b.uuid]=b;""!==this.name&&(b.name=this.name);this.blending!==THREE.NormalBlending&&(b.blending=this.blending);!0===this.flatShading&&(b.flatShading=this.flatShading);this.side!==THREE.FrontSide&&(b.side=this.side);!0===this.transparent&&(b.transparent=this.transparent);b.depthFunc=this.depthFunc;
b.depthTest=this.depthTest;b.depthWrite=this.depthWrite;!0===this.wireframe&&(b.wireframe=this.wireframe);1<this.wireframeLinewidth&&(b.wireframeLinewidth=this.wireframeLinewidth);"round"!==this.wireframeLinecap&&(b.wireframeLinecap=this.wireframeLinecap);"round"!==this.wireframeLinejoin&&(b.wireframeLinejoin=this.wireframeLinejoin);!0===this.morphTargets&&(b.morphTargets=!0);!0===this.skinning&&(b.skinning=!0);b.fog=this.fog;b.lights=this.lights;!1===this.visible&&(b.visible=!1);"{}"!==JSON.stringify(this.userData)&&
(b.userData=this.userData);b.vertex=this.vertex.toJSON(a).uuid;b.fragment=this.fragment.toJSON(a).uuid}a.material=this.uuid;return a};