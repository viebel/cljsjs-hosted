THREE.ReflectorNode=function(a){THREE.TempNode.call(this,"v4");a&&this.setMirror(a)};THREE.ReflectorNode.prototype=Object.create(THREE.TempNode.prototype);THREE.ReflectorNode.prototype.constructor=THREE.ReflectorNode;THREE.ReflectorNode.prototype.nodeType="Reflector";
THREE.ReflectorNode.prototype.setMirror=function(a){this.mirror=a;this.textureMatrix=new THREE.Matrix4Node(this.mirror.material.uniforms.textureMatrix.value);this.localPosition=new THREE.PositionNode(THREE.PositionNode.LOCAL);this.coord=new THREE.OperatorNode(this.textureMatrix,this.localPosition,THREE.OperatorNode.MUL);this.coordResult=new THREE.OperatorNode(null,this.coord,THREE.OperatorNode.ADD);this.texture=new THREE.TextureNode(this.mirror.material.uniforms.tDiffuse.value,this.coord,null,!0)};
THREE.ReflectorNode.prototype.generate=function(a,b){if(a.isShader("fragment"))return this.coordResult.a=this.offset,this.texture.coord=this.offset?this.coordResult:this.coord,"sampler2D"===b?this.texture.build(a,b):a.format(this.texture.build(a,this.type),this.type,b);console.warn("THREE.ReflectorNode is not compatible with "+a.shader+" shader.");return a.format("vec4(0.0)",this.type,b)};
THREE.ReflectorNode.prototype.toJSON=function(a){var b=this.getJSONNode(a);b||(b=this.createJSONNode(a),b.mirror=this.mirror.uuid,this.offset&&(b.offset=this.offset.toJSON(a).uuid));return b};