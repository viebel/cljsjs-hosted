THREE.Math2Node=function(a,c,b){THREE.TempNode.call(this);this.a=a;this.b=c;this.method=b||THREE.Math2Node.DISTANCE};THREE.Math2Node.MIN="min";THREE.Math2Node.MAX="max";THREE.Math2Node.MOD="mod";THREE.Math2Node.STEP="step";THREE.Math2Node.REFLECT="reflect";THREE.Math2Node.DISTANCE="distance";THREE.Math2Node.DOT="dot";THREE.Math2Node.CROSS="cross";THREE.Math2Node.POW="pow";THREE.Math2Node.prototype=Object.create(THREE.TempNode.prototype);THREE.Math2Node.prototype.constructor=THREE.Math2Node;
THREE.Math2Node.prototype.nodeType="Math2";THREE.Math2Node.prototype.getInputType=function(a){return a.getFormatLength(this.b.getType(a))>a.getFormatLength(this.a.getType(a))?this.b.getType(a):this.a.getType(a)};THREE.Math2Node.prototype.getType=function(a){switch(this.method){case THREE.Math2Node.DISTANCE:case THREE.Math2Node.DOT:return"fv1";case THREE.Math2Node.CROSS:return"v3"}return this.getInputType(a)};
THREE.Math2Node.prototype.generate=function(a,c){var b=this.getInputType(a),d;d=a.getFormatLength(this.a.getType(a));var e=a.getFormatLength(this.b.getType(a));switch(this.method){case THREE.Math2Node.CROSS:d=this.a.build(a,"v3");b=this.b.build(a,"v3");break;case THREE.Math2Node.STEP:d=this.a.build(a,1==d?"fv1":b);b=this.b.build(a,b);break;case THREE.Math2Node.MIN:case THREE.Math2Node.MAX:case THREE.Math2Node.MOD:d=this.a.build(a,b);b=this.b.build(a,1==e?"fv1":b);break;default:d=this.a.build(a,b),
b=this.b.build(a,b)}return a.format(this.method+"("+d+","+b+")",this.getType(a),c)};THREE.Math2Node.prototype.toJSON=function(a){var c=this.getJSONNode(a);c||(c=this.createJSONNode(a),c.a=this.a.toJSON(a).uuid,c.b=this.b.toJSON(a).uuid,c.method=this.method);return c};