THREE.FunctionNode=function(b,a,c,e){b=b||"";this.isMethod="string"!==typeof a;this.useKeywords=!0;THREE.TempNode.call(this,this.isMethod?null:a);this.isMethod?this.eval(b,a,c,e):this.eval(b,c,e)};THREE.FunctionNode.rDeclaration=/^([a-z_0-9]+)\s([a-z_0-9]+)\s?\((.*?)\)/i;THREE.FunctionNode.rProperties=/[a-z_0-9]+/ig;THREE.FunctionNode.prototype=Object.create(THREE.TempNode.prototype);THREE.FunctionNode.prototype.constructor=THREE.FunctionNode;THREE.FunctionNode.prototype.nodeType="Function";
THREE.FunctionNode.prototype.isShared=function(b,a){return!this.isMethod};THREE.FunctionNode.prototype.getType=function(b){return b.getTypeByFormat(this.type)};THREE.FunctionNode.prototype.getInputByName=function(b){for(var a=this.inputs.length;a--;)if(this.inputs[a].name===b)return this.inputs[a]};THREE.FunctionNode.prototype.getIncludeByName=function(b){for(var a=this.includes.length;a--;)if(this.includes[a].name===b)return this.includes[a]};
THREE.FunctionNode.prototype.generate=function(b,a){var c,e=0,f=this.value;for(c=0;c<this.includes.length;c++)b.include(this.includes[c],this);for(var d in this.extensions)b.material.extensions[d]=!0;for(;c=THREE.FunctionNode.rProperties.exec(this.value);){d=c[0];var h=this.isMethod?!this.getInputByName(d):!0,g=d;if(this.keywords[d]||this.useKeywords&&h&&THREE.NodeLib.containsKeyword(d))h=this.keywords[d],h||(g=THREE.NodeLib.getKeywordData(d),g.cache&&(h=b.keywords[d]),h=h||THREE.NodeLib.getKeyword(d,
b),g.cache&&(b.keywords[d]=h)),g=h.build(b);d!=g&&(f=f.substring(0,c.index+e)+g+f.substring(c.index+d.length+e),e+=g.length-d.length);void 0===this.getIncludeByName(g)&&THREE.NodeLib.contains(g)&&b.include(THREE.NodeLib.get(g))}return"source"===a?f:this.isMethod?(b.include(this,!1,f),this.name):b.format("("+f+")",this.getType(b),a)};
THREE.FunctionNode.prototype.eval=function(b,a,c,e){b=(b||"").trim();this.includes=a||[];this.extensions=c||{};this.keywords=e||{};if(this.isMethod)if(a=b.match(THREE.FunctionNode.rDeclaration),this.inputs=[],a&&4==a.length){if(this.type=a[1],this.name=a[2],a=a[3].match(THREE.FunctionNode.rProperties))for(c=0;c<a.length;){e=a[c++];var f,d;"in"==e||"out"==e||"inout"==e?f=a[c++]:(f=e,e="");d=a[c++];this.inputs.push({name:d,type:f,qualifier:e})}}else this.name=this.type="";this.value=b};
THREE.FunctionNode.prototype.toJSON=function(b){var a=this.getJSONNode(b);if(!a){a=this.createJSONNode(b);a.src=this.value;a.isMethod=this.isMethod;a.useKeywords=this.useKeywords;this.isMethod||(a.out=this.type);a.extensions=JSON.parse(JSON.stringify(this.extensions));a.keywords={};for(var c in this.keywords)a.keywords[c]=this.keywords[c].toJSON(b).uuid;if(this.includes.length)for(a.includes=[],c=0;c<this.includes.length;c++)a.includes.push(this.includes[c].toJSON(b).uuid)}return a};