THREE.PhongNode=function(){THREE.GLNode.call(this);this.color=new THREE.ColorNode(15658734);this.specular=new THREE.ColorNode(1118481);this.shininess=new THREE.FloatNode(30)};THREE.PhongNode.prototype=Object.create(THREE.GLNode.prototype);THREE.PhongNode.prototype.constructor=THREE.PhongNode;THREE.PhongNode.prototype.nodeType="Phong";
THREE.PhongNode.prototype.build=function(a){var b=a.material;b.define("PHONG");b.define("ALPHATEST","0.0");b.requires.lights=!0;if(a.isShader("vertex"))a=this.transform?this.transform.parseAndBuildCode(a,"v3",{cache:"transform"}):void 0,b.mergeUniform(THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights])),b.addVertexPars("varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include \x3ccommon\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cshadowmap_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e"),
b="#include \x3cbeginnormal_vertex\x3e,#include \x3cmorphnormal_vertex\x3e,#include \x3cskinbase_vertex\x3e,#include \x3cskinnormal_vertex\x3e,#include \x3cdefaultnormal_vertex\x3e,#ifndef FLAT_SHADED,\tvNormal \x3d normalize( transformedNormal );,#endif,#include \x3cbegin_vertex\x3e".split(","),a&&b.push(a.code,"transformed \x3d "+a.result+";"),b.push("\t#include \x3cmorphtarget_vertex\x3e","\t#include \x3cskinning_vertex\x3e","\t#include \x3cproject_vertex\x3e","\t#include \x3cfog_vertex\x3e","\t#include \x3clogdepthbuf_vertex\x3e",
"\tvViewPosition \x3d - mvPosition.xyz;","\t#include \x3cworldpos_vertex\x3e","\t#include \x3cshadowmap_vertex\x3e");else{this.color.parse(a,{slot:"color"});this.specular.parse(a);this.shininess.parse(a);this.alpha&&this.alpha.parse(a);this.normal&&this.normal.parse(a);this.normalScale&&this.normal&&this.normalScale.parse(a);this.light&&this.light.parse(a,{cache:"light"});this.ao&&this.ao.parse(a);this.ambient&&this.ambient.parse(a);this.shadow&&this.shadow.parse(a);this.emissive&&this.emissive.parse(a,
{slot:"emissive"});this.environment&&this.environment.parse(a,{slot:"environment"});this.environmentAlpha&&this.environment&&this.environmentAlpha.parse(a);var p=this.color.buildCode(a,"c",{slot:"color"}),q=this.specular.buildCode(a,"c"),r=this.shininess.buildCode(a,"fv1"),c=this.alpha?this.alpha.buildCode(a,"fv1"):void 0,h=this.normal?this.normal.buildCode(a,"v3"):void 0,d=this.normalScale&&this.normal?this.normalScale.buildCode(a,"v2"):void 0,e=this.light?this.light.buildCode(a,"v3",{cache:"light"}):
void 0,k=this.ao?this.ao.buildCode(a,"fv1"):void 0,l=this.ambient?this.ambient.buildCode(a,"c"):void 0,f=this.shadow?this.shadow.buildCode(a,"c"):void 0,m=this.emissive?this.emissive.buildCode(a,"c",{slot:"emissive"}):void 0,g=this.environment?this.environment.buildCode(a,"c",{slot:"environment"}):void 0,n=this.environmentAlpha&&this.environment?this.environmentAlpha.buildCode(a,"fv1"):void 0;b.requires.transparent=void 0!=c;b.addFragmentPars("#include \x3ccommon\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cbsdfs\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3clights_phong_pars_fragment\x3e\n#include \x3cshadowmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e");
b=["#include \x3cnormal_fragment_begin\x3e","\tBlinnPhongMaterial material;",p.code,"\tvec3 diffuseColor \x3d "+p.result+";","\tReflectedLight reflectedLight \x3d ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );","#include \x3clogdepthbuf_fragment\x3e",q.code,"\tvec3 specular \x3d "+q.result+";",r.code,"\tfloat shininess \x3d max(0.0001,"+r.result+");","\tfloat specularStrength \x3d 1.0;"];c&&b.push(c.code,"if ( "+c.result+" \x3c\x3d ALPHATEST ) discard;");h&&(a.include("perturbNormal2Arb"),
b.push(h.code),d&&b.push(d.code),b.push("normal \x3d perturbNormal2Arb(-vViewPosition,normal,"+h.result+","+(new THREE.UVNode).build(a,"v2")+","+(d?d.result:"vec2( 1.0 )")+");"));b.push("material.diffuseColor \x3d "+(e?"vec3( 1.0 )":"diffuseColor")+";");b.push("material.specularColor \x3d specular;","material.specularShininess \x3d shininess;","material.specularStrength \x3d specularStrength;","#include \x3clights_fragment_begin\x3e","#include \x3clights_fragment_end\x3e");e&&(b.push(e.code,"reflectedLight.directDiffuse \x3d "+
e.result+";"),b.push("reflectedLight.directDiffuse *\x3d diffuseColor;","reflectedLight.indirectDiffuse *\x3d diffuseColor;"));k&&b.push(k.code,"reflectedLight.indirectDiffuse *\x3d "+k.result+";");l&&b.push(l.code,"reflectedLight.indirectDiffuse +\x3d "+l.result+";");f&&b.push(f.code,"reflectedLight.directDiffuse *\x3d "+f.result+";","reflectedLight.directSpecular *\x3d "+f.result+";");m&&b.push(m.code,"reflectedLight.directDiffuse +\x3d "+m.result+";");b.push("vec3 outgoingLight \x3d reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular;");
g&&(b.push(g.code),n?b.push(n.code,"outgoingLight \x3d mix( outgoingLight, "+g.result+", "+n.result+" );"):b.push("outgoingLight \x3d "+g.result+";"));c?b.push("gl_FragColor \x3d vec4( outgoingLight, "+c.result+" );"):b.push("gl_FragColor \x3d vec4( outgoingLight, 1.0 );");b.push("#include \x3cpremultiplied_alpha_fragment\x3e","#include \x3ctonemapping_fragment\x3e","#include \x3cencodings_fragment\x3e","#include \x3cfog_fragment\x3e")}return b.join("\n")};
THREE.PhongNode.prototype.toJSON=function(a){var b=this.getJSONNode(a);b||(b=this.createJSONNode(a),this.transform&&(b.transform=this.transform.toJSON(a).uuid),b.color=this.color.toJSON(a).uuid,b.specular=this.specular.toJSON(a).uuid,b.shininess=this.shininess.toJSON(a).uuid,this.alpha&&(b.alpha=this.alpha.toJSON(a).uuid),this.normal&&(b.normal=this.normal.toJSON(a).uuid),this.normalScale&&(b.normalScale=this.normalScale.toJSON(a).uuid),this.light&&(b.light=this.light.toJSON(a).uuid),this.ao&&(b.ao=
this.ao.toJSON(a).uuid),this.ambient&&(b.ambient=this.ambient.toJSON(a).uuid),this.shadow&&(b.shadow=this.shadow.toJSON(a).uuid),this.emissive&&(b.emissive=this.emissive.toJSON(a).uuid),this.environment&&(b.environment=this.environment.toJSON(a).uuid),this.environmentAlpha&&(b.environmentAlpha=this.environmentAlpha.toJSON(a).uuid));return b};