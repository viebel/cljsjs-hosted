THREE.StandardNode=function(){THREE.GLNode.call(this);this.color=new THREE.ColorNode(15658734);this.roughness=new THREE.FloatNode(.5);this.metalness=new THREE.FloatNode(.5)};THREE.StandardNode.prototype=Object.create(THREE.GLNode.prototype);THREE.StandardNode.prototype.constructor=THREE.StandardNode;THREE.StandardNode.prototype.nodeType="Standard";
THREE.StandardNode.prototype.build=function(b){var a=b.material;a.define("PHYSICAL");this.clearCoat||this.clearCoatRoughness||a.define("STANDARD");a.define("ALPHATEST","0.0");a.requires.lights=!0;a.extensions.shaderTextureLOD=!0;if(b.isShader("vertex"))b=this.transform?this.transform.parseAndBuildCode(b,"v3",{cache:"transform"}):void 0,a.mergeUniform(THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights])),a.addVertexPars("varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include \x3ccommon\x3e\n#include \x3cfog_pars_vertex\x3e\n#include \x3cmorphtarget_pars_vertex\x3e\n#include \x3cskinning_pars_vertex\x3e\n#include \x3cshadowmap_pars_vertex\x3e\n#include \x3clogdepthbuf_pars_vertex\x3e"),
a="#include \x3cbeginnormal_vertex\x3e,#include \x3cmorphnormal_vertex\x3e,#include \x3cskinbase_vertex\x3e,#include \x3cskinnormal_vertex\x3e,#include \x3cdefaultnormal_vertex\x3e,#include \x3clogdepthbuf_pars_vertex\x3e,#include \x3clogdepthbuf_pars_vertex\x3e,#include \x3clogdepthbuf_pars_vertex\x3e,#ifndef FLAT_SHADED,\tvNormal \x3d normalize( transformedNormal );,#endif,#include \x3cbegin_vertex\x3e".split(","),b&&a.push(b.code,"transformed \x3d "+b.result+";"),a.push("#include \x3cmorphtarget_vertex\x3e",
"#include \x3cskinning_vertex\x3e","#include \x3cproject_vertex\x3e","#include \x3cfog_vertex\x3e","#include \x3clogdepthbuf_vertex\x3e","\tvViewPosition \x3d - mvPosition.xyz;","#include \x3cworldpos_vertex\x3e","#include \x3cshadowmap_vertex\x3e");else{var c={bias:new THREE.RoughnessToBlinnExponentNode,offsetU:0,offsetV:0},l=!a.isDefined("STANDARD");this.color.parse(b,{slot:"color"});this.roughness.parse(b);this.metalness.parse(b);this.alpha&&this.alpha.parse(b);this.normal&&this.normal.parse(b);
this.normalScale&&this.normal&&this.normalScale.parse(b);this.clearCoat&&this.clearCoat.parse(b);this.clearCoatRoughness&&this.clearCoatRoughness.parse(b);this.reflectivity&&this.reflectivity.parse(b);this.light&&this.light.parse(b,{cache:"light"});this.ao&&this.ao.parse(b);this.ambient&&this.ambient.parse(b);this.shadow&&this.shadow.parse(b);this.emissive&&this.emissive.parse(b,{slot:"emissive"});this.environment&&this.environment.parse(b,{cache:"env",requires:c,slot:"environment"});var u=this.color.buildCode(b,
"c",{slot:"color"}),v=this.roughness.buildCode(b,"fv1"),w=this.metalness.buildCode(b,"fv1"),d=this.alpha?this.alpha.buildCode(b,"fv1"):void 0,m=this.normal?this.normal.buildCode(b,"v3"):void 0,e=this.normalScale&&this.normal?this.normalScale.buildCode(b,"v2"):void 0,n=this.clearCoat?this.clearCoat.buildCode(b,"fv1"):void 0,p=this.clearCoatRoughness?this.clearCoatRoughness.buildCode(b,"fv1"):void 0,q=this.reflectivity?this.reflectivity.buildCode(b,"fv1"):void 0,f=this.light?this.light.buildCode(b,
"v3",{cache:"light"}):void 0,g=this.ao?this.ao.buildCode(b,"fv1"):void 0,r=this.ambient?this.ambient.buildCode(b,"c"):void 0,h=this.shadow?this.shadow.buildCode(b,"c"):void 0,t=this.emissive?this.emissive.buildCode(b,"c",{slot:"emissive"}):void 0,k=this.environment?this.environment.buildCode(b,"c",{cache:"env",requires:c,slot:"environment"}):void 0,c=l&&k?this.environment.buildCode(b,"c",{cache:"clearCoat",requires:c,slot:"environment"}):void 0;a.requires.transparent=void 0!=d;a.addFragmentPars("varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include \x3ccommon\x3e\n#include \x3cfog_pars_fragment\x3e\n#include \x3cbsdfs\x3e\n#include \x3clights_pars_begin\x3e\n#include \x3clights_physical_pars_fragment\x3e\n#include \x3cshadowmap_pars_fragment\x3e\n#include \x3clogdepthbuf_pars_fragment\x3e\n#include \x3clogdepthbuf_vertex\x3e");
a=["\t#include \x3cnormal_fragment_begin\x3e","\tPhysicalMaterial material;","\tmaterial.diffuseColor \x3d vec3( 1.0 );",u.code,"\tvec3 diffuseColor \x3d "+u.result+";","\tReflectedLight reflectedLight \x3d ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );","#include \x3clogdepthbuf_fragment\x3e",v.code,"\tfloat roughnessFactor \x3d "+v.result+";",w.code,"\tfloat metalnessFactor \x3d "+w.result+";"];d&&a.push(d.code,"if ( "+d.result+" \x3c\x3d ALPHATEST ) discard;");m&&(b.include("perturbNormal2Arb"),
a.push(m.code),e&&a.push(e.code),a.push("normal \x3d perturbNormal2Arb(-vViewPosition,normal,"+m.result+","+(new THREE.UVNode).build(b,"v2")+","+(e?e.result:"vec2( 1.0 )")+");"));a.push("material.diffuseColor \x3d "+(f?"vec3( 1.0 )":"diffuseColor * (1.0 - metalnessFactor)")+";");a.push("material.specularRoughness \x3d clamp( roughnessFactor, DEFAULT_SPECULAR_COEFFICIENT, 1.0 );");n?a.push(n.code,"material.clearCoat \x3d saturate( "+n.result+" );"):l&&a.push("material.clearCoat \x3d 0.0;");p?a.push(p.code,
"material.clearCoatRoughness \x3d clamp( "+p.result+", DEFAULT_SPECULAR_COEFFICIENT, 1.0 );"):l&&a.push("material.clearCoatRoughness \x3d 0.0;");q?a.push(q.code,"material.specularColor \x3d mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( "+q.result+" ) ), diffuseColor, metalnessFactor );"):a.push("material.specularColor \x3d mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor, metalnessFactor );");a.push("#include \x3clights_fragment_begin\x3e","#include \x3clights_fragment_end\x3e");f&&(a.push(f.code,
"reflectedLight.directDiffuse \x3d "+f.result+";"),a.push("diffuseColor *\x3d 1.0 - metalnessFactor;","reflectedLight.directDiffuse *\x3d diffuseColor;","reflectedLight.indirectDiffuse *\x3d diffuseColor;"));g&&a.push(g.code,"reflectedLight.indirectDiffuse *\x3d "+g.result+";","float dotNV \x3d saturate( dot( geometry.normal, geometry.viewDir ) );","reflectedLight.indirectSpecular *\x3d computeSpecularOcclusion( dotNV, "+g.result+", material.specularRoughness );");r&&a.push(r.code,"reflectedLight.indirectDiffuse +\x3d "+
r.result+";");h&&a.push(h.code,"reflectedLight.directDiffuse *\x3d "+h.result+";","reflectedLight.directSpecular *\x3d "+h.result+";");t&&a.push(t.code,"reflectedLight.directDiffuse +\x3d "+t.result+";");k&&(a.push(k.code),c&&a.push(c.code,"clearCoatRadiance +\x3d "+c.result+";"),a.push("RE_IndirectSpecular("+k.result+", clearCoatRadiance, geometry, material, reflectedLight );"));a.push("vec3 outgoingLight \x3d reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular;");
d?a.push("gl_FragColor \x3d vec4( outgoingLight, "+d.result+" );"):a.push("gl_FragColor \x3d vec4( outgoingLight, 1.0 );");a.push("#include \x3cpremultiplied_alpha_fragment\x3e","#include \x3ctonemapping_fragment\x3e","#include \x3cencodings_fragment\x3e","#include \x3cfog_fragment\x3e")}return a.join("\n")};
THREE.StandardNode.prototype.toJSON=function(b){var a=this.getJSONNode(b);a||(a=this.createJSONNode(b),this.transform&&(a.transform=this.transform.toJSON(b).uuid),a.color=this.color.toJSON(b).uuid,a.roughness=this.roughness.toJSON(b).uuid,a.metalness=this.metalness.toJSON(b).uuid,this.alpha&&(a.alpha=this.alpha.toJSON(b).uuid),this.normal&&(a.normal=this.normal.toJSON(b).uuid),this.normalScale&&(a.normalScale=this.normalScale.toJSON(b).uuid),this.clearCoat&&(a.clearCoat=this.clearCoat.toJSON(b).uuid),
this.clearCoatRoughness&&(a.clearCoatRoughness=this.clearCoatRoughness.toJSON(b).uuid),this.reflectivity&&(a.reflectivity=this.reflectivity.toJSON(b).uuid),this.light&&(a.light=this.light.toJSON(b).uuid),this.ao&&(a.ao=this.ao.toJSON(b).uuid),this.ambient&&(a.ambient=this.ambient.toJSON(b).uuid),this.shadow&&(a.shadow=this.shadow.toJSON(b).uuid),this.emissive&&(a.emissive=this.emissive.toJSON(b).uuid),this.environment&&(a.environment=this.environment.toJSON(b).uuid));return a};