THREE.GLNode=function(a){this.uuid=THREE.Math.generateUUID();this.name="";this.allows={};this.type=a;this.userData={}};THREE.GLNode.prototype.isNode=!0;THREE.GLNode.prototype.parse=function(a,b){b=b||{};a.parsing=!0;var c=a.material;this.build(a.addCache(b.cache,b.requires).addSlot(b.slot),"v4");c.clearVertexNode();c.clearFragmentNode();a.removeCache().removeSlot();a.parsing=!1};THREE.GLNode.prototype.parseAndBuildCode=function(a,b,c){c=c||{};this.parse(a,c);return this.buildCode(a,b,c)};
THREE.GLNode.prototype.buildCode=function(a,b,c){c=c||{};var d=a.material;b={result:this.build(a.addCache(c.cache,c.requires).addSlot(c.slot),b)};a.isShader("vertex")?b.code=d.clearVertexNode():b.code=d.clearFragmentNode();a.removeCache().removeSlot();return b};
THREE.GLNode.prototype.build=function(a,b,c){b=b||this.getType(a,b);var d=a.material,e=d.getDataNode(c||this.uuid);a.parsing&&this.appendDepsNode(a,e,b);if(!1===this.allows[a.shader])throw Error("Shader "+shader+" is not compatible with this node.");-1===d.nodes.indexOf(this)&&d.nodes.push(this);void 0!==this.updateFrame&&-1===d.updaters.indexOf(this)&&d.updaters.push(this);return this.generate(a,b,c)};
THREE.GLNode.prototype.appendDepsNode=function(a,b,c){b.deps=(b.deps||0)+1;var d=a.getFormatLength(c);if(d>(b.outputMax||0)||this.getType(a,c))b.outputMax=d,b.output=c};THREE.GLNode.prototype.getType=function(a,b){return"sampler2D"===b||"samplerCube"===b?b:this.type};THREE.GLNode.prototype.getJSONNode=function(a){if(void 0!==a&&"string"!==typeof a&&void 0!==a.nodes[this.uuid])return a.nodes[this.uuid]};
THREE.GLNode.prototype.createJSONNode=function(a){var b=void 0===a||"string"===typeof a,c={};if("string"!==typeof this.nodeType)throw Error("Node does not allow serialization.");c.uuid=this.uuid;c.type=this.nodeType+"Node";""!==this.name&&(c.name=this.name);"{}"!==JSON.stringify(this.userData)&&(c.userData=this.userData);b||(a.nodes[this.uuid]=c);return c};THREE.GLNode.prototype.toJSON=function(a){return this.getJSONNode(a)||this.createJSONNode(a)};