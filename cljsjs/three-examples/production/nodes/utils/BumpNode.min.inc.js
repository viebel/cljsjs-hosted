THREE.BumpNode=function(a,b,c){THREE.TempNode.call(this,"v3");this.value=a;this.coord=b||new THREE.UVNode;this.scale=c||new THREE.Vector2Node(1,1)};
THREE.BumpNode.fBumpToNormal=new THREE.FunctionNode("vec3 bumpToNormal( sampler2D bumpMap, vec2 uv, vec2 scale ) {\n\tvec2 dSTdx \x3d dFdx( uv );\n\tvec2 dSTdy \x3d dFdy( uv );\n\tfloat Hll \x3d texture2D( bumpMap, uv ).x;\n\tfloat dBx \x3d texture2D( bumpMap, uv + dSTdx ).x - Hll;\n\tfloat dBy \x3d texture2D( bumpMap, uv + dSTdy ).x - Hll;\n\treturn vec3( .5 + ( dBx * scale.x ), .5 + ( dBy * scale.y ), 1.0 );\n}",null,{derivatives:!0});THREE.BumpNode.prototype=Object.create(THREE.TempNode.prototype);
THREE.BumpNode.prototype.constructor=THREE.BumpNode;THREE.BumpNode.prototype.nodeType="Bump";THREE.BumpNode.prototype.generate=function(a,b){var c=THREE.BumpNode.fBumpToNormal;a.include(c);if(a.isShader("fragment"))return a.format(c.name+"("+this.value.build(a,"sampler2D")+","+this.coord.build(a,"v2")+","+this.scale.build(a,"v2")+")",this.getType(a),b);console.warn("THREE.BumpNode is not compatible with "+a.shader+" shader.");return a.format("vec3( 0.0 )",this.getType(a),b)};
THREE.BumpNode.prototype.toJSON=function(a){var b=this.getJSONNode(a);b||(b=this.createJSONNode(a),b.value=this.value.toJSON(a).uuid,b.coord=this.coord.toJSON(a).uuid,b.scale=this.scale.toJSON(a).uuid);return b};