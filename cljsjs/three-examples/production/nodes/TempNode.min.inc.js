THREE.TempNode=function(a,b){THREE.GLNode.call(this,a);b=b||{};this.shared=void 0!==b.shared?b.shared:!0;this.unique=void 0!==b.unique?b.unique:!1};THREE.TempNode.prototype=Object.create(THREE.GLNode.prototype);THREE.TempNode.prototype.constructor=THREE.TempNode;
THREE.TempNode.prototype.build=function(a,b,c,g){b=b||this.getType(a);var f=a.material;if(this.isShared(a,b)){var d=this.isUnique(a,b);d&&void 0===this.constructor.uuid&&(this.constructor.uuid=THREE.Math.generateUUID());c=a.getUuid(c||this.getUuid(),!d);var e=f.getDataNode(c);if(a.parsing)return e.deps?(this.appendDepsNode(a,e,b),this.generate(a,h,c)):THREE.GLNode.prototype.build.call(this,a,b,c);if(d)return e.name=e.name||THREE.GLNode.prototype.build.call(this,a,b,c),e.name;if(!a.optimize||1==e.deps)return THREE.GLNode.prototype.build.call(this,
a,b,c);c=this.getUuid(!1);var d=this.getTemp(a,c),h=e.output||this.getType(a);d||(d=THREE.TempNode.prototype.generate.call(this,a,b,c,e.output,g),c=this.generate(a,h,c),a.isShader("vertex")?f.addVertexNode(d+"\x3d"+c+";"):f.addFragmentNode(d+"\x3d"+c+";"));return a.format(d,h,b)}return THREE.GLNode.prototype.build.call(this,a,b,c)};THREE.TempNode.prototype.isShared=function(a,b){return"sampler2D"!==b&&"samplerCube"!==b&&this.shared};THREE.TempNode.prototype.isUnique=function(a,b){return this.unique};
THREE.TempNode.prototype.getUuid=function(a){a=a||void 0==a?this.constructor.uuid||this.uuid:this.uuid;"string"==typeof this.scope&&(a=this.scope+"-"+a);return a};THREE.TempNode.prototype.getTemp=function(a,b){b=b||this.uuid;var c=a.material;if(a.isShader("vertex")&&c.vertexTemps[b])return c.vertexTemps[b].name;if(c.fragmentTemps[b])return c.fragmentTemps[b].name};
THREE.TempNode.prototype.generate=function(a,b,c,g,f){this.isShared(a,b)||console.error("THREE.TempNode is not shared!");c=c||this.uuid;return a.isShader("vertex")?a.material.getVertexTemp(c,g||this.getType(a),f).name:a.material.getFragmentTemp(c,g||this.getType(a),f).name};