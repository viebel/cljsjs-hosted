/**********************************************************************
 * Extern for ROT
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var ROT = {
  "isSupported": {
    "extend": {
      "extend": function () {}
    }
  },
  "DEFAULT_WIDTH": {},
  "DEFAULT_HEIGHT": {},
  "DIRS": {
    "4": {},
    "6": {},
    "8": {}
  },
  "VK_CANCEL": {},
  "VK_HELP": {},
  "VK_BACK_SPACE": {},
  "VK_TAB": {},
  "VK_CLEAR": {},
  "VK_RETURN": {},
  "VK_ENTER": {},
  "VK_SHIFT": {},
  "VK_CONTROL": {},
  "VK_ALT": {},
  "VK_PAUSE": {},
  "VK_CAPS_LOCK": {},
  "VK_ESCAPE": {},
  "VK_SPACE": {},
  "VK_PAGE_UP": {},
  "VK_PAGE_DOWN": {},
  "VK_END": {},
  "VK_HOME": {},
  "VK_LEFT": {},
  "VK_UP": {},
  "VK_RIGHT": {},
  "VK_DOWN": {},
  "VK_PRINTSCREEN": {},
  "VK_INSERT": {},
  "VK_DELETE": {},
  "VK_0": {},
  "VK_1": {},
  "VK_2": {},
  "VK_3": {},
  "VK_4": {},
  "VK_5": {},
  "VK_6": {},
  "VK_7": {},
  "VK_8": {},
  "VK_9": {},
  "VK_COLON": {},
  "VK_SEMICOLON": {},
  "VK_LESS_THAN": {},
  "VK_EQUALS": {},
  "VK_GREATER_THAN": {},
  "VK_QUESTION_MARK": {},
  "VK_AT": {},
  "VK_A": {},
  "VK_B": {},
  "VK_C": {},
  "VK_D": {},
  "VK_E": {},
  "VK_F": {},
  "VK_G": {},
  "VK_H": {},
  "VK_I": {},
  "VK_J": {},
  "VK_K": {},
  "VK_L": {},
  "VK_M": {},
  "VK_N": {},
  "VK_O": {},
  "VK_P": {},
  "VK_Q": {},
  "VK_R": {},
  "VK_S": {},
  "VK_T": {},
  "VK_U": {},
  "VK_V": {},
  "VK_W": {},
  "VK_X": {},
  "VK_Y": {},
  "VK_Z": {},
  "VK_CONTEXT_MENU": {},
  "VK_NUMPAD0": {},
  "VK_NUMPAD1": {},
  "VK_NUMPAD2": {},
  "VK_NUMPAD3": {},
  "VK_NUMPAD4": {},
  "VK_NUMPAD5": {},
  "VK_NUMPAD6": {},
  "VK_NUMPAD7": {},
  "VK_NUMPAD8": {},
  "VK_NUMPAD9": {},
  "VK_MULTIPLY": {},
  "VK_ADD": {},
  "VK_SEPARATOR": {},
  "VK_SUBTRACT": {},
  "VK_DECIMAL": {},
  "VK_DIVIDE": {},
  "VK_F1": {},
  "VK_F2": {},
  "VK_F3": {},
  "VK_F4": {},
  "VK_F5": {},
  "VK_F6": {},
  "VK_F7": {},
  "VK_F8": {},
  "VK_F9": {},
  "VK_F10": {},
  "VK_F11": {},
  "VK_F12": {},
  "VK_F13": {},
  "VK_F14": {},
  "VK_F15": {},
  "VK_F16": {},
  "VK_F17": {},
  "VK_F18": {},
  "VK_F19": {},
  "VK_F20": {},
  "VK_F21": {},
  "VK_F22": {},
  "VK_F23": {},
  "VK_F24": {},
  "VK_NUM_LOCK": {},
  "VK_SCROLL_LOCK": {},
  "VK_CIRCUMFLEX": {},
  "VK_EXCLAMATION": {},
  "VK_DOUBLE_QUOTE": {},
  "VK_HASH": {},
  "VK_DOLLAR": {},
  "VK_PERCENT": {},
  "VK_AMPERSAND": {},
  "VK_UNDERSCORE": {},
  "VK_OPEN_PAREN": {},
  "VK_CLOSE_PAREN": {},
  "VK_ASTERISK": {},
  "VK_PLUS": {},
  "VK_PIPE": {},
  "VK_HYPHEN_MINUS": {},
  "VK_OPEN_CURLY_BRACKET": {},
  "VK_CLOSE_CURLY_BRACKET": {},
  "VK_TILDE": {},
  "VK_COMMA": {},
  "VK_PERIOD": {},
  "VK_SLASH": {},
  "VK_BACK_QUOTE": {},
  "VK_OPEN_BRACKET": {},
  "VK_BACK_SLASH": {},
  "VK_CLOSE_BRACKET": {},
  "VK_QUOTE": {},
  "VK_META": {},
  "VK_ALTGR": {},
  "VK_WIN": {},
  "VK_KANA": {},
  "VK_HANGUL": {},
  "VK_EISU": {},
  "VK_JUNJA": {},
  "VK_FINAL": {},
  "VK_HANJA": {},
  "VK_KANJI": {},
  "VK_CONVERT": {},
  "VK_NONCONVERT": {},
  "VK_ACCEPT": {},
  "VK_MODECHANGE": {},
  "VK_SELECT": {},
  "VK_PRINT": {},
  "VK_EXECUTE": {},
  "VK_SLEEP": {},
  "Text": {
    "RE_COLORS": {},
    "TYPE_TEXT": {},
    "TYPE_NEWLINE": {},
    "TYPE_FG": {},
    "TYPE_BG": {},
    "measure": {
      "extend": {
        "extend": function () {}
      }
    },
    "tokenize": {
      "extend": {
        "extend": function () {}
      }
    },
    "_breakLines": {
      "extend": {
        "extend": function () {}
      }
    },
    "_breakInsideToken": {
      "extend": {
        "extend": function () {}
      }
    }
  },
  "Display": {
    "Backend": {
      "extend": {
        "extend": function () {}
      }
    },
    "Rect": {
      "cache": {},
      "extend": {
        "extend": function () {}
      }
    },
    "Hex": {
      "extend": {
        "extend": function () {}
      }
    },
    "Tile": {
      "extend": {
        "extend": function () {}
      }
    },
    "extend": {
      "extend": function () {}
    }
  },
  "RNG": {
    "getSeed": {
      "extend": {
        "extend": function () {}
      }
    },
    "setSeed": {
      "extend": {
        "extend": function () {}
      }
    },
    "getUniform": {
      "extend": {
        "extend": function () {}
      }
    },
    "getUniformInt": {
      "extend": {
        "extend": function () {}
      }
    },
    "getNormal": {
      "extend": {
        "extend": function () {}
      }
    },
    "getPercentage": {
      "extend": {
        "extend": function () {}
      }
    },
    "getWeightedValue": {
      "extend": {
        "extend": function () {}
      }
    },
    "getState": {
      "extend": {
        "extend": function () {}
      }
    },
    "setState": {
      "extend": {
        "extend": function () {}
      }
    },
    "clone": {
      "extend": {
        "extend": function () {}
      }
    },
    "_s0": {},
    "_s1": {},
    "_s2": {},
    "_c": {},
    "_frac": {},
    "_seed": {}
  },
  "StringGenerator": {
    "extend": {
      "extend": function () {}
    }
  },
  "EventQueue": {
    "extend": {
      "extend": function () {}
    }
  },
  "Scheduler": {
    "Simple": {
      "extend": {
        "extend": function () {}
      }
    },
    "Speed": {
      "extend": {
        "extend": function () {}
      }
    },
    "Action": {
      "extend": {
        "extend": function () {}
      }
    },
    "extend": {
      "extend": function () {}
    }
  },
  "Engine": {
    "extend": {
      "extend": function () {}
    }
  },
  "Map": {
    "Arena": {
      "extend": {
        "extend": function () {}
      }
    },
    "DividedMaze": {
      "extend": {
        "extend": function () {}
      }
    },
    "IceyMaze": {
      "extend": {
        "extend": function () {}
      }
    },
    "EllerMaze": {
      "extend": {
        "extend": function () {}
      }
    },
    "Cellular": {
      "extend": {
        "extend": function () {}
      }
    },
    "Dungeon": {
      "extend": {
        "extend": function () {}
      }
    },
    "Digger": {
      "extend": {
        "extend": function () {}
      }
    },
    "Uniform": {
      "extend": {
        "extend": function () {}
      }
    },
    "Rogue": {
      "extend": {
        "extend": function () {}
      }
    },
    "Feature": {
      "createRandomAt": {
        "extend": {
          "extend": function () {}
        }
      },
      "Room": {
        "createRandomAt": {
          "extend": {
            "extend": function () {}
          }
        },
        "createRandomCenter": {
          "extend": {
            "extend": function () {}
          }
        },
        "createRandom": {
          "extend": {
            "extend": function () {}
          }
        },
        "extend": {
          "extend": function () {}
        }
      },
      "Corridor": {
        "createRandomAt": {
          "extend": {
            "extend": function () {}
          }
        },
        "extend": {
          "extend": function () {}
        }
      },
      "extend": {
        "extend": function () {}
      }
    },
    "extend": {
      "extend": function () {}
    }
  },
  "Noise": {
    "Simplex": {
      "extend": {
        "extend": function () {}
      }
    },
    "extend": {
      "extend": function () {}
    }
  },
  "FOV": {
    "DiscreteShadowcasting": {
      "extend": {
        "extend": function () {}
      }
    },
    "PreciseShadowcasting": {
      "extend": {
        "extend": function () {}
      }
    },
    "RecursiveShadowcasting": {
      "OCTANTS": {},
      "extend": {
        "extend": function () {}
      }
    },
    "extend": {
      "extend": function () {}
    }
  },
  "Color": {
    "fromString": {
      "extend": {
        "extend": function () {}
      }
    },
    "add": {
      "extend": {
        "extend": function () {}
      }
    },
    "add_": {
      "extend": {
        "extend": function () {}
      }
    },
    "multiply": {
      "extend": {
        "extend": function () {}
      }
    },
    "multiply_": {
      "extend": {
        "extend": function () {}
      }
    },
    "interpolate": {
      "extend": {
        "extend": function () {}
      }
    },
    "interpolateHSL": {
      "extend": {
        "extend": function () {}
      }
    },
    "randomize": {
      "extend": {
        "extend": function () {}
      }
    },
    "rgb2hsl": {
      "extend": {
        "extend": function () {}
      }
    },
    "hsl2rgb": {
      "extend": {
        "extend": function () {}
      }
    },
    "toRGB": {
      "extend": {
        "extend": function () {}
      }
    },
    "toHex": {
      "extend": {
        "extend": function () {}
      }
    },
    "_clamp": {
      "extend": {
        "extend": function () {}
      }
    },
    "_cache": {
      "black": {},
      "navy": {},
      "darkblue": {},
      "mediumblue": {},
      "blue": {},
      "darkgreen": {},
      "green": {},
      "teal": {},
      "darkcyan": {},
      "deepskyblue": {},
      "darkturquoise": {},
      "mediumspringgreen": {},
      "lime": {},
      "springgreen": {},
      "aqua": {},
      "cyan": {},
      "midnightblue": {},
      "dodgerblue": {},
      "forestgreen": {},
      "seagreen": {},
      "darkslategray": {},
      "darkslategrey": {},
      "limegreen": {},
      "mediumseagreen": {},
      "turquoise": {},
      "royalblue": {},
      "steelblue": {},
      "darkslateblue": {},
      "mediumturquoise": {},
      "indigo": {},
      "darkolivegreen": {},
      "cadetblue": {},
      "cornflowerblue": {},
      "mediumaquamarine": {},
      "dimgray": {},
      "dimgrey": {},
      "slateblue": {},
      "olivedrab": {},
      "slategray": {},
      "slategrey": {},
      "lightslategray": {},
      "lightslategrey": {},
      "mediumslateblue": {},
      "lawngreen": {},
      "chartreuse": {},
      "aquamarine": {},
      "maroon": {},
      "purple": {},
      "olive": {},
      "gray": {},
      "grey": {},
      "skyblue": {},
      "lightskyblue": {},
      "blueviolet": {},
      "darkred": {},
      "darkmagenta": {},
      "saddlebrown": {},
      "darkseagreen": {},
      "lightgreen": {},
      "mediumpurple": {},
      "darkviolet": {},
      "palegreen": {},
      "darkorchid": {},
      "yellowgreen": {},
      "sienna": {},
      "brown": {},
      "darkgray": {},
      "darkgrey": {},
      "lightblue": {},
      "greenyellow": {},
      "paleturquoise": {},
      "lightsteelblue": {},
      "powderblue": {},
      "firebrick": {},
      "darkgoldenrod": {},
      "mediumorchid": {},
      "rosybrown": {},
      "darkkhaki": {},
      "silver": {},
      "mediumvioletred": {},
      "indianred": {},
      "peru": {},
      "chocolate": {},
      "tan": {},
      "lightgray": {},
      "lightgrey": {},
      "palevioletred": {},
      "thistle": {},
      "orchid": {},
      "goldenrod": {},
      "crimson": {},
      "gainsboro": {},
      "plum": {},
      "burlywood": {},
      "lightcyan": {},
      "lavender": {},
      "darksalmon": {},
      "violet": {},
      "palegoldenrod": {},
      "lightcoral": {},
      "khaki": {},
      "aliceblue": {},
      "honeydew": {},
      "azure": {},
      "sandybrown": {},
      "wheat": {},
      "beige": {},
      "whitesmoke": {},
      "mintcream": {},
      "ghostwhite": {},
      "salmon": {},
      "antiquewhite": {},
      "linen": {},
      "lightgoldenrodyellow": {},
      "oldlace": {},
      "red": {},
      "fuchsia": {},
      "magenta": {},
      "deeppink": {},
      "orangered": {},
      "tomato": {},
      "hotpink": {},
      "coral": {},
      "darkorange": {},
      "lightsalmon": {},
      "orange": {},
      "lightpink": {},
      "pink": {},
      "gold": {},
      "peachpuff": {},
      "navajowhite": {},
      "moccasin": {},
      "bisque": {},
      "mistyrose": {},
      "blanchedalmond": {},
      "papayawhip": {},
      "lavenderblush": {},
      "seashell": {},
      "cornsilk": {},
      "lemonchiffon": {},
      "floralwhite": {},
      "snow": {},
      "yellow": {},
      "lightyellow": {},
      "ivory": {},
      "white": {}
    }
  },
  "Lighting": {
    "extend": {
      "extend": function () {}
    }
  },
  "Path": {
    "Dijkstra": {
      "extend": {
        "extend": function () {}
      }
    },
    "AStar": {
      "extend": {
        "extend": function () {}
      }
    },
    "extend": {
      "extend": function () {}
    }
  }
};
ROT.Display.prototype = {
  "DEBUG": function () {},
  "clear": function () {},
  "setOptions": function () {},
  "getOptions": function () {},
  "getContainer": function () {},
  "computeSize": function () {},
  "computeFontSize": function () {},
  "eventToPosition": function () {},
  "draw": function () {},
  "drawText": function () {},
  "_tick": function () {},
  "_draw": function () {}
};
ROT.Display.Backend.prototype = {
  "compute": function () {},
  "draw": function () {},
  "computeSize": function () {},
  "computeFontSize": function () {},
  "eventToPosition": function () {}
};
ROT.Display.Rect.prototype = {
  "constructor": function () {},
  "compute": function () {},
  "draw": function () {},
  "_drawWithCache": function () {},
  "_drawNoCache": function () {},
  "computeSize": function () {},
  "computeFontSize": function () {},
  "eventToPosition": function () {}
};
ROT.Display.Hex.prototype = {
  "constructor": function () {},
  "compute": function () {},
  "draw": function () {},
  "computeSize": function () {},
  "computeFontSize": function () {},
  "eventToPosition": function () {},
  "_fill": function () {}
};
ROT.Display.Tile.prototype = {
  "constructor": function () {},
  "compute": function () {},
  "draw": function () {},
  "computeSize": function () {},
  "computeFontSize": function () {},
  "eventToPosition": function () {},
  "_drawWithCache": function () {},
  "_drawNoCache": function () {}
};
ROT.StringGenerator.prototype = {
  "clear": function () {},
  "generate": function () {},
  "observe": function () {},
  "getStats": function () {},
  "_split": function () {},
  "_join": function () {},
  "_observeEvent": function () {},
  "_sample": function () {},
  "_backoff": function () {}
};
ROT.EventQueue.prototype = {
  "getTime": function () {},
  "clear": function () {},
  "add": function () {},
  "get": function () {},
  "remove": function () {},
  "_remove": function () {}
};
ROT.Scheduler.prototype = {
  "getTime": function () {},
  "add": function () {},
  "clear": function () {},
  "remove": function () {},
  "next": function () {}
};
ROT.Scheduler.Simple.prototype = {
  "constructor": function () {},
  "add": function () {},
  "next": function () {},
  "getTime": function () {},
  "clear": function () {},
  "remove": function () {}
};
ROT.Scheduler.Speed.prototype = {
  "constructor": function () {},
  "add": function () {},
  "next": function () {},
  "getTime": function () {},
  "clear": function () {},
  "remove": function () {}
};
ROT.Scheduler.Action.prototype = {
  "constructor": function () {},
  "add": function () {},
  "clear": function () {},
  "remove": function () {},
  "next": function () {},
  "setDuration": function () {},
  "getTime": function () {}
};
ROT.Engine.prototype = {
  "start": function () {},
  "lock": function () {},
  "unlock": function () {}
};
ROT.Map.prototype = {
  "create": function () {},
  "_fillMap": function () {}
};
ROT.Map.Arena.prototype = {
  "constructor": function () {},
  "create": function () {},
  "_fillMap": function () {}
};
ROT.Map.DividedMaze.prototype = {
  "constructor": function () {},
  "create": function () {},
  "_process": function () {},
  "_partitionRoom": function () {},
  "_fillMap": function () {}
};
ROT.Map.IceyMaze.prototype = {
  "constructor": function () {},
  "create": function () {},
  "_randomize": function () {},
  "_isFree": function () {},
  "_fillMap": function () {}
};
ROT.Map.EllerMaze.prototype = {
  "constructor": function () {},
  "create": function () {},
  "_removeFromList": function () {},
  "_addToList": function () {},
  "_fillMap": function () {}
};
ROT.Map.Cellular.prototype = {
  "constructor": function () {},
  "randomize": function () {},
  "setOptions": function () {},
  "set": function () {},
  "create": function () {},
  "serviceCallback": function () {},
  "_getNeighbors": function () {},
  "connect": function () {},
  "_getFromTo": function () {},
  "_getClosest": function () {},
  "_findConnected": function () {},
  "_tunnelToConnected": function () {},
  "_freeSpace": function () {},
  "_pointKey": function () {},
  "_fillMap": function () {}
};
ROT.Map.Dungeon.prototype = {
  "constructor": function () {},
  "getRooms": function () {},
  "getCorridors": function () {},
  "create": function () {},
  "_fillMap": function () {}
};
ROT.Map.Digger.prototype = {
  "constructor": function () {},
  "create": function () {},
  "_digCallback": function () {},
  "_isWallCallback": function () {},
  "_canBeDugCallback": function () {},
  "_priorityWallCallback": function () {},
  "_firstRoom": function () {},
  "_findWall": function () {},
  "_tryFeature": function () {},
  "_removeSurroundingWalls": function () {},
  "_getDiggingDirection": function () {},
  "_addDoors": function () {},
  "getRooms": function () {},
  "getCorridors": function () {},
  "_fillMap": function () {}
};
ROT.Map.Uniform.prototype = {
  "constructor": function () {},
  "create": function () {},
  "_generateRooms": function () {},
  "_generateRoom": function () {},
  "_generateCorridors": function () {},
  "_closestRoom": function () {},
  "_connectRooms": function () {},
  "_placeInWall": function () {},
  "_digLine": function () {},
  "_digCallback": function () {},
  "_isWallCallback": function () {},
  "_canBeDugCallback": function () {},
  "getRooms": function () {},
  "getCorridors": function () {},
  "_fillMap": function () {}
};
ROT.Map.Rogue.prototype = {
  "constructor": function () {},
  "create": function () {},
  "_calculateRoomSize": function () {},
  "_initRooms": function () {},
  "_connectRooms": function () {},
  "_connectUnconnectedRooms": function () {},
  "_createRandomRoomConnections": function () {},
  "_createRooms": function () {},
  "_getWallPosition": function () {},
  "_drawCorridore": function () {},
  "_createCorridors": function () {},
  "_fillMap": function () {}
};
ROT.Map.Feature.prototype = {
  "isValid": function () {},
  "create": function () {},
  "debug": function () {}
};
ROT.Map.Feature.Room.prototype = {
  "constructor": function () {},
  "addDoor": function () {},
  "getDoors": function () {},
  "clearDoors": function () {},
  "addDoors": function () {},
  "debug": function () {},
  "isValid": function () {},
  "create": function () {},
  "getCenter": function () {},
  "getLeft": function () {},
  "getRight": function () {},
  "getTop": function () {},
  "getBottom": function () {}
};
ROT.Map.Feature.Corridor.prototype = {
  "constructor": function () {},
  "debug": function () {},
  "isValid": function () {},
  "create": function () {},
  "createPriorityWalls": function () {}
};
ROT.Noise.prototype = {
  "get": function () {}
};
ROT.Noise.Simplex.prototype = {
  "constructor": function () {},
  "get": function () {}
};
ROT.FOV.prototype = {
  "compute": function () {},
  "_getCircle": function () {}
};
ROT.FOV.DiscreteShadowcasting.prototype = {
  "constructor": function () {},
  "compute": function () {},
  "_visibleCoords": function () {},
  "_getCircle": function () {}
};
ROT.FOV.PreciseShadowcasting.prototype = {
  "constructor": function () {},
  "compute": function () {},
  "_checkVisibility": function () {},
  "_getCircle": function () {}
};
ROT.FOV.RecursiveShadowcasting.prototype = {
  "constructor": function () {},
  "compute": function () {},
  "compute180": function () {},
  "compute90": function () {},
  "_renderOctant": function () {},
  "_castVisibility": function () {},
  "_getCircle": function () {}
};
ROT.Lighting.prototype = {
  "setOptions": function () {},
  "setFOV": function () {},
  "setLight": function () {},
  "clearLights": function () {},
  "reset": function () {},
  "compute": function () {},
  "_emitLight": function () {},
  "_computeEmitters": function () {},
  "_emitLightFromCell": function () {},
  "_updateFOV": function () {}
};
ROT.Path.prototype = {
  "compute": function () {},
  "_getNeighbors": function () {}
};
ROT.Path.Dijkstra.prototype = {
  "constructor": function () {},
  "compute": function () {},
  "_compute": function () {},
  "_add": function () {},
  "_getNeighbors": function () {}
};
ROT.Path.AStar.prototype = {
  "constructor": function () {},
  "compute": function () {},
  "_add": function () {},
  "_distance": function () {},
  "_getNeighbors": function () {}
};
/**********************************************************************
 * End Generated Extern for ROT
/**********************************************************************/