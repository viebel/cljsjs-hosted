var REGEX_DATA="xregexp",features={astral:!1,natives:!1},nativ={exec:RegExp.prototype.exec,test:RegExp.prototype.test,match:String.prototype.match,replace:String.prototype.replace,split:String.prototype.split},fixed={},regexCache={},patternCache={},tokens=[],defaultScope="default",classScope="class",nativeTokens={"default":/\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\d*|x[\dA-Fa-f]{2}|u(?:[\dA-Fa-f]{4}|{[\dA-Fa-f]+})|c[A-Za-z]|[\s\S])|\(\?(?:[:=!]|<[=!])|[?*+]\?|{\d+(?:,\d*)?}\??|[\s\S]/,"class":/\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\dA-Fa-f]{2}|u(?:[\dA-Fa-f]{4}|{[\dA-Fa-f]+})|c[A-Za-z]|[\s\S])|[\s\S]/},
replacementToken=/\$(?:{([\w$]+)}|(\d\d?|[\s\S]))/g,correctExecNpcg=void 0===nativ.exec.call(/()??/,"")[1],hasFlagsProp=void 0!==/x/.flags,toString={}.toString;function hasNativeFlag(a){var b=!0;try{RegExp("",a)}catch(c){b=!1}return b&&"y"===a?RegExp("aa|.","y").test("b"):b}var hasNativeU=hasNativeFlag("u"),hasNativeY=hasNativeFlag("y"),registeredFlags={g:!0,i:!0,m:!0,u:hasNativeU,y:hasNativeY};
function augment(a,b,c,d,e){var f;a[REGEX_DATA]={captureNames:b};if(e)return a;if(a.__proto__)a.__proto__=XRegExp.prototype;else for(f in XRegExp.prototype)a[f]=XRegExp.prototype[f];a[REGEX_DATA].source=c;a[REGEX_DATA].flags=d?d.split("").sort().join(""):d;return a}function clipDuplicates(a){return nativ.replace.call(a,/([\s\S])(?=[\s\S]*\1)/g,"")}
function copyRegex(a,b){if(!XRegExp.isRegExp(a))throw new TypeError("Type RegExp expected");var c=a[REGEX_DATA]||{},d=getNativeFlags(a),e="",f="",g=null,h=null;b=b||{};b.removeG&&(f+="g");b.removeY&&(f+="y");f&&(d=nativ.replace.call(d,new RegExp("["+f+"]+","g"),""));b.addG&&(e+="g");b.addY&&(e+="y");e&&(d=clipDuplicates(d+e));b.isInternalOnly||(void 0!==c.source&&(g=c.source),null!=c.flags&&(h=e?clipDuplicates(c.flags+e):c.flags));return a=augment(new RegExp(a.source,d),hasNamedCapture(a)?c.captureNames.slice(0):
null,g,h,b.isInternalOnly)}function dec(a){return parseInt(a,16)}function getNativeFlags(a){return hasFlagsProp?a.flags:nativ.exec.call(/\/([a-z]*)$/i,RegExp.prototype.toString.call(a))[1]}function hasNamedCapture(a){return!(!a[REGEX_DATA]||!a[REGEX_DATA].captureNames)}function hex(a){return parseInt(a,10).toString(16)}function indexOf(a,b){var c=a.length,d;for(d=0;d<c;++d)if(a[d]===b)return d;return-1}function isType(a,b){return toString.call(a)==="[object "+b+"]"}
function isQuantifierNext(a,b,c){return nativ.test.call(-1<c.indexOf("x")?/^(?:\s|#[^#\n]*|\(\?#[^)]*\))*(?:[?*+]|{\d+(?:,\d*)?})/:/^(?:\(\?#[^)]*\))*(?:[?*+]|{\d+(?:,\d*)?})/,a.slice(b))}function pad4(a){for(;4>a.length;)a="0"+a;return a}
function prepareFlags(a,b){var c;if(clipDuplicates(b)!==b)throw new SyntaxError("Invalid duplicate regex flag "+b);a=nativ.replace.call(a,/^\(\?([\w$]+)\)/,function(a,c){if(nativ.test.call(/[gy]/,c))throw new SyntaxError("Cannot use flag g or y in mode modifier "+a);b=clipDuplicates(b+c);return""});for(c=0;c<b.length;++c)if(!registeredFlags[b.charAt(c)])throw new SyntaxError("Unknown regex flag "+b.charAt(c));return{pattern:a,flags:b}}
function prepareOptions(a){var b={};return isType(a,"String")?(XRegExp.forEach(a,/[^\s,]+/,function(a){b[a]=!0}),b):a}function registerFlag(a){if(!/^[\w$]$/.test(a))throw Error("Flag must be a single character A-Za-z0-9_$");registeredFlags[a]=!0}
function runTokens(a,b,c,d,e){for(var f=tokens.length,g=a.charAt(c),h=null,k,l;f--;)if(l=tokens[f],!(l.leadChar&&l.leadChar!==g||l.scope!==d&&"all"!==l.scope||l.flag&&-1===b.indexOf(l.flag))&&(k=XRegExp.exec(a,l.regex,c,"sticky"))){h={matchLength:k[0].length,output:l.handler.call(e,k,d,b),reparse:l.reparse};break}return h}function setAstral(a){features.astral=a}
function setNatives(a){RegExp.prototype.exec=(a?fixed:nativ).exec;RegExp.prototype.test=(a?fixed:nativ).test;String.prototype.match=(a?fixed:nativ).match;String.prototype.replace=(a?fixed:nativ).replace;String.prototype.split=(a?fixed:nativ).split;features.natives=a}function toObject(a){if(null==a)throw new TypeError("Cannot convert null or undefined to object");return a}
function XRegExp(a,b){if(XRegExp.isRegExp(a)){if(void 0!==b)throw new TypeError("Cannot supply flags when copying a RegExp");return copyRegex(a)}a=void 0===a?"":String(a);b=void 0===b?"":String(b);XRegExp.isInstalled("astral")&&-1===b.indexOf("A")&&(b+="A");patternCache[a]||(patternCache[a]={});if(!patternCache[a][b]){for(var c={hasNamedCapture:!1,captureNames:[]},d=defaultScope,e="",f=0,g,h=prepareFlags(a,b),k=h.pattern,h=h.flags;f<k.length;){do(g=runTokens(k,h,f,d,c))&&g.reparse&&(k=k.slice(0,f)+
g.output+k.slice(f+g.matchLength));while(g&&g.reparse);g?(e+=g.output,f+=g.matchLength||1):(g=XRegExp.exec(k,nativeTokens[d],f,"sticky")[0],e+=g,f+=g.length,"["===g&&d===defaultScope?d=classScope:"]"===g&&d===classScope&&(d=defaultScope))}patternCache[a][b]={pattern:nativ.replace.call(e,/(?:\(\?:\))+/g,"(?:)"),flags:nativ.replace.call(h,/[^gimuy]+/g,""),captures:c.hasNamedCapture?c.captureNames:null}}c=patternCache[a][b];return augment(new RegExp(c.pattern,c.flags),c.captures,a,b)}
XRegExp.prototype=RegExp();XRegExp.version="3.1.1";XRegExp._hasNativeFlag=hasNativeFlag;XRegExp._dec=dec;XRegExp._hex=hex;XRegExp._pad4=pad4;XRegExp.addToken=function(a,b,c){c=c||{};var d=c.optionalFlags,e;c.flag&&registerFlag(c.flag);if(d)for(d=nativ.split.call(d,""),e=0;e<d.length;++e)registerFlag(d[e]);tokens.push({regex:copyRegex(a,{addG:!0,addY:hasNativeY,isInternalOnly:!0}),handler:b,scope:c.scope||defaultScope,flag:c.flag,reparse:c.reparse,leadChar:c.leadChar});XRegExp.cache.flush("patterns")};
XRegExp.cache=function(a,b){regexCache[a]||(regexCache[a]={});return regexCache[a][b]||(regexCache[a][b]=XRegExp(a,b))};XRegExp.cache.flush=function(a){"patterns"===a?patternCache={}:regexCache={}};XRegExp.escape=function(a){return nativ.replace.call(toObject(a),/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$\x26")};
XRegExp.exec=function(a,b,c,d){var e="g",f=!1;(f=hasNativeY&&!!(d||b.sticky&&!1!==d))&&(e+="y");b[REGEX_DATA]=b[REGEX_DATA]||{};e=b[REGEX_DATA][e]||(b[REGEX_DATA][e]=copyRegex(b,{addG:!0,addY:f,removeY:!1===d,isInternalOnly:!0}));e.lastIndex=c=c||0;a=fixed.exec.call(e,a);d&&a&&a.index!==c&&(a=null);b.global&&(b.lastIndex=a?e.lastIndex:0);return a};XRegExp.forEach=function(a,b,c){for(var d=0,e=-1;d=XRegExp.exec(a,b,d);)c(d,++e,a,b),d=d.index+(d[0].length||1)};
XRegExp.globalize=function(a){return copyRegex(a,{addG:!0})};XRegExp.install=function(a){a=prepareOptions(a);!features.astral&&a.astral&&setAstral(!0);!features.natives&&a.natives&&setNatives(!0)};XRegExp.isInstalled=function(a){return!!features[a]};XRegExp.isRegExp=function(a){return"[object RegExp]"===toString.call(a)};
XRegExp.match=function(a,b,c){var d=b.global&&"one"!==c||"all"===c,e=(d?"g":"")+(b.sticky?"y":"")||"noGY";b[REGEX_DATA]=b[REGEX_DATA]||{};e=b[REGEX_DATA][e]||(b[REGEX_DATA][e]=copyRegex(b,{addG:!!d,removeG:"one"===c,isInternalOnly:!0}));a=nativ.match.call(toObject(a),e);b.global&&(b.lastIndex="one"===c&&a?a.index+a[0].length:0);return d?a||[]:a&&a[0]};
XRegExp.matchChain=function(a,b){return function d(a,f){function g(a){if(h.backref){if(!(a.hasOwnProperty(h.backref)||+h.backref<a.length))throw new ReferenceError("Backreference to undefined group: "+h.backref);k.push(a[h.backref]||"")}else k.push(a[0])}for(var h=b[f].regex?b[f]:{regex:b[f]},k=[],l=0;l<a.length;++l)XRegExp.forEach(a[l],h.regex,g);return f!==b.length-1&&k.length?d(k,f+1):k}([a],0)};
XRegExp.replace=function(a,b,c,d){var e=XRegExp.isRegExp(b),f=b.global&&"one"!==d||"all"===d,g=(f?"g":"")+(b.sticky?"y":"")||"noGY",h=b;e?(b[REGEX_DATA]=b[REGEX_DATA]||{},h=b[REGEX_DATA][g]||(b[REGEX_DATA][g]=copyRegex(b,{addG:!!f,removeG:"one"===d,isInternalOnly:!0}))):f&&(h=new RegExp(XRegExp.escape(String(b)),"g"));a=fixed.replace.call(toObject(a),h,c);e&&b.global&&(b.lastIndex=0);return a};
XRegExp.replaceEach=function(a,b){var c,d;for(c=0;c<b.length;++c)d=b[c],a=XRegExp.replace(a,d[0],d[1],d[2]);return a};XRegExp.split=function(a,b,c){return fixed.split.call(toObject(a),b,c)};XRegExp.test=function(a,b,c,d){return!!XRegExp.exec(a,b,c,d)};XRegExp.uninstall=function(a){a=prepareOptions(a);features.astral&&a.astral&&setAstral(!1);features.natives&&a.natives&&setNatives(!1)};
XRegExp.union=function(a,b){function c(a,b,c){var g=f[d-e];if(b){if(++d,g)return"(?\x3c"+g+"\x3e"}else if(c)return"\\"+(+c+e);return a}var d=0,e,f;if(!isType(a,"Array")||!a.length)throw new TypeError("Must provide a nonempty array of patterns to merge");for(var g=/(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*]/g,h=[],k,l=0;l<a.length;++l)k=a[l],XRegExp.isRegExp(k)?(e=d,f=k[REGEX_DATA]&&k[REGEX_DATA].captureNames||[],h.push(nativ.replace.call(XRegExp(k.source).source,g,c))):h.push(XRegExp.escape(k));
return XRegExp(h.join("|"),b)};
fixed.exec=function(a){var b=this.lastIndex,c=nativ.exec.apply(this,arguments),d,e;if(c){!correctExecNpcg&&1<c.length&&-1<indexOf(c,"")&&(d=copyRegex(this,{removeG:!0,isInternalOnly:!0}),nativ.replace.call(String(a).slice(c.index),d,function(){var a=arguments.length,b;for(b=1;b<a-2;++b)void 0===arguments[b]&&(c[b]=void 0)}));if(this[REGEX_DATA]&&this[REGEX_DATA].captureNames)for(e=1;e<c.length;++e)(d=this[REGEX_DATA].captureNames[e-1])&&(c[d]=c[e]);this.global&&!c[0].length&&this.lastIndex>c.index&&
(this.lastIndex=c.index)}this.global||(this.lastIndex=b);return c};fixed.test=function(a){return!!fixed.exec.call(this,a)};fixed.match=function(a){var b;if(!XRegExp.isRegExp(a))a=new RegExp(a);else if(a.global)return b=nativ.match.apply(this,arguments),a.lastIndex=0,b;return fixed.exec.call(a,toObject(this))};
fixed.replace=function(a,b){var c=XRegExp.isRegExp(a),d,e,f;c?(a[REGEX_DATA]&&(e=a[REGEX_DATA].captureNames),d=a.lastIndex):a+="";f=isType(b,"Function")?nativ.replace.call(String(this),a,function(){var d=arguments,f;if(e)for(d[0]=new String(d[0]),f=0;f<e.length;++f)e[f]&&(d[0][e[f]]=d[f+1]);c&&a.global&&(a.lastIndex=d[d.length-2]+d[0].length);return b.apply(void 0,d)}):nativ.replace.call(null==this?this:String(this),a,function(){var a=arguments;return nativ.replace.call(String(b),replacementToken,
function(b,c,d){if(c){d=+c;if(d<=a.length-3)return a[d]||"";d=e?indexOf(e,c):-1;if(0>d)throw new SyntaxError("Backreference to undefined group "+b);return a[d+1]||""}if("$"===d)return"$";if("\x26"===d||0===+d)return a[0];if("`"===d)return a[a.length-1].slice(0,a[a.length-2]);if("'"===d)return a[a.length-1].slice(a[a.length-2]+a[0].length);d=+d;if(!isNaN(d)){if(d>a.length-3)throw new SyntaxError("Backreference to undefined group "+b);return a[d]||""}throw new SyntaxError("Invalid token "+b);})});c&&
(a.lastIndex=a.global?0:d);return f};fixed.split=function(a,b){if(!XRegExp.isRegExp(a))return nativ.split.apply(this,arguments);var c=String(this),d=[],e=a.lastIndex,f=0,g;b=(void 0===b?-1:b)>>>0;XRegExp.forEach(c,a,function(a){a.index+a[0].length>f&&(d.push(c.slice(f,a.index)),1<a.length&&a.index<c.length&&Array.prototype.push.apply(d,a.slice(1)),g=a[0].length,f=a.index+g)});f===c.length?nativ.test.call(a,"")&&!g||d.push(""):d.push(c.slice(f));a.lastIndex=e;return d.length>b?d.slice(0,b):d};
XRegExp.addToken(/\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\dA-Fa-f]{4}|{[\dA-Fa-f]+})|x(?![\dA-Fa-f]{2}))/,function(a,b){if("B"===a[1]&&b===defaultScope)return a[0];throw new SyntaxError("Invalid escape "+a[0]);},{scope:"all",leadChar:"\\"});
XRegExp.addToken(/\\u{([\dA-Fa-f]+)}/,function(a,b,c){b=dec(a[1]);if(1114111<b)throw new SyntaxError("Invalid Unicode code point "+a[0]);if(65535>=b)return"\\u"+pad4(hex(b));if(hasNativeU&&-1<c.indexOf("u"))return a[0];throw new SyntaxError("Cannot use Unicode code point above \\u{FFFF} without flag u");},{scope:"all",leadChar:"\\"});XRegExp.addToken(/\[(\^?)]/,function(a){return a[1]?"[\\s\\S]":"\\b\\B"},{leadChar:"["});
XRegExp.addToken(/\(\?#[^)]*\)/,function(a,b,c){return isQuantifierNext(a.input,a.index+a[0].length,c)?"":"(?:)"},{leadChar:"("});XRegExp.addToken(/\s+|#[^\n]*\n?/,function(a,b,c){return isQuantifierNext(a.input,a.index+a[0].length,c)?"":"(?:)"},{flag:"x"});XRegExp.addToken(/\./,function(){return"[\\s\\S]"},{flag:"s",leadChar:"."});
XRegExp.addToken(/\\k<([\w$]+)>/,function(a){var b=isNaN(a[1])?indexOf(this.captureNames,a[1])+1:+a[1],c=a.index+a[0].length;if(!b||b>this.captureNames.length)throw new SyntaxError("Backreference to undefined group "+a[0]);return"\\"+b+(c===a.input.length||isNaN(a.input.charAt(c))?"":"(?:)")},{leadChar:"\\"});
XRegExp.addToken(/\\(\d+)/,function(a,b){if(!(b===defaultScope&&/^[1-9]/.test(a[1])&&+a[1]<=this.captureNames.length)&&"0"!==a[1])throw new SyntaxError("Cannot use octal escape or backreference to undefined group "+a[0]);return a[0]},{scope:"all",leadChar:"\\"});
XRegExp.addToken(/\(\?P?<([\w$]+)>/,function(a){if(!isNaN(a[1]))throw new SyntaxError("Cannot use integer as capture name "+a[0]);if("length"===a[1]||"__proto__"===a[1])throw new SyntaxError("Cannot use reserved word as capture name "+a[0]);if(-1<indexOf(this.captureNames,a[1]))throw new SyntaxError("Cannot use same name for multiple groups "+a[0]);this.captureNames.push(a[1]);this.hasNamedCapture=!0;return"("},{leadChar:"("});
XRegExp.addToken(/\((?!\?)/,function(a,b,c){if(-1<c.indexOf("n"))return"(?:";this.captureNames.push(null);return"("},{optionalFlags:"n",leadChar:"("});