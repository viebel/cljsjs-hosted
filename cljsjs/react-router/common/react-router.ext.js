// generated with http://www.dotnetwise.com/Code/Externs/
// to regenerate from the tool:
// load latest react: https://unpkg.com/react@16.8.6/umd/react.development.js
// load latest react-router: https://unpkg.com/react-router@5.0.0/umd/react-router.js
// enter `ReactRouter` as javascript object

/**********************************************************************
 * Extern for ReactRouter
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var ReactRouter = {
  "MemoryRouter": {
    "propTypes": {
      "children": {
        "isRequired": function () {}
      },
      "getUserConfirmation": {
        "isRequired": function () {}
      },
      "initialEntries": {
        "isRequired": function () {}
      },
      "initialIndex": {
        "isRequired": function () {}
      },
      "keyLength": {
        "isRequired": function () {}
      }
    }
  },
  "Prompt": {
    "propTypes": {
      "message": function () {},
      "when": {
        "isRequired": function () {}
      }
    }
  },
  "Redirect": {
    "propTypes": {
      "from": {
        "isRequired": function () {}
      },
      "push": {
        "isRequired": function () {}
      },
      "to": function () {}
    }
  },
  "Route": {
    "propTypes": {
      "children": {
        "isRequired": function () {}
      },
      "component": function () {},
      "exact": {
        "isRequired": function () {}
      },
      "location": {
        "isRequired": function () {}
      },
      "path": {
        "isRequired": function () {}
      },
      "render": {
        "isRequired": function () {}
      },
      "sensitive": {
        "isRequired": function () {}
      },
      "strict": {
        "isRequired": function () {}
      }
    }
  },
  "Router": {
    "computeRootMatch": function () {},
    "propTypes": {
      "children": {
        "isRequired": function () {}
      },
      "history": function () {},
      "staticContext": {
        "isRequired": function () {}
      }
    }
  },
  "StaticRouter": {
    "propTypes": {
      "basename": {
        "isRequired": function () {}
      },
      "context": {
        "isRequired": function () {}
      },
      "location": {
        "isRequired": function () {}
      }
    }
  },
  "Switch": {
    "propTypes": {
      "children": {
        "isRequired": function () {}
      },
      "location": {
        "isRequired": function () {}
      }
    }
  },
  "__RouterContext": {
    "$$typeof": {},
    "Consumer": {
      "$$typeof": {},
      "_calculateChangedBits": {},
      "_context": {},
      "displayName": {}
    },
    "Provider": {
      "$$typeof": {},
      "_context": {},
      "displayName": {}
    },
    "_calculateChangedBits": {},
    "_currentRenderer": {},
    "_currentRenderer2": {},
    "_currentValue": {},
    "_currentValue2": {},
    "_threadCount": {}
  },
  "generatePath": function () {},
  "matchPath": function () {},
  "withRouter": function () {}
};
ReactRouter.MemoryRouter.prototype = {
  "componentDidMount": function () {},
  "constructor": function () {},
  "forceUpdate": function () {},
  "isReactComponent": function () {},
  "render": function () {},
  "setState": function () {}
};
ReactRouter.Route.prototype = {
  "componentDidMount": function () {},
  "componentDidUpdate": function () {},
  "constructor": function () {},
  "forceUpdate": function () {},
  "isReactComponent": function () {},
  "render": function () {},
  "setState": function () {}
};
ReactRouter.Router.prototype = {
  "componentDidMount": function () {},
  "componentDidUpdate": function () {},
  "componentWillUnmount": function () {},
  "constructor": function () {},
  "forceUpdate": function () {},
  "isReactComponent": function () {},
  "render": function () {},
  "setState": function () {}
};
ReactRouter.StaticRouter.prototype = {
  "componentDidMount": function () {},
  "constructor": function () {},
  "forceUpdate": function () {},
  "isReactComponent": function () {},
  "navigateTo": function () {},
  "render": function () {},
  "setState": function () {}
};
ReactRouter.Switch.prototype = {
  "componentDidUpdate": function () {},
  "constructor": function () {},
  "forceUpdate": function () {},
  "isReactComponent": function () {},
  "render": function () {},
  "setState": function () {}
};
/**********************************************************************
 * End Generated Extern for ReactRouter
/**********************************************************************/
