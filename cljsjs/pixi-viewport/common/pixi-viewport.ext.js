/**********************************************************************
 * Extern for PIXI: Contains PIXI and the viewport extension in it
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var PIXI = {
  "Application": function () {},
  "BLEND_MODES": {
    "ADD": {},
    "ADD_NPM": {},
    "COLOR": {},
    "COLOR_BURN": {},
    "COLOR_DODGE": {},
    "DARKEN": {},
    "DIFFERENCE": {},
    "EXCLUSION": {},
    "HARD_LIGHT": {},
    "HUE": {},
    "LIGHTEN": {},
    "LUMINOSITY": {},
    "MULTIPLY": {},
    "NORMAL": {},
    "NORMAL_NPM": {},
    "OVERLAY": {},
    "SATURATION": {},
    "SCREEN": {},
    "SCREEN_NPM": {},
    "SOFT_LIGHT": {}
  },
  "BaseRenderTexture": {
    "EventEmitter": {
      "EventEmitter": function () {},
      "prefixed": {}
    },
    "addToCache": function () {},
    "from": function () {},
    "fromCanvas": function () {},
    "fromImage": function () {},
    "prefixed": {},
    "removeFromCache": function () {}
  },
  "BaseTexture": {
    "EventEmitter": {
      "EventEmitter": function () {},
      "prefixed": {}
    },
    "addToCache": function () {},
    "from": function () {},
    "fromCanvas": function () {},
    "fromImage": function () {},
    "prefixed": {},
    "removeFromCache": function () {}
  },
  "Bounds": function () {},
  "CanvasGraphicsRenderer": function () {},
  "CanvasRenderTarget": function () {},
  "CanvasRenderer": {
    "EventEmitter": {
      "EventEmitter": function () {},
      "prefixed": {}
    },
    "__plugins": {
      "accessibility": function () {},
      "extract": function () {},
      "graphics": function () {},
      "interaction": {
        "EventEmitter": {
          "EventEmitter": function () {},
          "prefixed": {}
        },
        "prefixed": {}
      },
      "mesh": function () {},
      "prepare": function () {},
      "sprite": function () {}
    },
    "prefixed": {},
    "registerPlugin": function () {}
  },
  "CanvasSpriteRenderer": function () {},
  "CanvasTinter": {
    "cacheStepsPerColorChannel": {},
    "canUseMultiply": {},
    "convertTintToImage": {},
    "getTintedTexture": function () {},
    "roundColor": function () {},
    "tintMethod": function () {},
    "tintWithMultiply": function () {},
    "tintWithOverlay": function () {},
    "tintWithPerPixel": function () {}
  },
  "Circle": function () {},
  "Container": {
    "EventEmitter": {
      "EventEmitter": function () {},
      "prefixed": {}
    },
    "prefixed": {}
  },
  "DATA_URI": {},
  "DEG_TO_RAD": {},
  "DRAW_MODES": {
    "LINES": {},
    "LINE_LOOP": {},
    "LINE_STRIP": {},
    "POINTS": {},
    "TRIANGLES": {},
    "TRIANGLE_FAN": {},
    "TRIANGLE_STRIP": {}
  },
  "DisplayObject": {
    "EventEmitter": {
      "EventEmitter": function () {},
      "prefixed": {}
    },
    "prefixed": {}
  },
  "Ellipse": function () {},
  "Filter": function () {},
  "GC_MODES": {
    "AUTO": {},
    "MANUAL": {}
  },
  "Graphics": {
    "CURVES": {
      "adaptive": {},
      "maxLength": {},
      "maxSegments": {},
      "minSegments": {}
    },
    "EventEmitter": {
      "EventEmitter": function () {},
      "prefixed": {}
    },
    "_SPRITE_TEXTURE": {},
    "prefixed": {}
  },
  "GraphicsData": function () {},
  "GraphicsRenderer": function () {},
  "GroupD8": {
    "E": {},
    "MIRROR_HORIZONTAL": {},
    "MIRROR_VERTICAL": {},
    "N": {},
    "NE": {},
    "NW": {},
    "S": {},
    "SE": {},
    "SW": {},
    "W": {},
    "add": function () {},
    "byDirection": function () {},
    "inv": function () {},
    "isSwapWidthHeight": function () {},
    "isVertical": function () {},
    "matrixAppendRotationInv": function () {},
    "rotate180": function () {},
    "sub": function () {},
    "uX": function () {},
    "uY": function () {},
    "vX": function () {},
    "vY": function () {}
  },
  "Matrix": function () {},
  "ObjectRenderer": function () {},
  "ObservablePoint": function () {},
  "PI_2": {},
  "PRECISION": {
    "HIGH": {},
    "LOW": {},
    "MEDIUM": {}
  },
  "Point": function () {},
  "Polygon": function () {},
  "Quad": function () {},
  "RAD_TO_DEG": {},
  "RENDERER_TYPE": {
    "CANVAS": {},
    "UNKNOWN": {},
    "WEBGL": {}
  },
  "Rectangle": function () {},
  "RenderTarget": function () {},
  "RenderTexture": {
    "EMPTY": {
      "_events": {},
      "_eventsCount": {},
      "_frame": {
        "ceil": function () {},
        "clone": function () {},
        "contains": function () {},
        "copy": function () {},
        "enlarge": function () {},
        "fit": function () {},
        "height": {},
        "pad": function () {},
        "type": {},
        "width": {},
        "x": {},
        "y": {}
      },
      "_rotate": {},
      "_updateID": {},
      "_updateUvs": function () {},
      "_uvs": {},
      "addListener": function () {},
      "baseTexture": {
        "_destroyed": {},
        "_enabled": {},
        "_events": {
          "loaded": {
            "context": {},
            "fn": function () {},
            "once": {}
          }
        },
        "_eventsCount": {},
        "_glTextures": {},
        "_loadSvgSource": function () {},
        "_loadSvgSourceUsingDataUri": function () {},
        "_loadSvgSourceUsingString": function () {},
        "_loadSvgSourceUsingXhr": function () {},
        "_sourceLoaded": function () {},
        "_updateDimensions": function () {},
        "_updateImageType": function () {},
        "_virtalBoundId": {},
        "addListener": function () {},
        "destroy": function () {},
        "dispose": function () {},
        "emit": function () {},
        "eventNames": function () {},
        "hasLoaded": {},
        "height": {},
        "imageType": {},
        "imageUrl": {},
        "isLoading": {},
        "isPowerOfTwo": {},
        "listeners": function () {},
        "loadSource": function () {},
        "mipmap": {},
        "off": function () {},
        "on": function () {},
        "once": function () {},
        "origSource": {},
        "premultipliedAlpha": {},
        "realHeight": {},
        "realWidth": {},
        "removeAllListeners": function () {},
        "removeListener": function () {},
        "resolution": {},
        "scaleMode": {},
        "setMaxListeners": function () {},
        "source": {},
        "sourceScale": {},
        "textureCacheIds": {},
        "touched": {},
        "uid": {},
        "update": function () {},
        "updateSourceImage": function () {},
        "width": {},
        "wrapMode": {}
      },
      "clone": function () {},
      "defaultAnchor": {
        "clone": function () {},
        "copy": function () {},
        "equals": function () {},
        "set": function () {},
        "x": {},
        "y": {}
      },
      "destroy": function () {},
      "emit": function () {},
      "eventNames": function () {},
      "listeners": function () {},
      "noFrame": {},
      "off": function () {},
      "on": function () {},
      "onBaseTextureLoaded": function () {},
      "onBaseTextureUpdated": function () {},
      "once": function () {},
      "orig": {
        "ceil": function () {},
        "clone": function () {},
        "contains": function () {},
        "copy": function () {},
        "enlarge": function () {},
        "fit": function () {},
        "height": {},
        "pad": function () {},
        "type": {},
        "width": {},
        "x": {},
        "y": {}
      },
      "removeAllListeners": function () {},
      "removeListener": function () {},
      "requiresUpdate": {},
      "setFrame": function () {},
      "setMaxListeners": function () {},
      "textureCacheIds": {},
      "transform": {},
      "trim": {},
      "update": function () {},
      "valid": {}
    },
    "EventEmitter": {
      "EventEmitter": function () {},
      "prefixed": {}
    },
    "WHITE": {
      "_events": {},
      "_eventsCount": {},
      "_frame": {
        "ceil": function () {},
        "clone": function () {},
        "contains": function () {},
        "copy": function () {},
        "enlarge": function () {},
        "fit": function () {},
        "height": {},
        "pad": function () {},
        "type": {},
        "width": {},
        "x": {},
        "y": {}
      },
      "_rotate": {},
      "_updateID": {},
      "_updateUvs": function () {},
      "_uvs": {
        "set": function () {},
        "uvsUint32": {
          "0": {},
          "1": {},
          "2": {},
          "3": {}
        },
        "x0": {},
        "x1": {},
        "x2": {},
        "x3": {},
        "y0": {},
        "y1": {},
        "y2": {},
        "y3": {}
      },
      "addListener": function () {},
      "baseTexture": {
        "_destroyed": {},
        "_enabled": {},
        "_events": {
          "update": {
            "context": {},
            "fn": function () {},
            "once": {}
          }
        },
        "_eventsCount": {},
        "_glTextures": {},
        "_loadSvgSource": function () {},
        "_loadSvgSourceUsingDataUri": function () {},
        "_loadSvgSourceUsingString": function () {},
        "_loadSvgSourceUsingXhr": function () {},
        "_sourceLoaded": function () {},
        "_updateDimensions": function () {},
        "_updateImageType": function () {},
        "_virtalBoundId": {},
        "addListener": function () {},
        "destroy": function () {},
        "dispose": function () {},
        "emit": function () {},
        "eventNames": function () {},
        "hasLoaded": {},
        "height": {},
        "imageType": {},
        "imageUrl": {},
        "isLoading": {},
        "isPowerOfTwo": {},
        "listeners": function () {},
        "loadSource": function () {},
        "mipmap": {},
        "off": function () {},
        "on": function () {},
        "once": function () {},
        "origSource": {},
        "premultipliedAlpha": {},
        "realHeight": {},
        "realWidth": {},
        "removeAllListeners": function () {},
        "removeListener": function () {},
        "resolution": {},
        "scaleMode": {},
        "setMaxListeners": function () {},
        "source": {},
        "sourceScale": {},
        "textureCacheIds": {},
        "touched": {},
        "uid": {},
        "update": function () {},
        "updateSourceImage": function () {},
        "width": {},
        "wrapMode": {}
      },
      "clone": function () {},
      "defaultAnchor": {
        "clone": function () {},
        "copy": function () {},
        "equals": function () {},
        "set": function () {},
        "x": {},
        "y": {}
      },
      "destroy": function () {},
      "emit": function () {},
      "eventNames": function () {},
      "listeners": function () {},
      "noFrame": {},
      "off": function () {},
      "on": function () {},
      "onBaseTextureLoaded": function () {},
      "onBaseTextureUpdated": function () {},
      "once": function () {},
      "orig": {
        "ceil": function () {},
        "clone": function () {},
        "contains": function () {},
        "copy": function () {},
        "enlarge": function () {},
        "fit": function () {},
        "height": {},
        "pad": function () {},
        "type": {},
        "width": {},
        "x": {},
        "y": {}
      },
      "removeAllListeners": function () {},
      "removeListener": function () {},
      "requiresUpdate": {},
      "setFrame": function () {},
      "setMaxListeners": function () {},
      "textureCacheIds": {},
      "transform": {},
      "trim": {},
      "update": function () {},
      "valid": {}
    },
    "addTextureToCache": function () {},
    "addToCache": function () {},
    "create": function () {},
    "from": function () {},
    "fromCanvas": function () {},
    "fromFrame": function () {},
    "fromImage": function () {},
    "fromLoader": function () {},
    "fromVideo": function () {},
    "fromVideoUrl": function () {},
    "prefixed": {},
    "removeFromCache": function () {},
    "removeTextureFromCache": function () {}
  },
  "RoundedRectangle": function () {},
  "SCALE_MODES": {
    "LINEAR": {},
    "NEAREST": {}
  },
  "SHAPES": {
    "CIRC": {},
    "ELIP": {},
    "POLY": {},
    "RECT": {},
    "RREC": {}
  },
  "SVG_SIZE": {},
  "Shader": function () {},
  "Sprite": {
    "EventEmitter": {
      "EventEmitter": function () {},
      "prefixed": {}
    },
    "from": function () {},
    "fromFrame": function () {},
    "fromImage": function () {},
    "prefixed": {}
  },
  "SpriteMaskFilter": function () {},
  "SpriteRenderer": function () {},
  "Spritesheet": function () {},
  "TEXT_GRADIENT": {
    "LINEAR_HORIZONTAL": {},
    "LINEAR_VERTICAL": {}
  },
  "TRANSFORM_MODE": {
    "DYNAMIC": {},
    "STATIC": {}
  },
  "Text": {
    "EventEmitter": {
      "EventEmitter": function () {},
      "prefixed": {}
    },
    "calculateFontProperties": function () {},
    "from": function () {},
    "fromFrame": function () {},
    "fromImage": function () {},
    "getFontStyle": function () {},
    "prefixed": {}
  },
  "TextMetrics": {
    "BASELINE_MULTIPLIER": {},
    "BASELINE_SYMBOL": {},
    "METRICS_STRING": {},
    "_breakingSpaces": {},
    "_canvas": {},
    "_context": {
      "arc": function () {},
      "arcTo": function () {},
      "beginPath": function () {},
      "bezierCurveTo": function () {},
      "canvas": {},
      "clearRect": function () {},
      "clip": function () {},
      "closePath": function () {},
      "createImageData": function () {},
      "createLinearGradient": function () {},
      "createPattern": function () {},
      "createRadialGradient": function () {},
      "drawFocusIfNeeded": function () {},
      "drawImage": function () {},
      "ellipse": function () {},
      "fill": function () {},
      "fillRect": function () {},
      "fillStyle": {},
      "fillText": function () {},
      "filter": {},
      "font": {},
      "getImageData": function () {},
      "getLineDash": function () {},
      "getTransform": function () {},
      "globalAlpha": {},
      "globalCompositeOperation": {},
      "imageSmoothingEnabled": {},
      "imageSmoothingQuality": {},
      "isPointInPath": function () {},
      "isPointInStroke": function () {},
      "lineCap": {},
      "lineDashOffset": {},
      "lineJoin": {},
      "lineTo": function () {},
      "lineWidth": {},
      "measureText": function () {},
      "miterLimit": {},
      "moveTo": function () {},
      "putImageData": function () {},
      "quadraticCurveTo": function () {},
      "rect": function () {},
      "resetTransform": function () {},
      "restore": function () {},
      "rotate": function () {},
      "save": function () {},
      "scale": function () {},
      "setLineDash": function () {},
      "setTransform": function () {},
      "shadowBlur": {},
      "shadowColor": {},
      "shadowOffsetX": {},
      "shadowOffsetY": {},
      "stroke": function () {},
      "strokeRect": function () {},
      "strokeStyle": {},
      "strokeText": function () {},
      "textAlign": {},
      "textBaseline": {},
      "transform": function () {},
      "translate": function () {}
    },
    "_fonts": {},
    "_newlines": {},
    "addLine": function () {},
    "canBreakChars": function () {},
    "canBreakWords": function () {},
    "clearMetrics": function () {},
    "collapseNewlines": function () {},
    "collapseSpaces": function () {},
    "getFromCache": function () {},
    "isBreakingSpace": function () {},
    "isNewline": function () {},
    "measureFont": function () {},
    "measureText": function () {},
    "tokenize": function () {},
    "trimRight": function () {},
    "wordWrap": function () {}
  },
  "TextStyle": function () {},
  "Texture": {
    "EMPTY": {
      "_events": {},
      "_eventsCount": {},
      "_frame": {
        "ceil": function () {},
        "clone": function () {},
        "contains": function () {},
        "copy": function () {},
        "enlarge": function () {},
        "fit": function () {},
        "height": {},
        "pad": function () {},
        "type": {},
        "width": {},
        "x": {},
        "y": {}
      },
      "_rotate": {},
      "_updateID": {},
      "_updateUvs": function () {},
      "_uvs": {},
      "addListener": function () {},
      "baseTexture": {
        "_destroyed": {},
        "_enabled": {},
        "_events": {
          "loaded": {
            "context": {},
            "fn": function () {},
            "once": {}
          }
        },
        "_eventsCount": {},
        "_glTextures": {},
        "_loadSvgSource": function () {},
        "_loadSvgSourceUsingDataUri": function () {},
        "_loadSvgSourceUsingString": function () {},
        "_loadSvgSourceUsingXhr": function () {},
        "_sourceLoaded": function () {},
        "_updateDimensions": function () {},
        "_updateImageType": function () {},
        "_virtalBoundId": {},
        "addListener": function () {},
        "destroy": function () {},
        "dispose": function () {},
        "emit": function () {},
        "eventNames": function () {},
        "hasLoaded": {},
        "height": {},
        "imageType": {},
        "imageUrl": {},
        "isLoading": {},
        "isPowerOfTwo": {},
        "listeners": function () {},
        "loadSource": function () {},
        "mipmap": {},
        "off": function () {},
        "on": function () {},
        "once": function () {},
        "origSource": {},
        "premultipliedAlpha": {},
        "realHeight": {},
        "realWidth": {},
        "removeAllListeners": function () {},
        "removeListener": function () {},
        "resolution": {},
        "scaleMode": {},
        "setMaxListeners": function () {},
        "source": {},
        "sourceScale": {},
        "textureCacheIds": {},
        "touched": {},
        "uid": {},
        "update": function () {},
        "updateSourceImage": function () {},
        "width": {},
        "wrapMode": {}
      },
      "clone": function () {},
      "defaultAnchor": {
        "clone": function () {},
        "copy": function () {},
        "equals": function () {},
        "set": function () {},
        "x": {},
        "y": {}
      },
      "destroy": function () {},
      "emit": function () {},
      "eventNames": function () {},
      "listeners": function () {},
      "noFrame": {},
      "off": function () {},
      "on": function () {},
      "onBaseTextureLoaded": function () {},
      "onBaseTextureUpdated": function () {},
      "once": function () {},
      "orig": {
        "ceil": function () {},
        "clone": function () {},
        "contains": function () {},
        "copy": function () {},
        "enlarge": function () {},
        "fit": function () {},
        "height": {},
        "pad": function () {},
        "type": {},
        "width": {},
        "x": {},
        "y": {}
      },
      "removeAllListeners": function () {},
      "removeListener": function () {},
      "requiresUpdate": {},
      "setFrame": function () {},
      "setMaxListeners": function () {},
      "textureCacheIds": {},
      "transform": {},
      "trim": {},
      "update": function () {},
      "valid": {}
    },
    "EventEmitter": {
      "EventEmitter": function () {},
      "prefixed": {}
    },
    "WHITE": {
      "_events": {},
      "_eventsCount": {},
      "_frame": {
        "ceil": function () {},
        "clone": function () {},
        "contains": function () {},
        "copy": function () {},
        "enlarge": function () {},
        "fit": function () {},
        "height": {},
        "pad": function () {},
        "type": {},
        "width": {},
        "x": {},
        "y": {}
      },
      "_rotate": {},
      "_updateID": {},
      "_updateUvs": function () {},
      "_uvs": {
        "set": function () {},
        "uvsUint32": {
          "0": {},
          "1": {},
          "2": {},
          "3": {}
        },
        "x0": {},
        "x1": {},
        "x2": {},
        "x3": {},
        "y0": {},
        "y1": {},
        "y2": {},
        "y3": {}
      },
      "addListener": function () {},
      "baseTexture": {
        "_destroyed": {},
        "_enabled": {},
        "_events": {
          "update": {
            "context": {},
            "fn": function () {},
            "once": {}
          }
        },
        "_eventsCount": {},
        "_glTextures": {},
        "_loadSvgSource": function () {},
        "_loadSvgSourceUsingDataUri": function () {},
        "_loadSvgSourceUsingString": function () {},
        "_loadSvgSourceUsingXhr": function () {},
        "_sourceLoaded": function () {},
        "_updateDimensions": function () {},
        "_updateImageType": function () {},
        "_virtalBoundId": {},
        "addListener": function () {},
        "destroy": function () {},
        "dispose": function () {},
        "emit": function () {},
        "eventNames": function () {},
        "hasLoaded": {},
        "height": {},
        "imageType": {},
        "imageUrl": {},
        "isLoading": {},
        "isPowerOfTwo": {},
        "listeners": function () {},
        "loadSource": function () {},
        "mipmap": {},
        "off": function () {},
        "on": function () {},
        "once": function () {},
        "origSource": {},
        "premultipliedAlpha": {},
        "realHeight": {},
        "realWidth": {},
        "removeAllListeners": function () {},
        "removeListener": function () {},
        "resolution": {},
        "scaleMode": {},
        "setMaxListeners": function () {},
        "source": {},
        "sourceScale": {},
        "textureCacheIds": {},
        "touched": {},
        "uid": {},
        "update": function () {},
        "updateSourceImage": function () {},
        "width": {},
        "wrapMode": {}
      },
      "clone": function () {},
      "defaultAnchor": {
        "clone": function () {},
        "copy": function () {},
        "equals": function () {},
        "set": function () {},
        "x": {},
        "y": {}
      },
      "destroy": function () {},
      "emit": function () {},
      "eventNames": function () {},
      "listeners": function () {},
      "noFrame": {},
      "off": function () {},
      "on": function () {},
      "onBaseTextureLoaded": function () {},
      "onBaseTextureUpdated": function () {},
      "once": function () {},
      "orig": {
        "ceil": function () {},
        "clone": function () {},
        "contains": function () {},
        "copy": function () {},
        "enlarge": function () {},
        "fit": function () {},
        "height": {},
        "pad": function () {},
        "type": {},
        "width": {},
        "x": {},
        "y": {}
      },
      "removeAllListeners": function () {},
      "removeListener": function () {},
      "requiresUpdate": {},
      "setFrame": function () {},
      "setMaxListeners": function () {},
      "textureCacheIds": {},
      "transform": {},
      "trim": {},
      "update": function () {},
      "valid": {}
    },
    "addTextureToCache": function () {},
    "addToCache": function () {},
    "from": function () {},
    "fromCanvas": function () {},
    "fromFrame": function () {},
    "fromImage": function () {},
    "fromLoader": function () {},
    "fromVideo": function () {},
    "fromVideoUrl": function () {},
    "prefixed": {},
    "removeFromCache": function () {},
    "removeTextureFromCache": function () {}
  },
  "TextureMatrix": function () {},
  "TextureUvs": function () {},
  "Transform": {
    "IDENTITY": {
      "_parentID": {},
      "_worldID": {},
      "localTransform": {
        "a": {},
        "append": function () {},
        "apply": function () {},
        "applyInverse": function () {},
        "array": {},
        "b": {},
        "c": {},
        "clone": function () {},
        "copy": function () {},
        "d": {},
        "decompose": function () {},
        "fromArray": function () {},
        "identity": function () {},
        "invert": function () {},
        "prepend": function () {},
        "rotate": function () {},
        "scale": function () {},
        "set": function () {},
        "setTransform": function () {},
        "toArray": function () {},
        "translate": function () {},
        "tx": {},
        "ty": {}
      },
      "updateLocalTransform": function () {},
      "updateTransform": function () {},
      "updateWorldTransform": function () {},
      "worldTransform": {
        "a": {},
        "append": function () {},
        "apply": function () {},
        "applyInverse": function () {},
        "array": {},
        "b": {},
        "c": {},
        "clone": function () {},
        "copy": function () {},
        "d": {},
        "decompose": function () {},
        "fromArray": function () {},
        "identity": function () {},
        "invert": function () {},
        "prepend": function () {},
        "rotate": function () {},
        "scale": function () {},
        "set": function () {},
        "setTransform": function () {},
        "toArray": function () {},
        "translate": function () {},
        "tx": {},
        "ty": {}
      }
    }
  },
  "TransformBase": {
    "IDENTITY": {
      "_parentID": {},
      "_worldID": {},
      "localTransform": {
        "a": {},
        "append": function () {},
        "apply": function () {},
        "applyInverse": function () {},
        "array": {},
        "b": {},
        "c": {},
        "clone": function () {},
        "copy": function () {},
        "d": {},
        "decompose": function () {},
        "fromArray": function () {},
        "identity": function () {},
        "invert": function () {},
        "prepend": function () {},
        "rotate": function () {},
        "scale": function () {},
        "set": function () {},
        "setTransform": function () {},
        "toArray": function () {},
        "translate": function () {},
        "tx": {},
        "ty": {}
      },
      "updateLocalTransform": function () {},
      "updateTransform": function () {},
      "updateWorldTransform": function () {},
      "worldTransform": {
        "a": {},
        "append": function () {},
        "apply": function () {},
        "applyInverse": function () {},
        "array": {},
        "b": {},
        "c": {},
        "clone": function () {},
        "copy": function () {},
        "d": {},
        "decompose": function () {},
        "fromArray": function () {},
        "identity": function () {},
        "invert": function () {},
        "prepend": function () {},
        "rotate": function () {},
        "scale": function () {},
        "set": function () {},
        "setTransform": function () {},
        "toArray": function () {},
        "translate": function () {},
        "tx": {},
        "ty": {}
      }
    }
  },
  "TransformStatic": {
    "IDENTITY": {
      "_parentID": {},
      "_worldID": {},
      "localTransform": {
        "a": {},
        "append": function () {},
        "apply": function () {},
        "applyInverse": function () {},
        "array": {},
        "b": {},
        "c": {},
        "clone": function () {},
        "copy": function () {},
        "d": {},
        "decompose": function () {},
        "fromArray": function () {},
        "identity": function () {},
        "invert": function () {},
        "prepend": function () {},
        "rotate": function () {},
        "scale": function () {},
        "set": function () {},
        "setTransform": function () {},
        "toArray": function () {},
        "translate": function () {},
        "tx": {},
        "ty": {}
      },
      "updateLocalTransform": function () {},
      "updateTransform": function () {},
      "updateWorldTransform": function () {},
      "worldTransform": {
        "a": {},
        "append": function () {},
        "apply": function () {},
        "applyInverse": function () {},
        "array": {},
        "b": {},
        "c": {},
        "clone": function () {},
        "copy": function () {},
        "d": {},
        "decompose": function () {},
        "fromArray": function () {},
        "identity": function () {},
        "invert": function () {},
        "prepend": function () {},
        "rotate": function () {},
        "scale": function () {},
        "set": function () {},
        "setTransform": function () {},
        "toArray": function () {},
        "translate": function () {},
        "tx": {},
        "ty": {}
      }
    }
  },
  "UPDATE_PRIORITY": {
    "HIGH": {},
    "INTERACTION": {},
    "LOW": {},
    "NORMAL": {},
    "UTILITY": {}
  },
  "URL_FILE_EXTENSION": {},
  "VERSION": {},
  "VideoBaseTexture": {
    "EventEmitter": {
      "EventEmitter": function () {},
      "prefixed": {}
    },
    "addToCache": function () {},
    "from": function () {},
    "fromCanvas": function () {},
    "fromImage": function () {},
    "fromUrl": function () {},
    "fromUrls": function () {},
    "fromVideo": function () {},
    "prefixed": {},
    "removeFromCache": function () {}
  },
  "WRAP_MODES": {
    "CLAMP": {},
    "MIRRORED_REPEAT": {},
    "REPEAT": {}
  },
  "WebGLManager": function () {},
  "WebGLRenderer": {
    "EventEmitter": {
      "EventEmitter": function () {},
      "prefixed": {}
    },
    "__plugins": {
      "accessibility": function () {},
      "extract": function () {},
      "graphics": function () {},
      "interaction": {
        "EventEmitter": {
          "EventEmitter": function () {},
          "prefixed": {}
        },
        "prefixed": {}
      },
      "mesh": function () {},
      "particle": function () {},
      "prepare": function () {},
      "sprite": function () {},
      "tilingSprite": function () {}
    },
    "prefixed": {},
    "registerPlugin": function () {}
  },
  "__esModule": {},
  "accessibility": {
    "AccessibilityManager": function () {},
    "__esModule": {},
    "accessibleTarget": {
      "_accessibleActive": {},
      "_accessibleDiv": {},
      "accessible": {},
      "accessibleHint": {},
      "accessibleTitle": {},
      "tabIndex": {}
    }
  },
  "autoDetectRenderer": function () {},
  "extract": {
    "__esModule": {},
    "canvas": function () {},
    "webgl": function () {}
  },
  "extras": {
    "AnimatedSprite": {
      "EventEmitter": {
        "EventEmitter": function () {},
        "prefixed": {}
      },
      "from": function () {},
      "fromFrame": function () {},
      "fromFrames": function () {},
      "fromImage": function () {},
      "fromImages": function () {},
      "prefixed": {}
    },
    "BitmapText": {
      "EventEmitter": {
        "EventEmitter": function () {},
        "prefixed": {}
      },
      "fonts": {},
      "prefixed": {},
      "registerFont": function () {}
    },
    "TilingSprite": {
      "EventEmitter": {
        "EventEmitter": function () {},
        "prefixed": {}
      },
      "from": function () {},
      "fromFrame": function () {},
      "fromImage": function () {},
      "prefixed": {}
    },
    "TilingSpriteRenderer": function () {},
    "Viewport": {
      "EventEmitter": {
        "EventEmitter": function () {},
        "prefixed": {}
      },
      "prefixed": {}
    },
    "__esModule": {}
  },
  "filters": {
    "AlphaFilter": function () {},
    "BlurFilter": function () {},
    "BlurXFilter": function () {},
    "BlurYFilter": function () {},
    "ColorMatrixFilter": function () {},
    "DisplacementFilter": function () {},
    "FXAAFilter": function () {},
    "NoiseFilter": function () {},
    "__esModule": {}
  },
  "glCore": {
    "GLBuffer": {
      "create": function () {},
      "createIndexBuffer": function () {},
      "createVertexBuffer": function () {}
    },
    "GLFramebuffer": {
      "createFloat32": function () {},
      "createRGBA": function () {}
    },
    "GLShader": function () {},
    "GLTexture": {
      "fromData": function () {},
      "fromSource": function () {}
    },
    "VertexArrayObject": {
      "FORCE_NATIVE": {}
    },
    "createContext": function () {},
    "setVertexAttribArrays": function () {},
    "shader": {
      "compileProgram": function () {},
      "defaultValue": function () {},
      "extractAttributes": function () {},
      "extractUniforms": function () {},
      "generateUniformAccessObject": function () {},
      "mapSize": function () {},
      "mapType": function () {},
      "setPrecision": function () {}
    }
  },
  "interaction": {
    "InteractionData": function () {},
    "InteractionEvent": function () {},
    "InteractionManager": {
      "EventEmitter": {
        "EventEmitter": function () {},
        "prefixed": {}
      },
      "prefixed": {}
    },
    "InteractionTrackingData": {
      "FLAGS": {
        "LEFT_DOWN": {},
        "NONE": {},
        "OVER": {},
        "RIGHT_DOWN": {}
      }
    },
    "__esModule": {},
    "interactiveTarget": {
      "_trackedPointers": {},
      "buttonMode": {},
      "cursor": {},
      "hitArea": {},
      "interactive": {},
      "interactiveChildren": {},
      "trackedPointers": {}
    }
  },
  "loader": {
    "_afterMiddleware": {},
    "_beforeMiddleware": {},
    "_boundLoadResource": function () {},
    "_events": {},
    "_eventsCount": {},
    "_loadResource": function () {},
    "_onComplete": function () {},
    "_onLoad": function () {},
    "_onStart": function () {},
    "_prepareUrl": function () {},
    "_queue": {
      "_tasks": {},
      "buffer": {},
      "concurrency": {},
      "drain": function () {},
      "empty": function () {},
      "error": function () {},
      "idle": function () {},
      "kill": function () {},
      "length": function () {},
      "pause": function () {},
      "paused": {},
      "process": function () {},
      "push": function () {},
      "resume": function () {},
      "running": function () {},
      "saturated": function () {},
      "started": {},
      "unsaturated": function () {},
      "unshift": function () {}
    },
    "_resourcesParsing": {},
    "add": function () {},
    "addListener": function () {},
    "baseUrl": {},
    "defaultQueryString": {},
    "destroy": function () {},
    "emit": function () {},
    "eventNames": function () {},
    "listeners": function () {},
    "load": function () {},
    "loading": {},
    "off": function () {},
    "on": function () {},
    "onComplete": {
      "_head": {
        "_fn": function () {},
        "_next": {},
        "_once": {},
        "_owner": {},
        "_prev": {},
        "_thisArg": {}
      },
      "_tail": {
        "_fn": function () {},
        "_next": {},
        "_once": {},
        "_owner": {},
        "_prev": {},
        "_thisArg": {}
      }
    },
    "onError": {
      "_head": {
        "_fn": function () {},
        "_next": {},
        "_once": {},
        "_owner": {},
        "_prev": {},
        "_thisArg": {}
      },
      "_tail": {
        "_fn": function () {},
        "_next": {},
        "_once": {},
        "_owner": {},
        "_prev": {},
        "_thisArg": {}
      }
    },
    "onLoad": {
      "_head": {
        "_fn": function () {},
        "_next": {},
        "_once": {},
        "_owner": {},
        "_prev": {},
        "_thisArg": {}
      },
      "_tail": {
        "_fn": function () {},
        "_next": {},
        "_once": {},
        "_owner": {},
        "_prev": {},
        "_thisArg": {}
      }
    },
    "onProgress": {
      "_head": {
        "_fn": function () {},
        "_next": {},
        "_once": {},
        "_owner": {},
        "_prev": {},
        "_thisArg": {}
      },
      "_tail": {
        "_fn": function () {},
        "_next": {},
        "_once": {},
        "_owner": {},
        "_prev": {},
        "_thisArg": {}
      }
    },
    "onStart": {
      "_head": {
        "_fn": function () {},
        "_next": {},
        "_once": {},
        "_owner": {},
        "_prev": {},
        "_thisArg": {}
      },
      "_tail": {
        "_fn": function () {},
        "_next": {},
        "_once": {},
        "_owner": {},
        "_prev": {},
        "_thisArg": {}
      }
    },
    "once": function () {},
    "pre": function () {},
    "progress": {},
    "removeAllListeners": function () {},
    "removeListener": function () {},
    "reset": function () {},
    "resources": {},
    "setMaxListeners": function () {},
    "use": function () {}
  },
  "loaders": {
    "Loader": {
      "Loader": {
        "Loader": function () {},
        "Resource": {
          "EMPTY_GIF": {},
          "LOAD_TYPE": {
            "AUDIO": {},
            "IMAGE": {},
            "VIDEO": {},
            "XHR": {}
          },
          "STATUS_FLAGS": {
            "COMPLETE": {},
            "DATA_URL": {},
            "LOADING": {},
            "NONE": {}
          },
          "TYPE": {
            "AUDIO": {},
            "IMAGE": {},
            "JSON": {},
            "TEXT": {},
            "UNKNOWN": {},
            "VIDEO": {},
            "XML": {}
          },
          "XHR_RESPONSE_TYPE": {
            "BLOB": {},
            "BUFFER": {},
            "DEFAULT": {},
            "DOCUMENT": {},
            "JSON": {},
            "TEXT": {}
          },
          "_loadTypeMap": {
            "bmp": {},
            "gif": {},
            "jpeg": {},
            "jpg": {},
            "mp3": {},
            "mp4": {},
            "ogg": {},
            "png": {},
            "svg": {},
            "svg+xml": {},
            "tga": {},
            "tif": {},
            "tiff": {},
            "wav": {},
            "webm": {},
            "webp": {}
          },
          "_xhrTypeMap": {
            "bmp": {},
            "fnt": {},
            "gif": {},
            "htm": {},
            "html": {},
            "jpeg": {},
            "jpg": {},
            "json": {},
            "otf": {},
            "png": {},
            "svg": {},
            "text": {},
            "tga": {},
            "tif": {},
            "tiff": {},
            "tmx": {},
            "tsx": {},
            "ttf": {},
            "txt": {},
            "webp": {},
            "xhtml": {},
            "xml": {}
          },
          "setExtensionLoadType": function () {},
          "setExtensionXhrType": function () {}
        },
        "_defaultAfterMiddleware": {},
        "_defaultBeforeMiddleware": {},
        "async": {
          "__esModule": {},
          "eachSeries": function () {},
          "queue": function () {}
        },
        "base64": {
          "__esModule": {},
          "default": function () {},
          "encodeBinary": function () {}
        },
        "default": function () {},
        "encodeBinary": {
          "__esModule": {},
          "default": function () {},
          "encodeBinary": function () {}
        },
        "pre": function () {},
        "use": function () {}
      },
      "Resource": {
        "EMPTY_GIF": {},
        "LOAD_TYPE": {
          "AUDIO": {},
          "IMAGE": {},
          "VIDEO": {},
          "XHR": {}
        },
        "STATUS_FLAGS": {
          "COMPLETE": {},
          "DATA_URL": {},
          "LOADING": {},
          "NONE": {}
        },
        "TYPE": {
          "AUDIO": {},
          "IMAGE": {},
          "JSON": {},
          "TEXT": {},
          "UNKNOWN": {},
          "VIDEO": {},
          "XML": {}
        },
        "XHR_RESPONSE_TYPE": {
          "BLOB": {},
          "BUFFER": {},
          "DEFAULT": {},
          "DOCUMENT": {},
          "JSON": {},
          "TEXT": {}
        },
        "_loadTypeMap": {
          "bmp": {},
          "gif": {},
          "jpeg": {},
          "jpg": {},
          "mp3": {},
          "mp4": {},
          "ogg": {},
          "png": {},
          "svg": {},
          "svg+xml": {},
          "tga": {},
          "tif": {},
          "tiff": {},
          "wav": {},
          "webm": {},
          "webp": {}
        },
        "_xhrTypeMap": {
          "bmp": {},
          "fnt": {},
          "gif": {},
          "htm": {},
          "html": {},
          "jpeg": {},
          "jpg": {},
          "json": {},
          "otf": {},
          "png": {},
          "svg": {},
          "text": {},
          "tga": {},
          "tif": {},
          "tiff": {},
          "tmx": {},
          "tsx": {},
          "ttf": {},
          "txt": {},
          "webp": {},
          "xhtml": {},
          "xml": {}
        },
        "setExtensionLoadType": function () {},
        "setExtensionXhrType": function () {}
      },
      "_defaultAfterMiddleware": {},
      "_defaultBeforeMiddleware": {},
      "_pixiMiddleware": {},
      "addPixiMiddleware": function () {},
      "async": {
        "__esModule": {},
        "eachSeries": function () {},
        "queue": function () {}
      },
      "base64": {
        "__esModule": {},
        "default": function () {},
        "encodeBinary": function () {}
      },
      "default": {
        "Loader": function () {},
        "Resource": {
          "EMPTY_GIF": {},
          "LOAD_TYPE": {
            "AUDIO": {},
            "IMAGE": {},
            "VIDEO": {},
            "XHR": {}
          },
          "STATUS_FLAGS": {
            "COMPLETE": {},
            "DATA_URL": {},
            "LOADING": {},
            "NONE": {}
          },
          "TYPE": {
            "AUDIO": {},
            "IMAGE": {},
            "JSON": {},
            "TEXT": {},
            "UNKNOWN": {},
            "VIDEO": {},
            "XML": {}
          },
          "XHR_RESPONSE_TYPE": {
            "BLOB": {},
            "BUFFER": {},
            "DEFAULT": {},
            "DOCUMENT": {},
            "JSON": {},
            "TEXT": {}
          },
          "_loadTypeMap": {
            "bmp": {},
            "gif": {},
            "jpeg": {},
            "jpg": {},
            "mp3": {},
            "mp4": {},
            "ogg": {},
            "png": {},
            "svg": {},
            "svg+xml": {},
            "tga": {},
            "tif": {},
            "tiff": {},
            "wav": {},
            "webm": {},
            "webp": {}
          },
          "_xhrTypeMap": {
            "bmp": {},
            "fnt": {},
            "gif": {},
            "htm": {},
            "html": {},
            "jpeg": {},
            "jpg": {},
            "json": {},
            "otf": {},
            "png": {},
            "svg": {},
            "text": {},
            "tga": {},
            "tif": {},
            "tiff": {},
            "tmx": {},
            "tsx": {},
            "ttf": {},
            "txt": {},
            "webp": {},
            "xhtml": {},
            "xml": {}
          },
          "setExtensionLoadType": function () {},
          "setExtensionXhrType": function () {}
        },
        "_defaultAfterMiddleware": {},
        "_defaultBeforeMiddleware": {},
        "async": {
          "__esModule": {},
          "eachSeries": function () {},
          "queue": function () {}
        },
        "base64": {
          "__esModule": {},
          "default": function () {},
          "encodeBinary": function () {}
        },
        "default": function () {},
        "encodeBinary": {
          "__esModule": {},
          "default": function () {},
          "encodeBinary": function () {}
        },
        "pre": function () {},
        "use": function () {}
      },
      "encodeBinary": {
        "__esModule": {},
        "default": function () {},
        "encodeBinary": function () {}
      },
      "pre": function () {},
      "use": function () {}
    },
    "Resource": {
      "EMPTY_GIF": {},
      "LOAD_TYPE": {
        "AUDIO": {},
        "IMAGE": {},
        "VIDEO": {},
        "XHR": {}
      },
      "STATUS_FLAGS": {
        "COMPLETE": {},
        "DATA_URL": {},
        "LOADING": {},
        "NONE": {}
      },
      "TYPE": {
        "AUDIO": {},
        "IMAGE": {},
        "JSON": {},
        "TEXT": {},
        "UNKNOWN": {},
        "VIDEO": {},
        "XML": {}
      },
      "XHR_RESPONSE_TYPE": {
        "BLOB": {},
        "BUFFER": {},
        "DEFAULT": {},
        "DOCUMENT": {},
        "JSON": {},
        "TEXT": {}
      },
      "_loadTypeMap": {
        "bmp": {},
        "gif": {},
        "jpeg": {},
        "jpg": {},
        "mp3": {},
        "mp4": {},
        "ogg": {},
        "png": {},
        "svg": {},
        "svg+xml": {},
        "tga": {},
        "tif": {},
        "tiff": {},
        "wav": {},
        "webm": {},
        "webp": {}
      },
      "_xhrTypeMap": {
        "bmp": {},
        "fnt": {},
        "gif": {},
        "htm": {},
        "html": {},
        "jpeg": {},
        "jpg": {},
        "json": {},
        "otf": {},
        "png": {},
        "svg": {},
        "text": {},
        "tga": {},
        "tif": {},
        "tiff": {},
        "tmx": {},
        "tsx": {},
        "ttf": {},
        "txt": {},
        "webp": {},
        "xhtml": {},
        "xml": {}
      },
      "setExtensionLoadType": function () {},
      "setExtensionXhrType": function () {}
    },
    "__esModule": {},
    "bitmapFontParser": function () {},
    "getResourcePath": function () {},
    "parseBitmapFontData": function () {},
    "shared": {
      "_afterMiddleware": {},
      "_beforeMiddleware": {},
      "_boundLoadResource": function () {},
      "_events": {},
      "_eventsCount": {},
      "_loadResource": function () {},
      "_onComplete": function () {},
      "_onLoad": function () {},
      "_onStart": function () {},
      "_prepareUrl": function () {},
      "_queue": {
        "_tasks": {},
        "buffer": {},
        "concurrency": {},
        "drain": function () {},
        "empty": function () {},
        "error": function () {},
        "idle": function () {},
        "kill": function () {},
        "length": function () {},
        "pause": function () {},
        "paused": {},
        "process": function () {},
        "push": function () {},
        "resume": function () {},
        "running": function () {},
        "saturated": function () {},
        "started": {},
        "unsaturated": function () {},
        "unshift": function () {}
      },
      "_resourcesParsing": {},
      "add": function () {},
      "addListener": function () {},
      "baseUrl": {},
      "defaultQueryString": {},
      "destroy": function () {},
      "emit": function () {},
      "eventNames": function () {},
      "listeners": function () {},
      "load": function () {},
      "loading": {},
      "off": function () {},
      "on": function () {},
      "onComplete": {
        "_head": {
          "_fn": function () {},
          "_next": {},
          "_once": {},
          "_owner": {},
          "_prev": {},
          "_thisArg": {}
        },
        "_tail": {
          "_fn": function () {},
          "_next": {},
          "_once": {},
          "_owner": {},
          "_prev": {},
          "_thisArg": {}
        }
      },
      "onError": {
        "_head": {
          "_fn": function () {},
          "_next": {},
          "_once": {},
          "_owner": {},
          "_prev": {},
          "_thisArg": {}
        },
        "_tail": {
          "_fn": function () {},
          "_next": {},
          "_once": {},
          "_owner": {},
          "_prev": {},
          "_thisArg": {}
        }
      },
      "onLoad": {
        "_head": {
          "_fn": function () {},
          "_next": {},
          "_once": {},
          "_owner": {},
          "_prev": {},
          "_thisArg": {}
        },
        "_tail": {
          "_fn": function () {},
          "_next": {},
          "_once": {},
          "_owner": {},
          "_prev": {},
          "_thisArg": {}
        }
      },
      "onProgress": {
        "_head": {
          "_fn": function () {},
          "_next": {},
          "_once": {},
          "_owner": {},
          "_prev": {},
          "_thisArg": {}
        },
        "_tail": {
          "_fn": function () {},
          "_next": {},
          "_once": {},
          "_owner": {},
          "_prev": {},
          "_thisArg": {}
        }
      },
      "onStart": {
        "_head": {
          "_fn": function () {},
          "_next": {},
          "_once": {},
          "_owner": {},
          "_prev": {},
          "_thisArg": {}
        },
        "_tail": {
          "_fn": function () {},
          "_next": {},
          "_once": {},
          "_owner": {},
          "_prev": {},
          "_thisArg": {}
        }
      },
      "once": function () {},
      "pre": function () {},
      "progress": {},
      "removeAllListeners": function () {},
      "removeListener": function () {},
      "reset": function () {},
      "resources": {},
      "setMaxListeners": function () {},
      "use": function () {}
    },
    "spritesheetParser": function () {},
    "textureParser": function () {}
  },
  "mesh": {
    "CanvasMeshRenderer": function () {},
    "Mesh": {
      "DRAW_MODES": {
        "TRIANGLES": {},
        "TRIANGLE_MESH": {}
      },
      "EventEmitter": {
        "EventEmitter": function () {},
        "prefixed": {}
      },
      "prefixed": {}
    },
    "MeshRenderer": function () {},
    "NineSlicePlane": {
      "DRAW_MODES": {
        "TRIANGLES": {},
        "TRIANGLE_MESH": {}
      },
      "EventEmitter": {
        "EventEmitter": function () {},
        "prefixed": {}
      },
      "prefixed": {}
    },
    "Plane": {
      "DRAW_MODES": {
        "TRIANGLES": {},
        "TRIANGLE_MESH": {}
      },
      "EventEmitter": {
        "EventEmitter": function () {},
        "prefixed": {}
      },
      "prefixed": {}
    },
    "Rope": {
      "DRAW_MODES": {
        "TRIANGLES": {},
        "TRIANGLE_MESH": {}
      },
      "EventEmitter": {
        "EventEmitter": function () {},
        "prefixed": {}
      },
      "prefixed": {}
    },
    "__esModule": {}
  },
  "particles": {
    "ParticleContainer": {
      "EventEmitter": {
        "EventEmitter": function () {},
        "prefixed": {}
      },
      "prefixed": {}
    },
    "ParticleRenderer": function () {},
    "__esModule": {}
  },
  "prepare": {
    "BasePrepare": function () {},
    "CountLimiter": function () {},
    "TimeLimiter": function () {},
    "__esModule": {},
    "canvas": function () {},
    "webgl": function () {}
  },
  "settings": {
    "CAN_UPLOAD_SAME_BUFFER": {},
    "FILTER_RESOLUTION": {},
    "GC_MAX_CHECK_COUNT": {},
    "GC_MAX_IDLE": {},
    "GC_MODE": {},
    "MESH_CANVAS_PADDING": {},
    "MIPMAP_TEXTURES": {},
    "PRECISION_FRAGMENT": {},
    "PRECISION_VERTEX": {},
    "RENDER_OPTIONS": {
      "antialias": {},
      "autoResize": {},
      "backgroundColor": {},
      "clearBeforeRender": {},
      "forceFXAA": {},
      "height": {},
      "legacy": {},
      "preserveDrawingBuffer": {},
      "roundPixels": {},
      "transparent": {},
      "view": {},
      "width": {}
    },
    "RESOLUTION": {},
    "RETINA_PREFIX": {},
    "SCALE_MODE": {},
    "SPRITE_BATCH_SIZE": {},
    "SPRITE_MAX_TEXTURES": {},
    "TARGET_FPMS": {},
    "TRANSFORM_MODE": {},
    "UPLOADS_PER_FRAME": {},
    "WRAP_MODE": {}
  },
  "ticker": {
    "Ticker": function () {},
    "__esModule": {},
    "shared": {
      "_addListener": function () {},
      "_cancelIfNeeded": function () {},
      "_head": {
        "_destroyed": {},
        "connect": function () {},
        "context": {},
        "destroy": function () {},
        "emit": function () {},
        "fn": {},
        "match": function () {},
        "next": {},
        "once": {},
        "previous": {},
        "priority": {}
      },
      "_maxElapsedMS": {},
      "_requestId": {},
      "_requestIfNeeded": function () {},
      "_startIfPossible": function () {},
      "_tick": function () {},
      "add": function () {},
      "addOnce": function () {},
      "autoStart": {},
      "deltaTime": {},
      "destroy": function () {},
      "elapsedMS": {},
      "lastTime": {},
      "remove": function () {},
      "speed": {},
      "start": function () {},
      "started": {},
      "stop": function () {},
      "update": function () {}
    }
  },
  "utils": {
    "BaseTextureCache": {},
    "EventEmitter": {
      "EventEmitter": function () {},
      "prefixed": {}
    },
    "TextureCache": {},
    "__esModule": {},
    "canUseNewCanvasBlendModes": function () {},
    "clearTextureCache": function () {},
    "correctBlendMode": function () {},
    "decomposeDataUri": function () {},
    "destroyTextureCache": function () {},
    "earcut": {
      "default": function () {},
      "deviation": function () {},
      "flatten": function () {}
    },
    "getResolutionOfUrl": function () {},
    "getSvgSize": function () {},
    "getUrlFileExtension": function () {},
    "hex2rgb": function () {},
    "hex2string": function () {},
    "isMobile": {
      "amazon": {
        "device": {},
        "phone": {},
        "tablet": {}
      },
      "android": {
        "device": {},
        "phone": {},
        "tablet": {}
      },
      "any": {},
      "apple": {
        "device": {},
        "ipod": {},
        "phone": {},
        "tablet": {}
      },
      "default": {
        "amazon": {
          "device": {},
          "phone": {},
          "tablet": {}
        },
        "android": {
          "device": {},
          "phone": {},
          "tablet": {}
        },
        "any": {},
        "apple": {
          "device": {},
          "ipod": {},
          "phone": {},
          "tablet": {}
        },
        "other": {
          "blackberry": {},
          "blackberry10": {},
          "chrome": {},
          "device": {},
          "firefox": {},
          "opera": {}
        },
        "phone": {},
        "tablet": {},
        "windows": {
          "device": {},
          "phone": {},
          "tablet": {}
        }
      },
      "other": {
        "blackberry": {},
        "blackberry10": {},
        "chrome": {},
        "device": {},
        "firefox": {},
        "opera": {}
      },
      "phone": {},
      "tablet": {},
      "windows": {
        "device": {},
        "phone": {},
        "tablet": {}
      }
    },
    "isWebGLSupported": function () {},
    "mixins": {
      "__esModule": {},
      "delayMixin": function () {},
      "mixin": function () {},
      "performMixins": function () {}
    },
    "pluginTarget": {
      "mixin": function () {}
    },
    "premultiplyBlendMode": {},
    "premultiplyRgba": function () {},
    "premultiplyTint": function () {},
    "premultiplyTintToRgba": function () {},
    "removeItems": function () {},
    "rgb2hex": function () {},
    "sayHello": function () {},
    "sign": function () {},
    "skipHello": function () {},
    "uid": function () {},
    "uuid": function () {}
  }
};
PIXI.Application.prototype = {
  "_loader": function () {},
  "_parentDestroy": function () {},
  "destroy": function () {},
  "render": function () {},
  "start": function () {},
  "stop": function () {}
};
PIXI.BaseRenderTexture.prototype = {
  "_loadSvgSource": function () {},
  "_loadSvgSourceUsingDataUri": function () {},
  "_loadSvgSourceUsingString": function () {},
  "_loadSvgSourceUsingXhr": function () {},
  "_sourceLoaded": function () {},
  "_updateDimensions": function () {},
  "_updateImageType": function () {},
  "addListener": function () {},
  "destroy": function () {},
  "dispose": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "loadSource": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "resize": function () {},
  "setMaxListeners": function () {},
  "update": function () {},
  "updateSourceImage": function () {}
};
PIXI.BaseRenderTexture.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.BaseTexture.prototype = {
  "_loadSvgSource": function () {},
  "_loadSvgSourceUsingDataUri": function () {},
  "_loadSvgSourceUsingString": function () {},
  "_loadSvgSourceUsingXhr": function () {},
  "_sourceLoaded": function () {},
  "_updateDimensions": function () {},
  "_updateImageType": function () {},
  "addListener": function () {},
  "destroy": function () {},
  "dispose": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "loadSource": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {},
  "update": function () {},
  "updateSourceImage": function () {}
};
PIXI.BaseTexture.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.Bounds.prototype = {
  "addBounds": function () {},
  "addBoundsArea": function () {},
  "addBoundsMask": function () {},
  "addFrame": function () {},
  "addPoint": function () {},
  "addQuad": function () {},
  "addVertices": function () {},
  "clear": function () {},
  "getRectangle": function () {},
  "isEmpty": function () {}
};
PIXI.CanvasGraphicsRenderer.prototype = {
  "destroy": function () {},
  "render": function () {},
  "renderPolygon": function () {},
  "updateGraphicsTint": function () {}
};
PIXI.CanvasRenderTarget.prototype = {
  "clear": function () {},
  "destroy": function () {},
  "resize": function () {}
};
PIXI.CanvasRenderer.prototype = {
  "addListener": function () {},
  "clear": function () {},
  "destroy": function () {},
  "destroyPlugins": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "generateTexture": function () {},
  "initPlugins": function () {},
  "invalidateBlendMode": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "render": function () {},
  "resize": function () {},
  "setBlendMode": function () {},
  "setMaxListeners": function () {}
};
PIXI.CanvasRenderer.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.CanvasRenderer.__plugins.accessibility.prototype = {
  "_onClick": function () {},
  "_onFocus": function () {},
  "_onFocusOut": function () {},
  "_onKeyDown": function () {},
  "_onMouseMove": function () {},
  "activate": function () {},
  "addChild": function () {},
  "capHitArea": function () {},
  "createTouchHook": function () {},
  "deactivate": function () {},
  "destroy": function () {},
  "update": function () {},
  "updateAccessibleObjects": function () {}
};
PIXI.CanvasRenderer.__plugins.extract.prototype = {
  "base64": function () {},
  "canvas": function () {},
  "destroy": function () {},
  "image": function () {},
  "pixels": function () {}
};
PIXI.CanvasRenderer.__plugins.graphics.prototype = {
  "destroy": function () {},
  "render": function () {},
  "renderPolygon": function () {},
  "updateGraphicsTint": function () {}
};
PIXI.CanvasRenderer.__plugins.interaction.prototype = {
  "addEvents": function () {},
  "addListener": function () {},
  "configureInteractionEventForDOMEvent": function () {},
  "destroy": function () {},
  "dispatchEvent": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "getInteractionDataForPointerId": function () {},
  "hitTest": function () {},
  "listeners": function () {},
  "mapPositionToPoint": function () {},
  "normalizeToPointerData": function () {},
  "off": function () {},
  "on": function () {},
  "onPointerCancel": function () {},
  "onPointerComplete": function () {},
  "onPointerDown": function () {},
  "onPointerMove": function () {},
  "onPointerOut": function () {},
  "onPointerOver": function () {},
  "onPointerUp": function () {},
  "once": function () {},
  "processInteractive": function () {},
  "processPointerCancel": function () {},
  "processPointerDown": function () {},
  "processPointerMove": function () {},
  "processPointerOverOut": function () {},
  "processPointerUp": function () {},
  "releaseInteractionDataForPointerId": function () {},
  "removeAllListeners": function () {},
  "removeEvents": function () {},
  "removeListener": function () {},
  "setCursorMode": function () {},
  "setMaxListeners": function () {},
  "setTargetElement": function () {},
  "update": function () {}
};
PIXI.CanvasRenderer.__plugins.interaction.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.CanvasRenderer.__plugins.mesh.prototype = {
  "_renderDrawTriangle": function () {},
  "_renderTriangleMesh": function () {},
  "_renderTriangles": function () {},
  "destroy": function () {},
  "render": function () {},
  "renderMeshFlat": function () {}
};
PIXI.CanvasRenderer.__plugins.prepare.prototype = {
  "add": function () {},
  "destroy": function () {},
  "prepareItems": function () {},
  "register": function () {},
  "registerFindHook": function () {},
  "registerUploadHook": function () {},
  "tick": function () {},
  "upload": function () {}
};
PIXI.CanvasRenderer.__plugins.sprite.prototype = {
  "destroy": function () {},
  "render": function () {}
};
PIXI.CanvasSpriteRenderer.prototype = {
  "destroy": function () {},
  "render": function () {}
};
PIXI.Circle.prototype = {
  "clone": function () {},
  "contains": function () {},
  "getBounds": function () {}
};
PIXI.Container.prototype = {
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "_cacheData": function () {},
  "_calculateBounds": function () {},
  "_calculateCachedBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_getCachedLocalBounds": function () {},
  "_initCachedDisplayObject": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_recursivePostUpdateTransform": function () {},
  "_renderCachedCanvas": function () {},
  "_renderCachedWebGL": function () {},
  "_renderCanvas": function () {},
  "_renderWebGL": function () {},
  "_trackedPointers": function () {},
  "accessible": function () {},
  "accessibleHint": function () {},
  "accessibleTitle": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "addListener": function () {},
  "buttonMode": function () {},
  "calculateBounds": function () {},
  "containerUpdateTransform": function () {},
  "cursor": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "generateTexture": function () {},
  "getBounds": function () {},
  "getChildAt": function () {},
  "getChildByName": function () {},
  "getChildIndex": function () {},
  "getGlobalPosition": function () {},
  "getLocalBounds": function () {},
  "hitArea": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "listeners": function () {},
  "name": function () {},
  "off": function () {},
  "on": function () {},
  "onChildrenChange": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "removeListener": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "renderWebGL": function () {},
  "setChildIndex": function () {},
  "setMaxListeners": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "swapChildren": function () {},
  "tabIndex": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "trackedPointers": function () {},
  "updateTransform": function () {}
};
PIXI.Container.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.DisplayObject.prototype = {
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "_cacheData": function () {},
  "_calculateCachedBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_getCachedLocalBounds": function () {},
  "_initCachedDisplayObject": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_recursivePostUpdateTransform": function () {},
  "_renderCachedCanvas": function () {},
  "_renderCachedWebGL": function () {},
  "_trackedPointers": function () {},
  "accessible": function () {},
  "accessibleHint": function () {},
  "accessibleTitle": function () {},
  "addListener": function () {},
  "buttonMode": function () {},
  "cursor": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "generateTexture": function () {},
  "getBounds": function () {},
  "getGlobalPosition": function () {},
  "getLocalBounds": function () {},
  "hitArea": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "listeners": function () {},
  "name": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "renderCanvas": function () {},
  "renderWebGL": function () {},
  "setMaxListeners": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "tabIndex": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "trackedPointers": function () {},
  "updateTransform": function () {}
};
PIXI.DisplayObject.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.Ellipse.prototype = {
  "clone": function () {},
  "contains": function () {},
  "getBounds": function () {}
};
PIXI.Filter.prototype = {
  "apply": function () {}
};
PIXI.Graphics.prototype = {
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "_bezierCurveLength": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "_cacheData": function () {},
  "_calculateBounds": function () {},
  "_calculateCachedBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_getCachedLocalBounds": function () {},
  "_initCachedDisplayObject": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_quadraticCurveLength": function () {},
  "_recursivePostUpdateTransform": function () {},
  "_renderCachedCanvas": function () {},
  "_renderCachedWebGL": function () {},
  "_renderCanvas": function () {},
  "_renderSpriteRect": function () {},
  "_renderWebGL": function () {},
  "_segmentsCount": function () {},
  "_trackedPointers": function () {},
  "accessible": function () {},
  "accessibleHint": function () {},
  "accessibleTitle": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "addHole": function () {},
  "addListener": function () {},
  "arc": function () {},
  "arcTo": function () {},
  "beginFill": function () {},
  "bezierCurveTo": function () {},
  "buttonMode": function () {},
  "calculateBounds": function () {},
  "clear": function () {},
  "clone": function () {},
  "closePath": function () {},
  "containerUpdateTransform": function () {},
  "containsPoint": function () {},
  "cursor": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "drawCircle": function () {},
  "drawEllipse": function () {},
  "drawPolygon": function () {},
  "drawRect": function () {},
  "drawRoundedRect": function () {},
  "drawShape": function () {},
  "drawStar": function () {},
  "emit": function () {},
  "endFill": function () {},
  "eventNames": function () {},
  "generateCanvasTexture": function () {},
  "generateTexture": function () {},
  "getBounds": function () {},
  "getChildAt": function () {},
  "getChildByName": function () {},
  "getChildIndex": function () {},
  "getGlobalPosition": function () {},
  "getLocalBounds": function () {},
  "hitArea": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "isFastRect": function () {},
  "lineStyle": function () {},
  "lineTo": function () {},
  "listeners": function () {},
  "moveTo": function () {},
  "name": function () {},
  "off": function () {},
  "on": function () {},
  "onChildrenChange": function () {},
  "once": function () {},
  "quadraticCurveTo": function () {},
  "removeAllListeners": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "removeListener": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "renderWebGL": function () {},
  "setChildIndex": function () {},
  "setMaxListeners": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "swapChildren": function () {},
  "tabIndex": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "trackedPointers": function () {},
  "updateLocalBounds": function () {},
  "updateTransform": function () {}
};
PIXI.Graphics.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.GraphicsData.prototype = {
  "addHole": function () {},
  "clone": function () {},
  "destroy": function () {}
};
PIXI.GraphicsRenderer.prototype = {
  "destroy": function () {},
  "flush": function () {},
  "getWebGLData": function () {},
  "onContextChange": function () {},
  "render": function () {},
  "start": function () {},
  "stop": function () {},
  "updateGraphics": function () {}
};
PIXI.Matrix.prototype = {
  "append": function () {},
  "apply": function () {},
  "applyInverse": function () {},
  "clone": function () {},
  "copy": function () {},
  "decompose": function () {},
  "fromArray": function () {},
  "identity": function () {},
  "invert": function () {},
  "prepend": function () {},
  "rotate": function () {},
  "scale": function () {},
  "set": function () {},
  "setTransform": function () {},
  "toArray": function () {},
  "translate": function () {}
};
PIXI.ObjectRenderer.prototype = {
  "destroy": function () {},
  "flush": function () {},
  "onContextChange": function () {},
  "render": function () {},
  "start": function () {},
  "stop": function () {}
};
PIXI.ObservablePoint.prototype = {
  "clone": function () {},
  "copy": function () {},
  "equals": function () {},
  "set": function () {}
};
PIXI.Point.prototype = {
  "clone": function () {},
  "copy": function () {},
  "equals": function () {},
  "set": function () {}
};
PIXI.Polygon.prototype = {
  "clone": function () {},
  "close": function () {},
  "contains": function () {}
};
PIXI.Quad.prototype = {
  "destroy": function () {},
  "initVao": function () {},
  "map": function () {},
  "upload": function () {}
};
PIXI.Rectangle.prototype = {
  "ceil": function () {},
  "clone": function () {},
  "contains": function () {},
  "copy": function () {},
  "enlarge": function () {},
  "fit": function () {},
  "pad": function () {}
};
PIXI.RenderTarget.prototype = {
  "activate": function () {},
  "attachStencilBuffer": function () {},
  "calculateProjection": function () {},
  "clear": function () {},
  "destroy": function () {},
  "resize": function () {},
  "setFrame": function () {}
};
PIXI.RenderTexture.prototype = {
  "_updateUvs": function () {},
  "addListener": function () {},
  "clone": function () {},
  "destroy": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "getBase64": function () {},
  "getCanvas": function () {},
  "getImage": function () {},
  "getPixels": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "onBaseTextureLoaded": function () {},
  "onBaseTextureUpdated": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "render": function () {},
  "resize": function () {},
  "setFrame": function () {},
  "setMaxListeners": function () {},
  "update": function () {}
};
PIXI.RenderTexture.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.RoundedRectangle.prototype = {
  "clone": function () {},
  "contains": function () {}
};
PIXI.Shader.prototype = {
  "bind": function () {},
  "destroy": function () {}
};
PIXI.Sprite.prototype = {
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "_cacheData": function () {},
  "_calculateBounds": function () {},
  "_calculateCachedBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_getCachedLocalBounds": function () {},
  "_initCachedDisplayObject": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_onAnchorUpdate": function () {},
  "_onTextureUpdate": function () {},
  "_recursivePostUpdateTransform": function () {},
  "_renderCachedCanvas": function () {},
  "_renderCachedWebGL": function () {},
  "_renderCanvas": function () {},
  "_renderWebGL": function () {},
  "_trackedPointers": function () {},
  "accessible": function () {},
  "accessibleHint": function () {},
  "accessibleTitle": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "addListener": function () {},
  "buttonMode": function () {},
  "calculateBounds": function () {},
  "calculateTrimmedVertices": function () {},
  "calculateVertices": function () {},
  "containerUpdateTransform": function () {},
  "containsPoint": function () {},
  "cursor": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "generateTexture": function () {},
  "getBounds": function () {},
  "getChildAt": function () {},
  "getChildByName": function () {},
  "getChildIndex": function () {},
  "getGlobalPosition": function () {},
  "getLocalBounds": function () {},
  "hitArea": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "listeners": function () {},
  "name": function () {},
  "off": function () {},
  "on": function () {},
  "onChildrenChange": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "removeListener": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "renderWebGL": function () {},
  "setChildIndex": function () {},
  "setMaxListeners": function () {},
  "setParent": function () {},
  "setTexture": function () {},
  "setTransform": function () {},
  "swapChildren": function () {},
  "tabIndex": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "trackedPointers": function () {},
  "updateTransform": function () {}
};
PIXI.Sprite.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.SpriteMaskFilter.prototype = {
  "apply": function () {}
};
PIXI.SpriteRenderer.prototype = {
  "destroy": function () {},
  "flush": function () {},
  "onContextChange": function () {},
  "onPrerender": function () {},
  "render": function () {},
  "start": function () {},
  "stop": function () {}
};
PIXI.Spritesheet.prototype = {
  "_nextBatch": function () {},
  "_parseComplete": function () {},
  "_processAnimations": function () {},
  "_processFrames": function () {},
  "_updateResolution": function () {},
  "destroy": function () {},
  "parse": function () {}
};
PIXI.Text.prototype = {
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "_cacheData": function () {},
  "_calculateBounds": function () {},
  "_calculateCachedBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_generateFillStyle": function () {},
  "_getCachedLocalBounds": function () {},
  "_initCachedDisplayObject": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_onAnchorUpdate": function () {},
  "_onStyleChange": function () {},
  "_onTextureUpdate": function () {},
  "_recursivePostUpdateTransform": function () {},
  "_renderCachedCanvas": function () {},
  "_renderCachedWebGL": function () {},
  "_renderCanvas": function () {},
  "_renderWebGL": function () {},
  "_trackedPointers": function () {},
  "accessible": function () {},
  "accessibleHint": function () {},
  "accessibleTitle": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "addListener": function () {},
  "buttonMode": function () {},
  "calculateBounds": function () {},
  "calculateTrimmedVertices": function () {},
  "calculateVertices": function () {},
  "containerUpdateTransform": function () {},
  "containsPoint": function () {},
  "cursor": function () {},
  "destroy": function () {},
  "determineFontProperties": function () {},
  "displayObjectUpdateTransform": function () {},
  "drawLetterSpacing": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "generateTexture": function () {},
  "getBounds": function () {},
  "getChildAt": function () {},
  "getChildByName": function () {},
  "getChildIndex": function () {},
  "getGlobalPosition": function () {},
  "getLocalBounds": function () {},
  "hitArea": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "listeners": function () {},
  "name": function () {},
  "off": function () {},
  "on": function () {},
  "onChildrenChange": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "removeListener": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "renderWebGL": function () {},
  "setChildIndex": function () {},
  "setMaxListeners": function () {},
  "setParent": function () {},
  "setStyle": function () {},
  "setText": function () {},
  "setTexture": function () {},
  "setTransform": function () {},
  "swapChildren": function () {},
  "tabIndex": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "trackedPointers": function () {},
  "updateText": function () {},
  "updateTexture": function () {},
  "updateTransform": function () {}
};
PIXI.Text.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.TextStyle.prototype = {
  "clone": function () {},
  "reset": function () {},
  "toFontString": function () {}
};
PIXI.Texture.prototype = {
  "_updateUvs": function () {},
  "addListener": function () {},
  "clone": function () {},
  "destroy": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "onBaseTextureLoaded": function () {},
  "onBaseTextureUpdated": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setFrame": function () {},
  "setMaxListeners": function () {},
  "update": function () {}
};
PIXI.Texture.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.TextureMatrix.prototype = {
  "multiplyUvs": function () {},
  "update": function () {}
};
PIXI.TextureUvs.prototype = {
  "set": function () {}
};
PIXI.Transform.prototype = {
  "setFromMatrix": function () {},
  "updateLocalTransform": function () {},
  "updateSkew": function () {},
  "updateTransform": function () {},
  "updateWorldTransform": function () {}
};
PIXI.TransformBase.prototype = {
  "updateLocalTransform": function () {},
  "updateTransform": function () {},
  "updateWorldTransform": function () {}
};
PIXI.TransformStatic.prototype = {
  "onChange": function () {},
  "setFromMatrix": function () {},
  "updateLocalTransform": function () {},
  "updateSkew": function () {},
  "updateTransform": function () {},
  "updateWorldTransform": function () {}
};
PIXI.VideoBaseTexture.prototype = {
  "_isSourcePlaying": function () {},
  "_isSourceReady": function () {},
  "_loadSvgSource": function () {},
  "_loadSvgSourceUsingDataUri": function () {},
  "_loadSvgSourceUsingString": function () {},
  "_loadSvgSourceUsingXhr": function () {},
  "_onCanPlay": function () {},
  "_onPlayStart": function () {},
  "_onPlayStop": function () {},
  "_sourceLoaded": function () {},
  "_updateDimensions": function () {},
  "_updateImageType": function () {},
  "addListener": function () {},
  "destroy": function () {},
  "dispose": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "loadSource": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {},
  "update": function () {},
  "updateSourceImage": function () {}
};
PIXI.VideoBaseTexture.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.WebGLManager.prototype = {
  "destroy": function () {},
  "onContextChange": function () {}
};
PIXI.WebGLRenderer.prototype = {
  "_initContext": function () {},
  "addListener": function () {},
  "bindRenderTarget": function () {},
  "bindRenderTexture": function () {},
  "bindShader": function () {},
  "bindTexture": function () {},
  "bindVao": function () {},
  "clear": function () {},
  "clearRenderTexture": function () {},
  "createVao": function () {},
  "destroy": function () {},
  "destroyPlugins": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "flush": function () {},
  "generateTexture": function () {},
  "handleContextLost": function () {},
  "handleContextRestored": function () {},
  "initPlugins": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "render": function () {},
  "reset": function () {},
  "resize": function () {},
  "setBlendMode": function () {},
  "setMaxListeners": function () {},
  "setObjectRenderer": function () {},
  "setTransform": function () {},
  "unbindTexture": function () {}
};
PIXI.WebGLRenderer.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.WebGLRenderer.__plugins.accessibility.prototype = {
  "_onClick": function () {},
  "_onFocus": function () {},
  "_onFocusOut": function () {},
  "_onKeyDown": function () {},
  "_onMouseMove": function () {},
  "activate": function () {},
  "addChild": function () {},
  "capHitArea": function () {},
  "createTouchHook": function () {},
  "deactivate": function () {},
  "destroy": function () {},
  "update": function () {},
  "updateAccessibleObjects": function () {}
};
PIXI.WebGLRenderer.__plugins.extract.prototype = {
  "base64": function () {},
  "canvas": function () {},
  "destroy": function () {},
  "image": function () {},
  "pixels": function () {}
};
PIXI.WebGLRenderer.__plugins.graphics.prototype = {
  "destroy": function () {},
  "flush": function () {},
  "getWebGLData": function () {},
  "onContextChange": function () {},
  "render": function () {},
  "start": function () {},
  "stop": function () {},
  "updateGraphics": function () {}
};
PIXI.WebGLRenderer.__plugins.interaction.prototype = {
  "addEvents": function () {},
  "addListener": function () {},
  "configureInteractionEventForDOMEvent": function () {},
  "destroy": function () {},
  "dispatchEvent": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "getInteractionDataForPointerId": function () {},
  "hitTest": function () {},
  "listeners": function () {},
  "mapPositionToPoint": function () {},
  "normalizeToPointerData": function () {},
  "off": function () {},
  "on": function () {},
  "onPointerCancel": function () {},
  "onPointerComplete": function () {},
  "onPointerDown": function () {},
  "onPointerMove": function () {},
  "onPointerOut": function () {},
  "onPointerOver": function () {},
  "onPointerUp": function () {},
  "once": function () {},
  "processInteractive": function () {},
  "processPointerCancel": function () {},
  "processPointerDown": function () {},
  "processPointerMove": function () {},
  "processPointerOverOut": function () {},
  "processPointerUp": function () {},
  "releaseInteractionDataForPointerId": function () {},
  "removeAllListeners": function () {},
  "removeEvents": function () {},
  "removeListener": function () {},
  "setCursorMode": function () {},
  "setMaxListeners": function () {},
  "setTargetElement": function () {},
  "update": function () {}
};
PIXI.WebGLRenderer.__plugins.interaction.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.WebGLRenderer.__plugins.mesh.prototype = {
  "destroy": function () {},
  "flush": function () {},
  "onContextChange": function () {},
  "render": function () {},
  "start": function () {},
  "stop": function () {}
};
PIXI.WebGLRenderer.__plugins.particle.prototype = {
  "_generateOneMoreBuffer": function () {},
  "destroy": function () {},
  "flush": function () {},
  "generateBuffers": function () {},
  "onContextChange": function () {},
  "render": function () {},
  "start": function () {},
  "stop": function () {},
  "uploadPosition": function () {},
  "uploadRotation": function () {},
  "uploadTint": function () {},
  "uploadUvs": function () {},
  "uploadVertices": function () {}
};
PIXI.WebGLRenderer.__plugins.prepare.prototype = {
  "add": function () {},
  "destroy": function () {},
  "prepareItems": function () {},
  "register": function () {},
  "registerFindHook": function () {},
  "registerUploadHook": function () {},
  "tick": function () {},
  "upload": function () {}
};
PIXI.WebGLRenderer.__plugins.sprite.prototype = {
  "destroy": function () {},
  "flush": function () {},
  "onContextChange": function () {},
  "onPrerender": function () {},
  "render": function () {},
  "start": function () {},
  "stop": function () {}
};
PIXI.WebGLRenderer.__plugins.tilingSprite.prototype = {
  "destroy": function () {},
  "flush": function () {},
  "onContextChange": function () {},
  "render": function () {},
  "start": function () {},
  "stop": function () {}
};
PIXI.accessibility.AccessibilityManager.prototype = {
  "_onClick": function () {},
  "_onFocus": function () {},
  "_onFocusOut": function () {},
  "_onKeyDown": function () {},
  "_onMouseMove": function () {},
  "activate": function () {},
  "addChild": function () {},
  "capHitArea": function () {},
  "createTouchHook": function () {},
  "deactivate": function () {},
  "destroy": function () {},
  "update": function () {},
  "updateAccessibleObjects": function () {}
};
PIXI.extract.canvas.prototype = {
  "base64": function () {},
  "canvas": function () {},
  "destroy": function () {},
  "image": function () {},
  "pixels": function () {}
};
PIXI.extract.webgl.prototype = {
  "base64": function () {},
  "canvas": function () {},
  "destroy": function () {},
  "image": function () {},
  "pixels": function () {}
};
PIXI.extras.AnimatedSprite.prototype = {
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "_cacheData": function () {},
  "_calculateBounds": function () {},
  "_calculateCachedBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_getCachedLocalBounds": function () {},
  "_initCachedDisplayObject": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_onAnchorUpdate": function () {},
  "_onTextureUpdate": function () {},
  "_recursivePostUpdateTransform": function () {},
  "_renderCachedCanvas": function () {},
  "_renderCachedWebGL": function () {},
  "_renderCanvas": function () {},
  "_renderWebGL": function () {},
  "_trackedPointers": function () {},
  "accessible": function () {},
  "accessibleHint": function () {},
  "accessibleTitle": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "addListener": function () {},
  "buttonMode": function () {},
  "calculateBounds": function () {},
  "calculateTrimmedVertices": function () {},
  "calculateVertices": function () {},
  "containerUpdateTransform": function () {},
  "containsPoint": function () {},
  "cursor": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "generateTexture": function () {},
  "getBounds": function () {},
  "getChildAt": function () {},
  "getChildByName": function () {},
  "getChildIndex": function () {},
  "getGlobalPosition": function () {},
  "getLocalBounds": function () {},
  "gotoAndPlay": function () {},
  "gotoAndStop": function () {},
  "hitArea": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "listeners": function () {},
  "name": function () {},
  "off": function () {},
  "on": function () {},
  "onChildrenChange": function () {},
  "once": function () {},
  "play": function () {},
  "removeAllListeners": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "removeListener": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "renderWebGL": function () {},
  "setChildIndex": function () {},
  "setMaxListeners": function () {},
  "setParent": function () {},
  "setTexture": function () {},
  "setTransform": function () {},
  "stop": function () {},
  "swapChildren": function () {},
  "tabIndex": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "trackedPointers": function () {},
  "update": function () {},
  "updateTexture": function () {},
  "updateTransform": function () {}
};
PIXI.extras.AnimatedSprite.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.extras.BitmapText.prototype = {
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "_cacheData": function () {},
  "_calculateBounds": function () {},
  "_calculateCachedBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_getCachedLocalBounds": function () {},
  "_initCachedDisplayObject": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_recursivePostUpdateTransform": function () {},
  "_renderCachedCanvas": function () {},
  "_renderCachedWebGL": function () {},
  "_renderCanvas": function () {},
  "_renderWebGL": function () {},
  "_trackedPointers": function () {},
  "accessible": function () {},
  "accessibleHint": function () {},
  "accessibleTitle": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "addListener": function () {},
  "buttonMode": function () {},
  "calculateBounds": function () {},
  "containerUpdateTransform": function () {},
  "cursor": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "generateTexture": function () {},
  "getBounds": function () {},
  "getChildAt": function () {},
  "getChildByName": function () {},
  "getChildIndex": function () {},
  "getGlobalPosition": function () {},
  "getLocalBounds": function () {},
  "hitArea": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "listeners": function () {},
  "name": function () {},
  "off": function () {},
  "on": function () {},
  "onChildrenChange": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "removeListener": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "renderWebGL": function () {},
  "setChildIndex": function () {},
  "setMaxListeners": function () {},
  "setParent": function () {},
  "setText": function () {},
  "setTransform": function () {},
  "swapChildren": function () {},
  "tabIndex": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "trackedPointers": function () {},
  "updateText": function () {},
  "updateTransform": function () {},
  "validate": function () {}
};
PIXI.extras.BitmapText.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.extras.TilingSprite.prototype = {
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "_cacheData": function () {},
  "_calculateBounds": function () {},
  "_calculateCachedBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_getCachedLocalBounds": function () {},
  "_initCachedDisplayObject": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_onAnchorUpdate": function () {},
  "_onTextureUpdate": function () {},
  "_recursivePostUpdateTransform": function () {},
  "_renderCachedCanvas": function () {},
  "_renderCachedWebGL": function () {},
  "_renderCanvas": function () {},
  "_renderWebGL": function () {},
  "_trackedPointers": function () {},
  "accessible": function () {},
  "accessibleHint": function () {},
  "accessibleTitle": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "addListener": function () {},
  "buttonMode": function () {},
  "calculateBounds": function () {},
  "calculateTrimmedVertices": function () {},
  "calculateVertices": function () {},
  "containerUpdateTransform": function () {},
  "containsPoint": function () {},
  "cursor": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "generateTexture": function () {},
  "getBounds": function () {},
  "getChildAt": function () {},
  "getChildByName": function () {},
  "getChildIndex": function () {},
  "getGlobalPosition": function () {},
  "getLocalBounds": function () {},
  "hitArea": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "listeners": function () {},
  "name": function () {},
  "off": function () {},
  "on": function () {},
  "onChildrenChange": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "removeListener": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "renderWebGL": function () {},
  "setChildIndex": function () {},
  "setMaxListeners": function () {},
  "setParent": function () {},
  "setTexture": function () {},
  "setTransform": function () {},
  "swapChildren": function () {},
  "tabIndex": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "trackedPointers": function () {},
  "updateTransform": function () {}
};
PIXI.extras.TilingSprite.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.extras.TilingSpriteRenderer.prototype = {
  "destroy": function () {},
  "flush": function () {},
  "onContextChange": function () {},
  "render": function () {},
  "start": function () {},
  "stop": function () {}
};
PIXI.extras.Viewport.prototype = {
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "_cacheData": function () {},
  "_calculateBounds": function () {},
  "_calculateCachedBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_getCachedLocalBounds": function () {},
  "_initCachedDisplayObject": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_recursivePostUpdateTransform": function () {},
  "_renderCachedCanvas": function () {},
  "_renderCachedWebGL": function () {},
  "_renderCanvas": function () {},
  "_renderWebGL": function () {},
  "_trackedPointers": function () {},
  "accessible": function () {},
  "accessibleHint": function () {},
  "accessibleTitle": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "addListener": function () {},
  "buttonMode": function () {},
  "calculateBounds": function () {},
  "containerUpdateTransform": function () {},
  "cursor": function () {},
  "displayObjectUpdateTransform": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "generateTexture": function () {},
  "getBounds": function () {},
  "getChildAt": function () {},
  "getChildByName": function () {},
  "getChildIndex": function () {},
  "getGlobalPosition": function () {},
  "getLocalBounds": function () {},
  "hitArea": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "name": function () {},
  "off": function () {},
  "on": function () {},
  "onChildrenChange": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "removeListener": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "renderWebGL": function () {},
  "setChildIndex": function () {},
  "setMaxListeners": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "swapChildren": function () {},
  "tabIndex": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "trackedPointers": function () {},
  "updateTransform": function () {}
};
PIXI.extras.Viewport.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.filters.AlphaFilter.prototype = {
  "apply": function () {}
};
PIXI.filters.BlurFilter.prototype = {
  "apply": function () {}
};
PIXI.filters.BlurXFilter.prototype = {
  "apply": function () {}
};
PIXI.filters.BlurYFilter.prototype = {
  "apply": function () {}
};
PIXI.filters.ColorMatrixFilter.prototype = {
  "_colorMatrix": function () {},
  "_loadMatrix": function () {},
  "_multiply": function () {},
  "apply": function () {},
  "blackAndWhite": function () {},
  "brightness": function () {},
  "browni": function () {},
  "colorTone": function () {},
  "contrast": function () {},
  "desaturate": function () {},
  "grayscale": function () {},
  "greyscale": function () {},
  "hue": function () {},
  "kodachrome": function () {},
  "lsd": function () {},
  "negative": function () {},
  "night": function () {},
  "polaroid": function () {},
  "predator": function () {},
  "reset": function () {},
  "saturate": function () {},
  "sepia": function () {},
  "technicolor": function () {},
  "toBGR": function () {},
  "vintage": function () {}
};
PIXI.filters.DisplacementFilter.prototype = {
  "apply": function () {}
};
PIXI.filters.FXAAFilter.prototype = {
  "apply": function () {}
};
PIXI.filters.NoiseFilter.prototype = {
  "apply": function () {}
};
PIXI.glCore.GLBuffer.prototype = {
  "bind": function () {},
  "destroy": function () {},
  "upload": function () {}
};
PIXI.glCore.GLFramebuffer.prototype = {
  "bind": function () {},
  "clear": function () {},
  "destroy": function () {},
  "enableStencil": function () {},
  "enableTexture": function () {},
  "resize": function () {},
  "unbind": function () {}
};
PIXI.glCore.GLShader.prototype = {
  "bind": function () {},
  "destroy": function () {}
};
PIXI.glCore.GLTexture.prototype = {
  "bind": function () {},
  "destroy": function () {},
  "enableLinearScaling": function () {},
  "enableMipmap": function () {},
  "enableNearestScaling": function () {},
  "enableWrapClamp": function () {},
  "enableWrapMirrorRepeat": function () {},
  "enableWrapRepeat": function () {},
  "magFilter": function () {},
  "minFilter": function () {},
  "unbind": function () {},
  "upload": function () {},
  "uploadData": function () {}
};
PIXI.glCore.VertexArrayObject.prototype = {
  "activate": function () {},
  "addAttribute": function () {},
  "addIndex": function () {},
  "bind": function () {},
  "clear": function () {},
  "destroy": function () {},
  "draw": function () {},
  "getSize": function () {},
  "unbind": function () {}
};
PIXI.interaction.InteractionData.prototype = {
  "copyEvent": function () {},
  "getLocalPosition": function () {},
  "reset": function () {}
};
PIXI.interaction.InteractionEvent.prototype = {
  "reset": function () {},
  "stopPropagation": function () {}
};
PIXI.interaction.InteractionManager.prototype = {
  "addEvents": function () {},
  "addListener": function () {},
  "configureInteractionEventForDOMEvent": function () {},
  "destroy": function () {},
  "dispatchEvent": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "getInteractionDataForPointerId": function () {},
  "hitTest": function () {},
  "listeners": function () {},
  "mapPositionToPoint": function () {},
  "normalizeToPointerData": function () {},
  "off": function () {},
  "on": function () {},
  "onPointerCancel": function () {},
  "onPointerComplete": function () {},
  "onPointerDown": function () {},
  "onPointerMove": function () {},
  "onPointerOut": function () {},
  "onPointerOver": function () {},
  "onPointerUp": function () {},
  "once": function () {},
  "processInteractive": function () {},
  "processPointerCancel": function () {},
  "processPointerDown": function () {},
  "processPointerMove": function () {},
  "processPointerOverOut": function () {},
  "processPointerUp": function () {},
  "releaseInteractionDataForPointerId": function () {},
  "removeAllListeners": function () {},
  "removeEvents": function () {},
  "removeListener": function () {},
  "setCursorMode": function () {},
  "setMaxListeners": function () {},
  "setTargetElement": function () {},
  "update": function () {}
};
PIXI.interaction.InteractionManager.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.interaction.InteractionTrackingData.prototype = {
  "_doSet": function () {}
};
PIXI.loaders.Loader.prototype = {
  "_loadResource": function () {},
  "_onComplete": function () {},
  "_onLoad": function () {},
  "_onStart": function () {},
  "_prepareUrl": function () {},
  "add": function () {},
  "addListener": function () {},
  "destroy": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "load": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "pre": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "reset": function () {},
  "setMaxListeners": function () {},
  "use": function () {}
};
PIXI.loaders.Loader.Loader.prototype = {
  "_loadResource": function () {},
  "_onComplete": function () {},
  "_onLoad": function () {},
  "_onStart": function () {},
  "_prepareUrl": function () {},
  "add": function () {},
  "load": function () {},
  "pre": function () {},
  "reset": function () {},
  "use": function () {}
};
PIXI.loaders.Loader.Loader.Resource.prototype = {
  "_clearEvents": function () {},
  "_createSource": function () {},
  "_determineCrossOrigin": function () {},
  "_determineLoadType": function () {},
  "_determineXhrType": function () {},
  "_finish": function () {},
  "_getExtension": function () {},
  "_getMimeFromXhrType": function () {},
  "_hasFlag": function () {},
  "_loadElement": function () {},
  "_loadSourceElement": function () {},
  "_loadXdr": function () {},
  "_loadXhr": function () {},
  "_onError": function () {},
  "_onProgress": function () {},
  "_onTimeout": function () {},
  "_setFlag": function () {},
  "_xhrOnAbort": function () {},
  "_xhrOnError": function () {},
  "_xhrOnLoad": function () {},
  "_xhrOnTimeout": function () {},
  "abort": function () {},
  "complete": function () {},
  "load": function () {}
};
PIXI.loaders.Loader.Resource.prototype = {
  "_clearEvents": function () {},
  "_createSource": function () {},
  "_determineCrossOrigin": function () {},
  "_determineLoadType": function () {},
  "_determineXhrType": function () {},
  "_finish": function () {},
  "_getExtension": function () {},
  "_getMimeFromXhrType": function () {},
  "_hasFlag": function () {},
  "_loadElement": function () {},
  "_loadSourceElement": function () {},
  "_loadXdr": function () {},
  "_loadXhr": function () {},
  "_onError": function () {},
  "_onProgress": function () {},
  "_onTimeout": function () {},
  "_setFlag": function () {},
  "_xhrOnAbort": function () {},
  "_xhrOnError": function () {},
  "_xhrOnLoad": function () {},
  "_xhrOnTimeout": function () {},
  "abort": function () {},
  "complete": function () {},
  "load": function () {}
};
PIXI.loaders.Loader.default.prototype = {
  "_loadResource": function () {},
  "_onComplete": function () {},
  "_onLoad": function () {},
  "_onStart": function () {},
  "_prepareUrl": function () {},
  "add": function () {},
  "load": function () {},
  "pre": function () {},
  "reset": function () {},
  "use": function () {}
};
PIXI.loaders.Loader.default.Resource.prototype = {
  "_clearEvents": function () {},
  "_createSource": function () {},
  "_determineCrossOrigin": function () {},
  "_determineLoadType": function () {},
  "_determineXhrType": function () {},
  "_finish": function () {},
  "_getExtension": function () {},
  "_getMimeFromXhrType": function () {},
  "_hasFlag": function () {},
  "_loadElement": function () {},
  "_loadSourceElement": function () {},
  "_loadXdr": function () {},
  "_loadXhr": function () {},
  "_onError": function () {},
  "_onProgress": function () {},
  "_onTimeout": function () {},
  "_setFlag": function () {},
  "_xhrOnAbort": function () {},
  "_xhrOnError": function () {},
  "_xhrOnLoad": function () {},
  "_xhrOnTimeout": function () {},
  "abort": function () {},
  "complete": function () {},
  "load": function () {}
};
PIXI.loaders.Resource.prototype = {
  "_clearEvents": function () {},
  "_createSource": function () {},
  "_determineCrossOrigin": function () {},
  "_determineLoadType": function () {},
  "_determineXhrType": function () {},
  "_finish": function () {},
  "_getExtension": function () {},
  "_getMimeFromXhrType": function () {},
  "_hasFlag": function () {},
  "_loadElement": function () {},
  "_loadSourceElement": function () {},
  "_loadXdr": function () {},
  "_loadXhr": function () {},
  "_onError": function () {},
  "_onProgress": function () {},
  "_onTimeout": function () {},
  "_setFlag": function () {},
  "_xhrOnAbort": function () {},
  "_xhrOnError": function () {},
  "_xhrOnLoad": function () {},
  "_xhrOnTimeout": function () {},
  "abort": function () {},
  "complete": function () {},
  "load": function () {}
};
PIXI.mesh.CanvasMeshRenderer.prototype = {
  "_renderDrawTriangle": function () {},
  "_renderTriangleMesh": function () {},
  "_renderTriangles": function () {},
  "destroy": function () {},
  "render": function () {},
  "renderMeshFlat": function () {}
};
PIXI.mesh.Mesh.prototype = {
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "_cacheData": function () {},
  "_calculateBounds": function () {},
  "_calculateCachedBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_getCachedLocalBounds": function () {},
  "_initCachedDisplayObject": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_onTextureUpdate": function () {},
  "_recursivePostUpdateTransform": function () {},
  "_refresh": function () {},
  "_renderCachedCanvas": function () {},
  "_renderCachedWebGL": function () {},
  "_renderCanvas": function () {},
  "_renderWebGL": function () {},
  "_trackedPointers": function () {},
  "accessible": function () {},
  "accessibleHint": function () {},
  "accessibleTitle": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "addListener": function () {},
  "buttonMode": function () {},
  "calculateBounds": function () {},
  "containerUpdateTransform": function () {},
  "containsPoint": function () {},
  "cursor": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "generateTexture": function () {},
  "getBounds": function () {},
  "getChildAt": function () {},
  "getChildByName": function () {},
  "getChildIndex": function () {},
  "getGlobalPosition": function () {},
  "getLocalBounds": function () {},
  "hitArea": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "listeners": function () {},
  "multiplyUvs": function () {},
  "name": function () {},
  "off": function () {},
  "on": function () {},
  "onChildrenChange": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeAllListeners": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "removeListener": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "renderWebGL": function () {},
  "setChildIndex": function () {},
  "setMaxListeners": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "swapChildren": function () {},
  "tabIndex": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "trackedPointers": function () {},
  "updateTransform": function () {}
};
PIXI.mesh.Mesh.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.mesh.MeshRenderer.prototype = {
  "destroy": function () {},
  "flush": function () {},
  "onContextChange": function () {},
  "render": function () {},
  "start": function () {},
  "stop": function () {}
};
PIXI.mesh.NineSlicePlane.prototype = {
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "_cacheData": function () {},
  "_calculateBounds": function () {},
  "_calculateCachedBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_getCachedLocalBounds": function () {},
  "_initCachedDisplayObject": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_onTextureUpdate": function () {},
  "_recursivePostUpdateTransform": function () {},
  "_refresh": function () {},
  "_renderCachedCanvas": function () {},
  "_renderCachedWebGL": function () {},
  "_renderCanvas": function () {},
  "_renderWebGL": function () {},
  "_trackedPointers": function () {},
  "accessible": function () {},
  "accessibleHint": function () {},
  "accessibleTitle": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "addListener": function () {},
  "buttonMode": function () {},
  "calculateBounds": function () {},
  "containerUpdateTransform": function () {},
  "containsPoint": function () {},
  "cursor": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "generateTexture": function () {},
  "getBounds": function () {},
  "getChildAt": function () {},
  "getChildByName": function () {},
  "getChildIndex": function () {},
  "getGlobalPosition": function () {},
  "getLocalBounds": function () {},
  "hitArea": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "listeners": function () {},
  "multiplyUvs": function () {},
  "name": function () {},
  "off": function () {},
  "on": function () {},
  "onChildrenChange": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeAllListeners": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "removeListener": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "renderWebGL": function () {},
  "setChildIndex": function () {},
  "setMaxListeners": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "swapChildren": function () {},
  "tabIndex": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "trackedPointers": function () {},
  "updateHorizontalVertices": function () {},
  "updateTransform": function () {},
  "updateVerticalVertices": function () {}
};
PIXI.mesh.NineSlicePlane.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.mesh.Plane.prototype = {
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "_cacheData": function () {},
  "_calculateBounds": function () {},
  "_calculateCachedBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_getCachedLocalBounds": function () {},
  "_initCachedDisplayObject": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_onTextureUpdate": function () {},
  "_recursivePostUpdateTransform": function () {},
  "_refresh": function () {},
  "_renderCachedCanvas": function () {},
  "_renderCachedWebGL": function () {},
  "_renderCanvas": function () {},
  "_renderWebGL": function () {},
  "_trackedPointers": function () {},
  "accessible": function () {},
  "accessibleHint": function () {},
  "accessibleTitle": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "addListener": function () {},
  "buttonMode": function () {},
  "calculateBounds": function () {},
  "containerUpdateTransform": function () {},
  "containsPoint": function () {},
  "cursor": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "generateTexture": function () {},
  "getBounds": function () {},
  "getChildAt": function () {},
  "getChildByName": function () {},
  "getChildIndex": function () {},
  "getGlobalPosition": function () {},
  "getLocalBounds": function () {},
  "hitArea": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "listeners": function () {},
  "multiplyUvs": function () {},
  "name": function () {},
  "off": function () {},
  "on": function () {},
  "onChildrenChange": function () {},
  "once": function () {},
  "refresh": function () {},
  "removeAllListeners": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "removeListener": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "renderWebGL": function () {},
  "setChildIndex": function () {},
  "setMaxListeners": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "swapChildren": function () {},
  "tabIndex": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "trackedPointers": function () {},
  "updateTransform": function () {}
};
PIXI.mesh.Plane.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.mesh.Rope.prototype = {
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "_cacheData": function () {},
  "_calculateBounds": function () {},
  "_calculateCachedBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_getCachedLocalBounds": function () {},
  "_initCachedDisplayObject": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_onTextureUpdate": function () {},
  "_recursivePostUpdateTransform": function () {},
  "_refresh": function () {},
  "_renderCachedCanvas": function () {},
  "_renderCachedWebGL": function () {},
  "_renderCanvas": function () {},
  "_renderWebGL": function () {},
  "_trackedPointers": function () {},
  "accessible": function () {},
  "accessibleHint": function () {},
  "accessibleTitle": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "addListener": function () {},
  "buttonMode": function () {},
  "calculateBounds": function () {},
  "containerUpdateTransform": function () {},
  "containsPoint": function () {},
  "cursor": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "generateTexture": function () {},
  "getBounds": function () {},
  "getChildAt": function () {},
  "getChildByName": function () {},
  "getChildIndex": function () {},
  "getGlobalPosition": function () {},
  "getLocalBounds": function () {},
  "hitArea": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "listeners": function () {},
  "multiplyUvs": function () {},
  "name": function () {},
  "off": function () {},
  "on": function () {},
  "onChildrenChange": function () {},
  "once": function () {},
  "refresh": function () {},
  "refreshVertices": function () {},
  "removeAllListeners": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "removeListener": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "renderWebGL": function () {},
  "setChildIndex": function () {},
  "setMaxListeners": function () {},
  "setParent": function () {},
  "setTransform": function () {},
  "swapChildren": function () {},
  "tabIndex": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "trackedPointers": function () {},
  "updateTransform": function () {}
};
PIXI.mesh.Rope.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.particles.ParticleContainer.prototype = {
  "_accessibleActive": function () {},
  "_accessibleDiv": function () {},
  "_cacheAsBitmap": function () {},
  "_cacheAsBitmapDestroy": function () {},
  "_cacheData": function () {},
  "_calculateBounds": function () {},
  "_calculateCachedBounds": function () {},
  "_destroyCachedDisplayObject": function () {},
  "_getCachedLocalBounds": function () {},
  "_initCachedDisplayObject": function () {},
  "_initCachedDisplayObjectCanvas": function () {},
  "_recursivePostUpdateTransform": function () {},
  "_renderCachedCanvas": function () {},
  "_renderCachedWebGL": function () {},
  "_renderCanvas": function () {},
  "_renderWebGL": function () {},
  "_trackedPointers": function () {},
  "accessible": function () {},
  "accessibleHint": function () {},
  "accessibleTitle": function () {},
  "addChild": function () {},
  "addChildAt": function () {},
  "addListener": function () {},
  "buttonMode": function () {},
  "calculateBounds": function () {},
  "containerUpdateTransform": function () {},
  "cursor": function () {},
  "destroy": function () {},
  "displayObjectUpdateTransform": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "generateTexture": function () {},
  "getBounds": function () {},
  "getChildAt": function () {},
  "getChildByName": function () {},
  "getChildIndex": function () {},
  "getGlobalPosition": function () {},
  "getLocalBounds": function () {},
  "hitArea": function () {},
  "interactive": function () {},
  "interactiveChildren": function () {},
  "listeners": function () {},
  "name": function () {},
  "off": function () {},
  "on": function () {},
  "onChildrenChange": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeChild": function () {},
  "removeChildAt": function () {},
  "removeChildren": function () {},
  "removeListener": function () {},
  "renderAdvancedWebGL": function () {},
  "renderCanvas": function () {},
  "renderWebGL": function () {},
  "setChildIndex": function () {},
  "setMaxListeners": function () {},
  "setParent": function () {},
  "setProperties": function () {},
  "setTransform": function () {},
  "swapChildren": function () {},
  "tabIndex": function () {},
  "toGlobal": function () {},
  "toLocal": function () {},
  "trackedPointers": function () {},
  "updateTransform": function () {}
};
PIXI.particles.ParticleContainer.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
PIXI.particles.ParticleRenderer.prototype = {
  "_generateOneMoreBuffer": function () {},
  "destroy": function () {},
  "flush": function () {},
  "generateBuffers": function () {},
  "onContextChange": function () {},
  "render": function () {},
  "start": function () {},
  "stop": function () {},
  "uploadPosition": function () {},
  "uploadRotation": function () {},
  "uploadTint": function () {},
  "uploadUvs": function () {},
  "uploadVertices": function () {}
};
PIXI.prepare.BasePrepare.prototype = {
  "add": function () {},
  "destroy": function () {},
  "prepareItems": function () {},
  "register": function () {},
  "registerFindHook": function () {},
  "registerUploadHook": function () {},
  "tick": function () {},
  "upload": function () {}
};
PIXI.prepare.CountLimiter.prototype = {
  "allowedToUpload": function () {},
  "beginFrame": function () {}
};
PIXI.prepare.TimeLimiter.prototype = {
  "allowedToUpload": function () {},
  "beginFrame": function () {}
};
PIXI.prepare.canvas.prototype = {
  "add": function () {},
  "destroy": function () {},
  "prepareItems": function () {},
  "register": function () {},
  "registerFindHook": function () {},
  "registerUploadHook": function () {},
  "tick": function () {},
  "upload": function () {}
};
PIXI.prepare.webgl.prototype = {
  "add": function () {},
  "destroy": function () {},
  "prepareItems": function () {},
  "register": function () {},
  "registerFindHook": function () {},
  "registerUploadHook": function () {},
  "tick": function () {},
  "upload": function () {}
};
PIXI.ticker.Ticker.prototype = {
  "_addListener": function () {},
  "_cancelIfNeeded": function () {},
  "_requestIfNeeded": function () {},
  "_startIfPossible": function () {},
  "add": function () {},
  "addOnce": function () {},
  "destroy": function () {},
  "remove": function () {},
  "start": function () {},
  "stop": function () {},
  "update": function () {}
};
PIXI.utils.EventEmitter.prototype = {
  "addListener": function () {},
  "emit": function () {},
  "eventNames": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "removeAllListeners": function () {},
  "removeListener": function () {},
  "setMaxListeners": function () {}
};
/**********************************************************************
 * End Generated Extern for PIXI
/**********************************************************************/
