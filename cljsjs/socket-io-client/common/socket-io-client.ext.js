/**********************************************************************
 * Extern for io
 * Generated by http://jmmk.github.io/javascript-externs-generator
 * HANDROLLED EXTERNS AFTER THE GENERATED EXTERNS
 **********************************************************************/
var io = {
  "Manager": function () {},
  "Socket": function () {},
  "connect": {
    "Manager": function () {},
    "Socket": function () {},
    "connect": function () {},
    "managers": {},
    "protocol": {}
  },
  "managers": {},
  "protocol": {}
};
io.Manager.prototype = {
  "addEventListener": function () {},
  "cleanup": function () {},
  "close": function () {},
  "connect": function () {},
  "destroy": function () {},
  "disconnect": function () {},
  "emit": function () {},
  "emitAll": function () {},
  "generateId": function () {},
  "hasListeners": function () {},
  "listeners": function () {},
  "maybeReconnectOnOpen": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "onclose": function () {},
  "ondata": function () {},
  "ondecoded": function () {},
  "onerror": function () {},
  "onopen": function () {},
  "onping": function () {},
  "onpong": function () {},
  "onreconnect": function () {},
  "open": function () {},
  "packet": function () {},
  "processPacketQueue": function () {},
  "randomizationFactor": function () {},
  "reconnect": function () {},
  "reconnection": function () {},
  "reconnectionAttempts": function () {},
  "reconnectionDelay": function () {},
  "reconnectionDelayMax": function () {},
  "removeAllListeners": function () {},
  "removeEventListener": function () {},
  "removeListener": function () {},
  "socket": function () {},
  "timeout": function () {},
  "updateSocketIds": function () {}
};
io.Socket.prototype = {
  "ack": function () {},
  "addEventListener": function () {},
  "binary": function () {},
  "close": function () {},
  "compress": function () {},
  "connect": function () {},
  "destroy": function () {},
  "disconnect": function () {},
  "emit": function () {},
  "emitBuffered": function () {},
  "hasListeners": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "onack": function () {},
  "once": function () {},
  "onclose": function () {},
  "onconnect": function () {},
  "ondisconnect": function () {},
  "onevent": function () {},
  "onopen": function () {},
  "onpacket": function () {},
  "open": function () {},
  "packet": function () {},
  "removeAllListeners": function () {},
  "removeEventListener": function () {},
  "removeListener": function () {},
  "send": function () {},
  "subEvents": function () {}
};
io.connect.Manager.prototype = {
  "addEventListener": function () {},
  "cleanup": function () {},
  "close": function () {},
  "connect": function () {},
  "destroy": function () {},
  "disconnect": function () {},
  "emit": function () {},
  "emitAll": function () {},
  "generateId": function () {},
  "hasListeners": function () {},
  "listeners": function () {},
  "maybeReconnectOnOpen": function () {},
  "off": function () {},
  "on": function () {},
  "once": function () {},
  "onclose": function () {},
  "ondata": function () {},
  "ondecoded": function () {},
  "onerror": function () {},
  "onopen": function () {},
  "onping": function () {},
  "onpong": function () {},
  "onreconnect": function () {},
  "open": function () {},
  "packet": function () {},
  "processPacketQueue": function () {},
  "randomizationFactor": function () {},
  "reconnect": function () {},
  "reconnection": function () {},
  "reconnectionAttempts": function () {},
  "reconnectionDelay": function () {},
  "reconnectionDelayMax": function () {},
  "removeAllListeners": function () {},
  "removeEventListener": function () {},
  "removeListener": function () {},
  "socket": function () {},
  "timeout": function () {},
  "updateSocketIds": function () {}
};
io.connect.Socket.prototype = {
  "ack": function () {},
  "addEventListener": function () {},
  "binary": function () {},
  "close": function () {},
  "compress": function () {},
  "connect": function () {},
  "destroy": function () {},
  "disconnect": function () {},
  "emit": function () {},
  "emitBuffered": function () {},
  "hasListeners": function () {},
  "listeners": function () {},
  "off": function () {},
  "on": function () {},
  "onack": function () {},
  "once": function () {},
  "onclose": function () {},
  "onconnect": function () {},
  "ondisconnect": function () {},
  "onevent": function () {},
  "onopen": function () {},
  "onpacket": function () {},
  "open": function () {},
  "packet": function () {},
  "removeAllListeners": function () {},
  "removeEventListener": function () {},
  "removeListener": function () {},
  "send": function () {},
  "subEvents": function () {}
};
/**********************************************************************
 * End Generated Extern for io
/**********************************************************************/

// The generated externs don't expose the .connected and .disconnected
// properties of a Socket:

io.Socket.prototype.connected;
io.Socket.prototype.disconnected;

io.connect.Socket.prototype.connected;
io.connect.Socket.prototype.disconnected;
